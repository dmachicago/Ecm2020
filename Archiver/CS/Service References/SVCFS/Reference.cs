// VBConversions Note: VB project level imports
using System.Collections.Generic;
using System;
using System.Drawing;
using System.Linq;
using System.Diagnostics;
using System.Data;
using Microsoft.VisualBasic;
using MODI;
using System.Xml.Linq;
using System.Collections;
using System.Windows.Forms;
// End of VB project level imports

using System.Runtime.Serialization;

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace EcmArchiveClcSetup
{
	namespace SVCFS
	{
		
		[System.Diagnostics.DebuggerStepThroughAttribute(), System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"), System.Runtime.Serialization.DataContractAttribute(Name = "CompositeType", Namespace = "http://schemas.datacontract.org/2004/07/EcmClcArchiveWcfFS"), System.SerializableAttribute()]public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
		{
			
			[System.NonSerializedAttribute()]private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
			
			[System.Runtime.Serialization.OptionalFieldAttribute()]private bool BoolValueField;
			
			[System.Runtime.Serialization.OptionalFieldAttribute()]private string StringValueField;
			
			[global::System.ComponentModel.BrowsableAttribute(false)]public System.Runtime.Serialization.ExtensionDataObject ExtensionData
			{
				get
				{
					return this.extensionDataField;
				}
				set
				{
					this.extensionDataField = value;
				}
			}
			
			[System.Runtime.Serialization.DataMemberAttribute()]public bool BoolValue
			{
				get
				{
					return this.BoolValueField;
				}
				set
				{
					if (this.BoolValueField.Equals(value) != true)
					{
						this.BoolValueField = value;
						this.RaisePropertyChanged("BoolValue");
					}
				}
			}
			
			[System.Runtime.Serialization.DataMemberAttribute()]public string StringValue
			{
				get
				{
					return this.StringValueField;
				}
				set
				{
					if (object.ReferenceEquals(this.StringValueField, value) != true)
					{
						this.StringValueField = value;
						this.RaisePropertyChanged("StringValue");
					}
				}
			}
			
			private System.ComponentModel.PropertyChangedEventHandler PropertyChangedEvent;
			public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged
			{
				add
				{
					PropertyChangedEvent = (System.ComponentModel.PropertyChangedEventHandler) System.Delegate.Combine(PropertyChangedEvent, value);
				}
				remove
				{
					PropertyChangedEvent = (System.ComponentModel.PropertyChangedEventHandler) System.Delegate.Remove(PropertyChangedEvent, value);
				}
			}
			
			
			protected void RaisePropertyChanged(string propertyName)
			{
				System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChangedEvent;
				if ((propertyChanged) != null)
				{
					propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
				}
			}
		}
		
		[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"), System.ServiceModel.ServiceContractAttribute(ConfigurationName = "SVCFS.IService1")]public interface IService1
		{
			
			[System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/GetData", ReplyAction = "http://tempuri.org/IService1/GetDataResponse")]string GetData(int value);
			
			[System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction = "http://tempuri.org/IService1/GetDataUsingDataContractResponse")]SVCFS.CompositeType GetDataUsingDataContract(SVCFS.CompositeType composite);
			
			[System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/UploadFile", ReplyAction = "http://tempuri.org/IService1/UploadFileResponse")]void UploadFile(System.IO.Stream fileData);
			
			//CODEGEN: Generating message contract since the operation RemoteFileUpload is neither RPC nor document wrapped.
			[System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/RemoteFileUpload", ReplyAction = "http://tempuri.org/IService1/RemoteFileUploadResponse")]SVCFS.RemoteFileUploadResponse RemoteFileUpload(SVCFS.RemoteFileUploadMsg request);
			
			[System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService1/UploadZippedFile", ReplyAction = "http://tempuri.org/IService1/UploadZippedFileResponse")]void UploadZippedFile(System.IO.FileStream data);
		}
		
		[System.Diagnostics.DebuggerStepThroughAttribute(), System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"), System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced), System.ServiceModel.MessageContractAttribute(WrapperName = "RemoteFileUploadMsg", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]public partial class RemoteFileUploadMsg
		{
			
			[System.ServiceModel.MessageHeaderAttribute(Namespace = "http://tempuri.org/")]public string FileCrc;
			
			[System.ServiceModel.MessageHeaderAttribute(Namespace = "http://tempuri.org/")]public string FileGuid;
			
			[System.ServiceModel.MessageHeaderAttribute(Namespace = "http://tempuri.org/")]public long FileLength;
			
			[System.ServiceModel.MessageHeaderAttribute(Namespace = "http://tempuri.org/")]public string FileName;
			
			[System.ServiceModel.MessageHeaderAttribute(Namespace = "http://tempuri.org/")]public string FileType;
			
			[System.ServiceModel.MessageHeaderAttribute(Namespace = "http://tempuri.org/")]public string UID;
			
			[System.ServiceModel.MessageHeaderAttribute(Namespace = "http://tempuri.org/")]public bool bCompressed;
			
			[System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]public System.IO.Stream data;
			
			public RemoteFileUploadMsg()
			{
			}
			
			public RemoteFileUploadMsg(string FileCrc, string FileGuid, long FileLength, string FileName, string FileType, string UID, bool bCompressed, System.IO.Stream data)
			{
				this.FileCrc = FileCrc;
				this.FileGuid = FileGuid;
				this.FileLength = FileLength;
				this.FileName = FileName;
				this.FileType = FileType;
				this.UID = UID;
				this.bCompressed = bCompressed;
				this.data = data;
			}
		}
		
		[System.Diagnostics.DebuggerStepThroughAttribute(), System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"), System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced), System.ServiceModel.MessageContractAttribute(IsWrapped = false)]public partial class RemoteFileUploadResponse
		{
			
			public RemoteFileUploadResponse()
			{
			}
		}
		
		[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]public interface IService1Channel : SVCFS.IService1,System.ServiceModel.IClientChannel
		{
		}
		
		[System.Diagnostics.DebuggerStepThroughAttribute(), System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]public partial class Service1Client : System.ServiceModel.ClientBase<SVCFS.IService1>, SVCFS.IService1
		{
			
			public Service1Client()
			{
			}
			
			public Service1Client(string endpointConfigurationName) : base(endpointConfigurationName)
			{
			}
			
			public Service1Client(string endpointConfigurationName, string remoteAddress) : base(endpointConfigurationName, remoteAddress)
			{
			}
			
			public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : base(endpointConfigurationName, remoteAddress)
			{
			}
			
			public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : base(binding, remoteAddress)
			{
			}
			
			public string GetData(int value)
			{
				return base.Channel.GetData(value);
			}
			
			public SVCFS.CompositeType GetDataUsingDataContract(SVCFS.CompositeType composite)
			{
				return base.Channel.GetDataUsingDataContract(composite);
			}
			
			public void UploadFile(System.IO.Stream fileData)
			{
				base.Channel.UploadFile(fileData);
			}
			
			[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]public SVCFS.RemoteFileUploadResponse RemoteFileUpload(SVCFS.RemoteFileUploadMsg request)
			{
				return this.SVCFS_IService1_RemoteFileUpload(request);
			}
			
			public SVCFS.RemoteFileUploadResponse SVCFS_IService1_RemoteFileUpload(SVCFS.RemoteFileUploadMsg request)
			{
				return base.Channel.RemoteFileUpload(request);
			}
			
			public void RemoteFileUpload(string FileCrc, string FileGuid, long FileLength, string FileName, string FileType, string UID, bool bCompressed, System.IO.Stream data)
			{
				SVCFS.RemoteFileUploadMsg inValue = new SVCFS.RemoteFileUploadMsg();
				inValue.FileCrc = FileCrc;
				inValue.FileGuid = FileGuid;
				inValue.FileLength = FileLength;
				inValue.FileName = FileName;
				inValue.FileType = FileType;
				inValue.UID = UID;
				inValue.bCompressed = bCompressed;
				inValue.data = data;
				SVCFS.RemoteFileUploadResponse retVal = ((SVCFS.IService1) this).RemoteFileUpload(inValue);
			}
			
			public void UploadZippedFile(System.IO.FileStream data)
			{
				base.Channel.UploadZippedFile(data);
			}
		}
	}
	
}
