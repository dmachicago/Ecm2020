USE [SMART]
GO

/****** Object:  View [dbo].[vGLOBAL_BI_EXTRACT]    Script Date: 06/18/2011 12:18:00 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [dbo].vGLOBAL_BI_EXTRACT_MIRROR 
AS
-- View for all ALPHA Customer, Item and Sales Information. Provides 
-- local ALPHA view of 
-- all the data to be used by entity level security. Users from
-- ALPHA can only see this data

-- 9/22/2008 Removed the hard coded hierarchy IDs from join clause.

SELECT  -- (I.ITEM_KEY),
        S.SRC_SYS_ID,
        'N/A' AS Entity_ID,
    	-- I.EFF_END_DTTM Item_End_DateTime,
    	-- I.EFF_START_DTTM Item_Start_Datetime,
    	-- I.CURRENT_IND Item_indicator,
    	-- I.DELETE_IND Item_Delete_Indicator,
    	-- I.INFERRED_IND Item_Inferred_Indicator,
    	-- I.UPDATE_DTTM Item_Update_Datetime,
    	-- I.RECORD_ID Item_Record_Id,
    	-- I.ITEM_CLASS_KEY,
    	-- I.TARIFF_KEY Item_Tariff_Key,
    	-- I.HARMONIZATION_KEY Item_Harmonization_Key,
    	-- I.DFLT_LOC_KEY Item_Default_Location_Key,
    	I.ITEM_NBR Item_Number,
    	I.DESCR_LN1 Item_Description1,
    	I.DESCR_LN2 Item_Description2,
    	I.STOCK_UM Item_Stock_UM,
    	-- I.PURCH_UM Item_Purchase_UM,
    	I.STOCK_UM_CONV Item_Stock_UM_Conversion,
    	I.ITEM_TYPE,
    	-- I.DISCNT_CD Item_Distinct_Code,
    	-- I.ABC_INVENTORY_CD Item_ABC_Inventory_Code,
    	-- I.NPD_DT Item_NPD_Date,
    	-- I.PLANNER_CD Item_Planner_Code,
    	I.SELL_UM Item_Sell_UM,
    	I.SELL_UM_CONV Item_Sell_UM_Conversion,
    	-- I.LOT_CTRL_PROD Item_LOT_CTRL_Prod,
    	-- I.JIT_CD Item_JIT_Code,
    	-- I.ITEM_GRP1 Item_Group1,
    	I.COUNTRY_CD Item_Country_Code,
    	-- I.LENGTH Item_Length,
    	-- I.LENGTH_UM Item_Length_UM,
    	-- I.WIDTH Item_Width,
    	-- I.WIDTH_UM Item_Width_UM,
    	-- I.HEIGHT Item_Height,
    	-- I.HEIGHT_UM Item_Height_UM,
    	-- I.ANNEX_NBR Item_Annexx_Number,
    	I.COPPER_WEIGHT Item_Copper_Weight,
    	-- I.CMS_ABBR Item_CMS_Abbrevation,
    	I.COLOR_CD Item_Color_Code,
    	I.PUTUP Item_Putup,
    	I.PUTUP_UM Item_Putup_UM,
    	I.PACKAGE Item_Package,
    	I.PRODUCT_CD Item_Product_Code,
    	-- I.PRIM_FAC_KEY Item_Primary_Facility_Key,
    	-- I.CELL_NBR Item_Cell_Number,
		CASE WHEN (I.SRC_SYS_ID = 'STDMWP' OR (I.SRC_SYS_ID='BPCSMH' AND (S.FREIGHT_AMT > 0 OR S.SERV_CHRG_AMT > 0)) OR (I.FINISH_FLG IS NULL)) THEN 'Y' ELSE I.FINISH_FLG END Item_Finish_Flag,
--Added Global Hierarchy and Attributes
		H.LEVEL01_NAME GIHGIA_Product_Category,
		H.LEVEL02_CD GIHGIA_Product_Segment,	
    	IH.PRODUCT GIHGIA_Product,
    	IH.PERFORMANCE GIHGIA_Performance,
    	IH.MATERIAL GIHGIA_Material,
    	IH.PRIMARY_MKT GIHGIA_Primary_Vertical_Market,
    	IH.ENVIROMENT GIHGIA_Environment,
    	IH.BRAND GIHGIA_Brand,
    	IH.SPC_STD_FLG GIHGIA_STD_Special_Flag,
    	-- IH.NORM_FACTOR GIHGIA_NORM_FACTOR,	
		NULL AS PRODUCT_DIVISION,

	NULL AMERICAS_SALESINCENTIVE_RECAP_1,
	NULL AMERICAS_SALESINCENTIVE_RECAP_2,
	NULL AMERICAS_SALESINCENTIVE_CLASS,
	NULL AMERICAS_SALESINCENTIVE_COPPER_ADJ,


	IC.PRODUCT_GRP Product_Group,
	IC.SCPG AMERICAS_SCPG,
	IC.ITEM_CLASS ITEM_CLASS,
	NULL AMERICAS_ITEM_FAMILY,
	NULL AMERICAS_DIVISION_NAME,
	NULL AMERICAS_MARKET_NAME,
	
	-- S.UPDATE_DTTM SALES_UPDATE_DATETIME,
	-- S.ITEM_KEY SALES_ITEM_KEY,
	-- S.TIME_KEY SALES_TIME_KEY,
	-- S.CUSTOMER_KEY SALES_CUSTOMER_KEY,
	-- S.ORGANIZATION_KEY SALES_ORGANIZATION_KEY,
	S.TRX_TYPE SALES_TRANSACTION_TYPE,
	S.QUANTITY SALES_QUANTITY,
	S.NET_PRICE,
	S.BILLING_NET_PRICE,
-- S.GROSS_SALE_AMT,
	
	CASE WHEN (S.SRC_SYS_ID = 'BPCSMH') THEN
		(S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT + S.FREIGHT_AMT + S.SERV_CHRG_AMT)
	ELSE	
		CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN
			CASE WHEN ((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT <> S.FREIGHT_AMT) OR S.SRC_SYS_ID = 'STDMWP') THEN 
				(S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT)
			ELSE
				(S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT - S.FREIGHT_AMT)
			END
		ELSE
			(S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT) * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT)
		END
	END GROSS_SALE_AMT,	
	
	CASE WHEN (S.SRC_SYS_ID = 'BPCSMH') THEN
		((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT + S.FREIGHT_AMT + S.SERV_CHRG_AMT)+S.SND_ADJUST_AMT+S.OTH_ADJUST_AMT+S.CREDIT_RMA_AMT+S.ALLOWANCE_AMT)
	ELSE	
		CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN
			CASE WHEN ((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT <> 0 AND S.FREIGHT_AMT <> 0) AND (I.SRC_SYS_ID='BPCSRI' OR I.SRC_SYS_ID='BPCSCO')) THEN 
				((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT - FREIGHT_AMT)+S.SND_ADJUST_AMT+S.OTH_ADJUST_AMT+S.CREDIT_RMA_AMT+S.ALLOWANCE_AMT)
			ELSE
				CASE WHEN ((S.CREDIT_RMA_AMT <> 0 AND S.SERV_CHRG_AMT <> 0) AND (I.SRC_SYS_ID='BPCSRI' OR I.SRC_SYS_ID='BPCSCO')) THEN
					0
				ELSE
					((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT)+S.SND_ADJUST_AMT+S.OTH_ADJUST_AMT+S.CREDIT_RMA_AMT+S.ALLOWANCE_AMT)
				END			
			END		
		ELSE
			((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT)+S.SND_ADJUST_AMT+S.OTH_ADJUST_AMT+S.CREDIT_RMA_AMT+S.ALLOWANCE_AMT) * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT)
		END
	END NET_BILLING_AMT,
	
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN CASE WHEN (S.CUST_SALE_AMT <> S.FREIGHT_AMT ) THEN S.CUST_SALE_AMT ELSE 0 END ELSE S.CUST_SALE_AMT  * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT) END CUST_SALE_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN CASE WHEN (S.INTER_SALE_AMT <> S.FREIGHT_AMT) THEN S.INTER_SALE_AMT ELSE 0 END ELSE S.INTER_SALE_AMT * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT) END INTER_SALE_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN CASE WHEN (S.INTRA_SALE_AMT <> S.FREIGHT_AMT) THEN S.INTRA_SALE_AMT ELSE 0 END ELSE S.INTRA_SALE_AMT * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT) END INTRA_SALE_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN S.FREIGHT_AMT ELSE S.FREIGHT_AMT * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT) END FREIGHT_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN S.SERV_CHRG_AMT ELSE S.SERV_CHRG_AMT * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT) END SERV_CHRG_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN S.SND_ADJUST_AMT ELSE S.SND_ADJUST_AMT * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT) END SND_ADJUST_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN S.OTH_ADJUST_AMT ELSE S.OTH_ADJUST_AMT * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT) END OTH_ADJUST_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN S.REBATE_AMT ELSE S.REBATE_AMT * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT) END REBATE_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN CASE WHEN (S.CREDIT_RMA_AMT <> S.SERV_CHRG_AMT) THEN S.CREDIT_RMA_AMT ELSE 0 END ELSE S.CREDIT_RMA_AMT * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT) END CREDIT_RMA_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN S.ALLOWANCE_AMT ELSE S.ALLOWANCE_AMT * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT) END ALLOWANCE_AMT,
	S.LOC_FSTD_CST_AMT,
	S.LOC_MAT_CST_AMT,
	S.LOC_SCRAP_CST_AMT,
	S.LOC_LABOR_CST_AMT,
	S.LOC_OHEAD_CST_AMT,
	/*CASE WHEN (STDC.STD_TOTAL_COST IS NOT NULL) THEN STDC.STD_TOTAL_COST * S.QUANTITY ELSE 0 END STD_TOTAL_COST,
	CASE WHEN (STDC.STD_MATERIAL_COST IS NOT NULL) THEN STDC.STD_MATERIAL_COST * S.QUANTITY ELSE 0 END STD_MATERIAL_COST,
	CASE WHEN (STDC.STD_SCRAP_COST IS NOT NULL) THEN STDC.STD_SCRAP_COST * S.QUANTITY ELSE 0 END STD_SCRAP_COST,
	CASE WHEN (STDC.STD_LABOR_COST IS NOT NULL) THEN STDC.STD_LABOR_COST * S.QUANTITY ELSE 0 END STD_LABOR_COST,
	CASE WHEN (STDC.STD_OHEAD_COST IS NOT NULL) THEN STDC.STD_OHEAD_COST * S.QUANTITY ELSE 0 END STD_OHEAD_COST,
	*/
	S.LOC_RMCC_AMT,
	S.GBL_FSTD_CST_AMT,
	S.GBL_RMCC_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN ((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT + CREDIT_RMA_AMT + S.SND_ADJUST_AMT + S.OTH_ADJUST_AMT) - S.LOC_FSTD_CST_AMT) ELSE ((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT + CREDIT_RMA_AMT + S.SND_ADJUST_AMT + S.OTH_ADJUST_AMT) * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT) - S.LOC_FSTD_CST_AMT) END LOC_STD_MARGIN_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN ((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT+S.SND_ADJUST_AMT+S.OTH_ADJUST_AMT+S.CREDIT_RMA_AMT+S.ALLOWANCE_AMT)- S.LOC_RMCC_AMT) ELSE ((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT+S.SND_ADJUST_AMT+S.OTH_ADJUST_AMT+S.CREDIT_RMA_AMT+S.ALLOWANCE_AMT) * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT)- S.LOC_RMCC_AMT) END LOC_RMCM_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN ((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT+S.SND_ADJUST_AMT+S.OTH_ADJUST_AMT+S.CREDIT_RMA_AMT+S.ALLOWANCE_AMT)- S.CU_TOTAL_WEIGHT * (S.CU_AVG_PRICE - 1.487)) ELSE ((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT+S.SND_ADJUST_AMT+S.OTH_ADJUST_AMT+S.CREDIT_RMA_AMT+S.ALLOWANCE_AMT) * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT)- S.CU_TOTAL_WEIGHT * (S.CU_AVG_PRICE - 1.487)) END LOC_RMCR_AMT,
	S.CU_SURCHARGE,
	S.CU_AVG_PRICE,
	S.EXTD_QTY_FT,
	S.CU_TOTAL_WEIGHT,
	-- S.VITALITY,
	S.CU_STD_PRICE,
	0.0 AS AG_AVG_PRICE,
	0.0 AS AG_STD_PRICE,
	0.0 AS AG_TOTAL_WEIGHT,
	S.EXTD_QTY_MT,
	S.QTY_PIECE,
	S.LOC_CURRENCY,
	S.UNIT_OF_MEASURE,
	S.INVOICE_NBR,
	NULL AS INVOICE_LN_NBR,
	NULL AS FIN_REASON_CD,
	S.TO_LOC_CURR_RATE,
	0.0 AS TO_EUR_RATE,
	-- S.TIME_KEY,	
	-- C.CUSTOMER_KEY,
    -- C.EFF_START_DTTM  CUST_EFFECTIVE_START_DT,
	-- C.EFF_END_DTTM  CUST_EFFECTIVE_END_DT,
	-- C.CURRENT_IND CUST_CURRENT_FLAG,
	-- C.DELETE_IND CUST_DELETE_FLAG,
	-- C.INFERRED_IND CUST_INFERRED_FLAG,
	-- C.UPDATE_DTTM CUST_UPDATE_DATETIME,
	C.CUSTOMER_NBR CUST_nUMBER,
	C.NAME CUST_NAME,
	C.BILL_ADDR_LN1 CUST_Bill_ADDRESS1,
	C.BILL_ADDR_LN2 Bill_CUST_ADDRESS2,
	C.BILL_ADDR_LN3 Bill_CUST_ADDRESS3,
	C.BILL_CITY CUST_BILL_CITY,
	C.BILL_STATE_CD CUST_BILL_STATE,
	C.BILL_POSTAL_CD CUST_BILL_ZIP,
	C.BILL_COUNTRY_CD CUST_COUNTRY_CODE,
	C.COMPANY_NBR CUST_COMPANY_NAME,
	C.ROUTE_CD CUST_ROUTE_CODE,
	C.SALES_PERSON CUST_SALES_PERSON,
	C.DIVISION CUST_DIVISION,
	C.REGION CUST_REGION,
	'N/A' AMERICAS_SALESCON_NAME,
	'N/A' AMERICAS_SALESCON_NUMBER,
	C.SALES_CUST_NBR CUST_SALES_NUMBER,
	C.TERRITORY CUST_TERRITORY,
	C.PREFIX_CD CUST_PREFIX_CODE,
	C.FREIGHT_TERM_CD CUST_FREIGHT_TERM_CODE,
	C.SHIPPING_OFFICER CUST_SHIPPING_OFFICER,
	C.CUST_HOLD_CD CUST_HOLD_CODE,
	C.HEAD_CORP_PRNT CUST_HEAD_CORP_PRINT,
	C.CORP_PRNT CUST_CORP_PRINT,
	CT.CUSTOMER_TYPE CUST_TYPE,
	CASE WHEN NOT CH.LEVEL01_NAME IS NULL THEN CH.LEVEL01_NAME ELSE 'NO_GBL_PARENT' END CUST_GLOBAL,
	CASE WHEN NOT CH.LEVEL02_NAME IS NULL THEN CH.LEVEL02_NAME ELSE 'NO_GBL_PARENT' END CUST_GLOBAL_BU_LEVEL1,
	CASE WHEN NOT CH.LEVEL04_NAME IS NULL THEN CH.LEVEL04_NAME ELSE 'NO_GBL_PARENT' END CUST_GLOBAL_BU_LEVEL2,
	CASE WHEN NOT CH.LEVEL03_NAME IS NULL THEN CH.LEVEL03_NAME ELSE 'NO_GBL_PARENT' END CUST_GLOBAL_CHANNEL_CATEGORY,
	CASE WHEN NOT CH.LEVEL05_NAME IS NULL THEN CH.LEVEL05_NAME ELSE 'NO_GBL_PARENT' END CUST_GLOBAL_REGION,
	-- T.DATE,
    -- T.YEAR,
	-- T.QUARTER,
	-- T.MONTH,
    -- T.MONTH_NAME,
    -- T.DAY,
    T.FISCAL_YEAR,
    T.FISCAL_QUARTER,
	T.FISCAL_PERIOD,
	T.FISCAL_PERIOD_NAME,
	DATEPART(week, CAST(T.DATE AS smalldatetime) -1) FISCAL_WEEK,
	-- (SELECT FISCAL_PERIOD FROM DM_D_CALENDAR WHERE TIME_KEY=convert(int,convert(varchar(8),getdate(),112))) CURRENT_PERIOD,
	-- (SELECT FISCAL_YEAR FROM DM_D_CALENDAR WHERE TIME_KEY=convert(int,convert(varchar(8),getdate(),112))) CURRENT_YEAR,
    T.DAY_OF_WEEK,
    T.WEEKEND_FLG,
    T.HOLIDAY_FLG
    -- T.AUDIT_FLG
FROM MIRROR_DW_DM_F_SALES_SUMMARY S
JOIN MIRROR_DW_DM_D_ITEM I ON I.ITEM_KEY=S.ITEM_KEY  
JOIN MIRROR_DW_DM_D_CUSTOMER C  ON C.CUSTOMER_KEY=S.CUSTOMER_KEY
JOIN MIRROR_DW_DM_D_CUSTOMER_TYPE CT  ON C.CUST_TYPE_KEY=CT.CUST_TYPE_KEY
JOIN MIRROR_DW_DM_D_CALENDAR T ON T.TIME_KEY=S.TIME_KEY

LEFT OUTER JOIN MIRROR_DW_DM_D_ITEM_CLASS IC ON IC.ITEM_CLASS_KEY = I.ITEM_CLASS_KEY
LEFT OUTER JOIN (
	SELECT H2.SRC_SYS_ID, H2.ITEM_NBR, H2.LEVEL01_NAME, H2.LEVEL02_NAME, H2.LEVEL02_CD 
		FROM MIRROR_DW_DM_H_ITEM h2
		INNER JOIN MIRROR_DW_DM_L_HIERARCHY l1 ON h2.Hierarchy_Id=l1.Hierarchy_Id
		WHERE H2.Current_Ind = 'Y' AND H2.Delete_Ind = 'N' AND l1.NAME='ITEM_GL'
) h ON h.ITEM_NBR = I.ITEM_NBR AND h.SRC_SYS_ID = S.SRC_SYS_ID


LEFT OUTER JOIN (SELECT CASE WHEN SRC_SYS_ID= 'TEXTAL' THEN 'BPCSAL'
                             WHEN SRC_SYS_ID= 'TEXTAS' THEN 'ASIASR'
                             WHEN SRC_SYS_ID= 'TEXTCO' THEN 'BPCSCO'
                             WHEN SRC_SYS_ID= 'TEXTEU' THEN 'BPCSEU'
                             WHEN SRC_SYS_ID= 'TEXTMH' THEN 'BPCSMH'
                             WHEN SRC_SYS_ID= 'TEXTRI' THEN 'BPCSRI'
                             WHEN SRC_SYS_ID= 'TEXTTM' THEN 'THERMX'
                             WHEN SRC_SYS_ID= 'TEXTWP' THEN 'STDMWP' END AS SRC_SYS_ID,
							 ACCT_NBR AS CUSTOMER_NBR,
							 GBL_NAME AS LEVEL01_NAME,
							 GBL_DIV AS LEVEL02_NAME,
							 CH_CATG AS LEVEL03_NAME,
							 CHR_ATTR1 AS LEVEL04_NAME,
							 CHR_ATTR2 AS LEVEL05_NAME FROM SMART.dbo.TPR_TXT_GBL_ACCOUNT h3 WHERE H3.Current_Ind = 'Y') ch ON ch.CUSTOMER_NBR = C.CUSTOMER_NBR AND ch.SRC_SYS_ID = S.SRC_SYS_ID							 

/*
-- Removed hard coded h2.Hierarchy_Id=15 and replaced it with a look up.  RLL 9/22/2008
LEFT OUTER JOIN (
	SELECT H3.SRC_SYS_ID, H3.CUSTOMER_NBR, H3.LEVEL01_NAME, H3.LEVEL02_NAME 
		FROM DM_H_CUSTOMER h3
		INNER JOIN DM_L_HIERARCHY l2 ON h3.Hierarchy_Id = l2.Hierarchy_Id
		WHERE H3.Current_Ind = 'Y' and H3.Delete_Ind = 'N' AND l2.Name = 'CUST_GL'
) ch ON ch.CUSTOMER_NBR = C.CUSTOMER_NBR AND ch.SRC_SYS_ID = S.SRC_SYS_ID
*/
--WDM
LEFT OUTER JOIN (SELECT H4.SRC_SYS_ID, H4.ITEM_NBR, H4.PRODUCT,H4.PERFORMANCE, H4.MATERIAL, H4.PRIMARY_MKT, H4.ENVIROMENT, H4.BRAND, H4.SPC_STD_FLG, H4.NORM_FACTOR FROM MIRROR_DW_DM_D_ITEM H4
 WHERE H4.Current_Ind = 'Y') ih ON ih.ITEM_NBR = I.ITEM_NBR AND ih.SRC_SYS_ID = S.SRC_SYS_ID
WHERE NOT S.SRC_SYS_ID  IN ('BPCSRI', 'BPCSCO', 'BPCSMH', 'BPCSAL', 'THERMX', 'STDMWP')

UNION ALL

SELECT  -- (I.ITEM_KEY),
        S.SRC_SYS_ID,
		'N/A' AS Entity_ID,
    	-- I.EFF_END_DTTM Item_End_DateTime,
    	-- I.EFF_START_DTTM Item_Start_Datetime,
    	-- I.CURRENT_IND Item_indicator,
    	-- I.DELETE_IND Item_Delete_Indicator,
    	-- I.INFERRED_IND Item_Inferred_Indicator,
    	-- I.UPDATE_DTTM Item_Update_Datetime,
    	-- I.RECORD_ID Item_Record_Id,
    	-- I.ITEM_CLASS_KEY,
    	-- I.TARIFF_KEY Item_Tariff_Key,
    	-- I.HARMONIZATION_KEY Item_Harmonization_Key,
    	-- I.DFLT_LOC_KEY Item_Default_Location_Key,
    	I.ITEM_NBR Item_Number,
    	I.DESCR_LN1 Item_Description1,
    	I.DESCR_LN2 Item_Description2,
    	I.STOCK_UM Item_Stock_UM,
    	-- I.PURCH_UM Item_Purchase_UM,
    	I.STOCK_UM_CONV Item_Stock_UM_Conversion,
    	I.ITEM_TYPE,
    	-- I.DISCNT_CD Item_Distinct_Code,
    	-- I.ABC_INVENTORY_CD Item_ABC_Inventory_Code,
    	-- I.NPD_DT Item_NPD_Date,
    	-- I.PLANNER_CD Item_Planner_Code,
    	I.SELL_UM Item_Sell_UM,
    	I.SELL_UM_CONV Item_Sell_UM_Conversion,
    	-- I.LOT_CTRL_PROD Item_LOT_CTRL_Prod,
    	-- I.JIT_CD Item_JIT_Code,
    	-- I.ITEM_GRP1 Item_Group1,
    	I.COUNTRY_CD Item_Country_Code,
    	-- I.LENGTH Item_Length,
    	-- I.LENGTH_UM Item_Length_UM,
    	-- I.WIDTH Item_Width,
    	-- I.WIDTH_UM Item_Width_UM,
    	-- I.HEIGHT Item_Height,
    	-- I.HEIGHT_UM Item_Height_UM,
    	-- I.ANNEX_NBR Item_Annexx_Number,
    	I.COPPER_WEIGHT Item_Copper_Weight,
    	-- I.CMS_ABBR Item_CMS_Abbrevation,
    	I.COLOR_CD Item_Color_Code,
    	I.PUTUP Item_Putup,
    	I.PUTUP_UM Item_Putup_UM,
    	I.PACKAGE Item_Package,
    	I.PRODUCT_CD Item_Product_Code,
    	-- I.PRIM_FAC_KEY Item_Primary_Facility_Key,
    	-- I.CELL_NBR Item_Cell_Number,
		CASE WHEN (I.SRC_SYS_ID = 'STDMWP' OR (I.SRC_SYS_ID='BPCSMH' AND (S.FREIGHT_AMT > 0 OR S.SERV_CHRG_AMT > 0)) OR (I.FINISH_FLG IS NULL)) THEN 'Y' ELSE I.FINISH_FLG END Item_Finish_Flag,
--Added Global Hierarchy and Attributes
		H.LEVEL01_NAME GIHGIA_Product_Category,
		H.LEVEL02_CD GIHGIA_Product_Segment,	
    	IH.PRODUCT GIHGIA_Product,
    	IH.PERFORMANCE GIHGIA_Performance,
    	IH.MATERIAL GIHGIA_Material,
    	IH.PRIMARY_MKT GIHGIA_Primary_Vertical_Market,
    	IH.ENVIROMENT GIHGIA_Environment,
    	IH.BRAND GIHGIA_Brand,
    	IH.SPC_STD_FLG GIHGIA_STD_Special_Flag,
    	-- IH.NORM_FACTOR GIHGIA_NORM_FACTOR,	
		NULL AS PRODUCT_DIVISION,

	NULL AMERICAS_SALESINCENTIVE_RECAP_1,
	NULL AMERICAS_SALESINCENTIVE_RECAP_2,
	NULL AMERICAS_SALESINCENTIVE_CLASS,
	NULL AMERICAS_SALESINCENTIVE_COPPER_ADJ,
	NULL AMERICAS_MARKET_NAME,

	IC.PRODUCT_GRP Product_Group,
	IC.SCPG AMERICAS_SCPG,
	IC.ITEM_CLASS ITEM_CLASS,
	NULL AMERICAS_ITEM_FAMILY,
	NULL AMERICAS_DIVISION_NAME,
	
	-- S.UPDATE_DTTM SALES_UPDATE_DATETIME,
	-- S.ITEM_KEY SALES_ITEM_KEY,
	-- S.TIME_KEY SALES_TIME_KEY,
	-- S.CUSTOMER_KEY SALES_CUSTOMER_KEY,
	-- S.ORGANIZATION_KEY SALES_ORGANIZATION_KEY,
	S.TRX_TYPE SALES_TRANSACTION_TYPE,
	S.QUANTITY SALES_QUANTITY,
	S.NET_PRICE,
	S.BILLING_NET_PRICE,
-- S.GROSS_SALE_AMT,
	
	CASE WHEN (S.SRC_SYS_ID = 'BPCSMH') THEN
		(S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT + S.FREIGHT_AMT + S.SERV_CHRG_AMT)
	ELSE	
		CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN
			CASE WHEN ((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT <> S.FREIGHT_AMT) OR S.SRC_SYS_ID = 'STDMWP') THEN 
				(S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT)
			ELSE
				(S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT - S.FREIGHT_AMT)
			END
		ELSE
			(S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT) * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT)
		END
	END GROSS_SALE_AMT,	
	
	CASE WHEN (S.SRC_SYS_ID = 'BPCSMH') THEN
		((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT + S.FREIGHT_AMT + S.SERV_CHRG_AMT)+S.SND_ADJUST_AMT+S.OTH_ADJUST_AMT+S.CREDIT_RMA_AMT+S.ALLOWANCE_AMT)
	ELSE	
		CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN
			CASE WHEN ((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT <> 0 AND S.FREIGHT_AMT <> 0) AND (I.SRC_SYS_ID='BPCSRI' OR I.SRC_SYS_ID='BPCSCO')) THEN 
				((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT - FREIGHT_AMT)+S.SND_ADJUST_AMT+S.OTH_ADJUST_AMT+S.CREDIT_RMA_AMT+S.ALLOWANCE_AMT)
			ELSE
				CASE WHEN ((S.CREDIT_RMA_AMT <> 0 AND S.SERV_CHRG_AMT <> 0) AND (I.SRC_SYS_ID='BPCSRI' OR I.SRC_SYS_ID='BPCSCO')) THEN
					0
				ELSE
					((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT)+S.SND_ADJUST_AMT+S.OTH_ADJUST_AMT+S.CREDIT_RMA_AMT+S.ALLOWANCE_AMT)
				END			
			END		
		ELSE
			((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT)+S.SND_ADJUST_AMT+S.OTH_ADJUST_AMT+S.CREDIT_RMA_AMT+S.ALLOWANCE_AMT) * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT)
		END
	END NET_BILLING_AMT,
	
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN CASE WHEN (S.CUST_SALE_AMT <> S.FREIGHT_AMT ) THEN S.CUST_SALE_AMT ELSE 0 END ELSE S.CUST_SALE_AMT  * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT) END CUST_SALE_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN CASE WHEN (S.INTER_SALE_AMT <> S.FREIGHT_AMT) THEN S.INTER_SALE_AMT ELSE 0 END ELSE S.INTER_SALE_AMT * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT) END INTER_SALE_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN CASE WHEN (S.INTRA_SALE_AMT <> S.FREIGHT_AMT) THEN S.INTRA_SALE_AMT ELSE 0 END ELSE S.INTRA_SALE_AMT * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT) END INTRA_SALE_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN S.FREIGHT_AMT ELSE S.FREIGHT_AMT * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT) END FREIGHT_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN S.SERV_CHRG_AMT ELSE S.SERV_CHRG_AMT * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT) END SERV_CHRG_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN S.SND_ADJUST_AMT ELSE S.SND_ADJUST_AMT * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT) END SND_ADJUST_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN S.OTH_ADJUST_AMT ELSE S.OTH_ADJUST_AMT * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT) END OTH_ADJUST_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN S.REBATE_AMT ELSE S.REBATE_AMT * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT) END REBATE_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN CASE WHEN (S.CREDIT_RMA_AMT <> S.SERV_CHRG_AMT) THEN S.CREDIT_RMA_AMT ELSE 0 END ELSE S.CREDIT_RMA_AMT * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT) END CREDIT_RMA_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN S.ALLOWANCE_AMT ELSE S.ALLOWANCE_AMT * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT) END ALLOWANCE_AMT,
	S.LOC_FSTD_CST_AMT,
	S.LOC_MAT_CST_AMT,
	S.LOC_SCRAP_CST_AMT,
	S.LOC_LABOR_CST_AMT,
	S.LOC_OHEAD_CST_AMT,
	/*CASE WHEN (STDC.STD_TOTAL_COST IS NOT NULL) THEN STDC.STD_TOTAL_COST * S.QUANTITY ELSE 0 END STD_TOTAL_COST,
	CASE WHEN (STDC.STD_MATERIAL_COST IS NOT NULL) THEN STDC.STD_MATERIAL_COST * S.QUANTITY ELSE 0 END STD_MATERIAL_COST,
	CASE WHEN (STDC.STD_SCRAP_COST IS NOT NULL) THEN STDC.STD_SCRAP_COST * S.QUANTITY ELSE 0 END STD_SCRAP_COST,
	CASE WHEN (STDC.STD_LABOR_COST IS NOT NULL) THEN STDC.STD_LABOR_COST * S.QUANTITY ELSE 0 END STD_LABOR_COST,
	CASE WHEN (STDC.STD_OHEAD_COST IS NOT NULL) THEN STDC.STD_OHEAD_COST * S.QUANTITY ELSE 0 END STD_OHEAD_COST,
	*/
	S.LOC_RMCC_AMT,
	S.GBL_FSTD_CST_AMT,
	S.GBL_RMCC_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN ((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT + CREDIT_RMA_AMT + S.SND_ADJUST_AMT + S.OTH_ADJUST_AMT) - S.LOC_FSTD_CST_AMT) ELSE ((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT + CREDIT_RMA_AMT + S.SND_ADJUST_AMT + S.OTH_ADJUST_AMT) * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT) - S.LOC_FSTD_CST_AMT) END LOC_STD_MARGIN_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN ((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT+S.SND_ADJUST_AMT+S.OTH_ADJUST_AMT+S.CREDIT_RMA_AMT+S.ALLOWANCE_AMT)- S.LOC_RMCC_AMT) ELSE ((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT+S.SND_ADJUST_AMT+S.OTH_ADJUST_AMT+S.CREDIT_RMA_AMT+S.ALLOWANCE_AMT) * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT)- S.LOC_RMCC_AMT) END LOC_RMCM_AMT,
	CASE WHEN (S.SRC_SYS_ID <> 'STDMLT' OR S.INVLN_SALE_AMT = 0) THEN ((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT+S.SND_ADJUST_AMT+S.OTH_ADJUST_AMT+S.CREDIT_RMA_AMT+S.ALLOWANCE_AMT)- S.CU_TOTAL_WEIGHT * (S.CU_AVG_PRICE - 1.487)) ELSE ((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT+S.SND_ADJUST_AMT+S.OTH_ADJUST_AMT+S.CREDIT_RMA_AMT+S.ALLOWANCE_AMT) * (S.TO_LOC_CURR_RATE / S.INVLN_SALE_AMT)- S.CU_TOTAL_WEIGHT * (S.CU_AVG_PRICE - 1.487)) END LOC_RMCR_AMT,
	S.CU_SURCHARGE,
	S.CU_AVG_PRICE,
	S.EXTD_QTY_FT,
	S.CU_TOTAL_WEIGHT,
	-- S.VITALITY,
	S.CU_STD_PRICE,
	0.0 AS AG_AVG_PRICE,
	0.0 AS AG_STD_PRICE,
	0.0 AS AG_TOTAL_WEIGHT,
	S.EXTD_QTY_MT,
	S.QTY_PIECE,
	S.LOC_CURRENCY,
	S.UNIT_OF_MEASURE,
	S.INVOICE_NBR,
	NULL AS INVOICE_LN_NBR,
	NULL AS FIN_REASON_CD,
	S.TO_LOC_CURR_RATE,
	0.0 AS TO_EUR_RATE,
	-- S.TIME_KEY,	
	-- C.CUSTOMER_KEY,
    -- C.EFF_START_DTTM  CUST_EFFECTIVE_START_DT,
	-- C.EFF_END_DTTM  CUST_EFFECTIVE_END_DT,
	-- C.CURRENT_IND CUST_CURRENT_FLAG,
	-- C.DELETE_IND CUST_DELETE_FLAG,
	-- C.INFERRED_IND CUST_INFERRED_FLAG,
	-- C.UPDATE_DTTM CUST_UPDATE_DATETIME,
	C.CUSTOMER_NBR CUST_nUMBER,
	C.NAME CUST_NAME,
	C.BILL_ADDR_LN1 CUST_Bill_ADDRESS1,
	C.BILL_ADDR_LN2 Bill_CUST_ADDRESS2,
	C.BILL_ADDR_LN3 Bill_CUST_ADDRESS3,
	C.BILL_CITY CUST_BILL_CITY,
	C.BILL_STATE_CD CUST_BILL_STATE,
	C.BILL_POSTAL_CD CUST_BILL_ZIP,
	C.BILL_COUNTRY_CD CUST_COUNTRY_CODE,
	C.COMPANY_NBR CUST_COMPANY_NAME,
	C.ROUTE_CD CUST_ROUTE_CODE,
	C.SALES_PERSON CUST_SALES_PERSON,
	C.DIVISION CUST_DIVISION,
	C.REGION CUST_REGION,
	'N/A' AMERICAS_SALESCON_NAME,
	'N/A' AMERICAS_SALESCON_NUMBER,
	C.SALES_CUST_NBR CUST_SALES_NUMBER,
	C.TERRITORY CUST_TERRITORY,
	C.PREFIX_CD CUST_PREFIX_CODE,
	C.FREIGHT_TERM_CD CUST_FREIGHT_TERM_CODE,
	C.SHIPPING_OFFICER CUST_SHIPPING_OFFICER,
	C.CUST_HOLD_CD CUST_HOLD_CODE,
	C.HEAD_CORP_PRNT CUST_HEAD_CORP_PRINT,
	C.CORP_PRNT CUST_CORP_PRINT,
	CT.CUSTOMER_TYPE CUST_TYPE,
	CASE WHEN NOT CH.LEVEL01_NAME IS NULL THEN CH.LEVEL01_NAME ELSE 'NO_GBL_PARENT' END CUST_GLOBAL,
	CASE WHEN NOT CH.LEVEL02_NAME IS NULL THEN CH.LEVEL02_NAME ELSE 'NO_GBL_PARENT' END CUST_GLOBAL_BU_LEVEL1,
	CASE WHEN NOT CH.LEVEL04_NAME IS NULL THEN CH.LEVEL04_NAME ELSE 'NO_GBL_PARENT' END CUST_GLOBAL_BU_LEVEL2,
	CASE WHEN NOT CH.LEVEL03_NAME IS NULL THEN CH.LEVEL03_NAME ELSE 'NO_GBL_PARENT' END CUST_GLOBAL_CHANNEL_CATEGORY,
	CASE WHEN NOT CH.LEVEL05_NAME IS NULL THEN CH.LEVEL05_NAME ELSE 'NO_GBL_PARENT' END CUST_GLOBAL_REGION,
	-- T.DATE,
    -- T.YEAR,
	-- T.QUARTER,
	-- T.MONTH,
    -- T.MONTH_NAME,
    -- T.DAY,
    T.FISCAL_YEAR,
    T.FISCAL_QUARTER,
	T.FISCAL_PERIOD,
	T.FISCAL_PERIOD_NAME,
	DATEPART(week, CAST(T.DATE AS smalldatetime) -1) FISCAL_WEEK,
	T.DAY_OF_WEEK,
    T.WEEKEND_FLG,
    T.HOLIDAY_FLG    
FROM MIRROR_DM_F_SALES_SUMMARY S
JOIN MIRROR_DM_D_ITEM I ON I.ITEM_KEY=S.ITEM_KEY  
JOIN MIRROR_DM_D_CUSTOMER C  ON C.CUSTOMER_KEY=S.CUSTOMER_KEY
JOIN MIRROR_DM_D_CALENDAR T ON T.TIME_KEY=S.TIME_KEY
LEFT OUTER JOIN MIRROR_DM_D_CUSTOMER_TYPE CT  ON C.CUST_TYPE_KEY=CT.CUST_TYPE_KEY
LEFT OUTER JOIN MIRROR_DM_D_ITEM_CLASS IC ON IC.ITEM_CLASS_KEY = I.ITEM_CLASS_KEY
LEFT OUTER JOIN (
	SELECT H2.SRC_SYS_ID, H2.ITEM_NBR, H2.LEVEL01_NAME, H2.LEVEL02_NAME, H2.LEVEL02_CD 
		FROM MIRROR_DM_H_ITEM h2
		INNER JOIN MIRROR_DM_L_HIERARCHY l1 ON h2.Hierarchy_Id=l1.Hierarchy_Id
		WHERE H2.Current_Ind = 'Y' AND H2.Delete_Ind = 'N' AND l1.NAME='ITEM_GL'
) h ON h.ITEM_NBR = I.ITEM_NBR AND h.SRC_SYS_ID = S.SRC_SYS_ID


LEFT OUTER JOIN (SELECT CASE WHEN SRC_SYS_ID= 'TEXTAL' THEN 'BPCSAL'
                             WHEN SRC_SYS_ID= 'TEXTAS' THEN 'ASIASR'
                             WHEN SRC_SYS_ID= 'TEXTCO' THEN 'BPCSCO'
                             WHEN SRC_SYS_ID= 'TEXTEU' THEN 'BPCSEU'
                             WHEN SRC_SYS_ID= 'TEXTMH' THEN 'BPCSMH'
                             WHEN SRC_SYS_ID= 'TEXTRI' THEN 'BPCSRI'
                             WHEN SRC_SYS_ID= 'TEXTTM' THEN 'THERMX'
                             WHEN SRC_SYS_ID= 'TEXTWP' THEN 'STDMWP' END AS SRC_SYS_ID,
							 ACCT_NBR AS CUSTOMER_NBR,
							 GBL_NAME AS LEVEL01_NAME,
							 GBL_DIV AS LEVEL02_NAME,
							 CH_CATG AS LEVEL03_NAME,
							 CHR_ATTR1 AS LEVEL04_NAME,
							 CHR_ATTR2 AS LEVEL05_NAME FROM SMART.dbo.TPR_TXT_GBL_ACCOUNT h3 WHERE H3.Current_Ind = 'Y') ch ON ch.CUSTOMER_NBR = C.CUSTOMER_NBR AND ch.SRC_SYS_ID = S.SRC_SYS_ID							 

/*
-- Removed hard coded h2.Hierarchy_Id=15 and replaced it with a look up.  RLL 9/22/2008
LEFT OUTER JOIN (
	SELECT H3.SRC_SYS_ID, H3.CUSTOMER_NBR, H3.LEVEL01_NAME, H3.LEVEL02_NAME 
		FROM DM_H_CUSTOMER h3
		INNER JOIN DM_L_HIERARCHY l2 ON h3.Hierarchy_Id = l2.Hierarchy_Id
		WHERE H3.Current_Ind = 'Y' and H3.Delete_Ind = 'N' AND l2.Name = 'CUST_GL'
) ch ON ch.CUSTOMER_NBR = C.CUSTOMER_NBR AND ch.SRC_SYS_ID = S.SRC_SYS_ID
*/

LEFT OUTER JOIN (SELECT H4.SRC_SYS_ID, H4.ITEM_NBR, H4.PRODUCT,H4.PERFORMANCE, H4.MATERIAL, H4.PRIMARY_MKT, H4.ENVIROMENT, H4.BRAND, H4.SPC_STD_FLG, H4.NORM_FACTOR FROM MIRROR_DM_D_ITEM H4
 WHERE H4.Current_Ind = 'Y') ih ON ih.ITEM_NBR = I.ITEM_NBR AND ih.SRC_SYS_ID = S.SRC_SYS_ID
WHERE (S.SRC_SYS_ID='BPCSMH' AND S.TIME_KEY  < 20100101) OR S.SRC_SYS_ID IN ('THERMX', 'BPCSAL', 'STDMWP')
  
UNION ALL  
SELECT  --(I.ITEM_KEY),
        S.SRC_SYS_ID,
        B.Entity_ID Entity_ID,
    	--I.EFF_END_DTTM Item_End_DateTime,
    	--I.EFF_START_DTTM Item_Start_Datetime,
    	--I.CURRENT_IND Item_indicator,
    	--I.DELETE_IND Item_Delete_Indicator,
    	--I.INFERRED_IND Item_Inferred_Indicator,
    	--I.UPDATE_DTTM Item_Update_Datetime,
    	--I.RECORD_ID Item_Record_Id,
    	--I.ITEM_CLASS_KEY,
    	--I.TARIFF_KEY Item_Tariff_Key,
    	--I.HARMONIZATION_KEY Item_Harmonization_Key,
    	--I.DFLT_LOC_KEY Item_Default_Location_Key,
    	-- I.ITEM_NBR Item_Number,
    	-- I.STOCK_UM Item_Stock_UM,
    	-- I.DESCR_LN1 Item_Description1,

    	B.ItemNumber Item_Number,
		B.ItemDescription Item_Description1,
    	I.DESCR_LN2 Item_Description2,
    	
    	-- I.PURCH_UM Item_Purchase_UM,
    	-- I.STOCK_UM_CONV Item_Stock_UM_Conversion,
    	-- I.ITEM_TYPE,
    	
    	B.StockingUnitOfMeasure Item_Stock_UM,
    	I.STOCK_UM_CONV Item_Stock_UM_Conversion,
    	B.ItemType ITEM_TYPE,
    	
    	--I.DISCNT_CD Item_Distinct_Code,
    	-- I.ABC_INVENTORY_CD Item_ABC_Inventory_Code,
    	-- I.NPD_DT Item_NPD_Date,
    	-- I.PLANNER_CD Item_Planner_Code,
    	--I.SELL_UM Item_Sell_UM,
    	--I.SELL_UM_CONV Item_Sell_UM_Conversion,
    	
    	B.SellingUnitOfMeasure Item_Sell_UM,
		B.SellingUnitOfMeasureConversion Item_Sell_UM_Conversion,    	
    	
    	-- I.LOT_CTRL_PROD Item_LOT_CTRL_Prod,
    	--I.JIT_CD Item_JIT_Code,
    	--I.ITEM_GRP1 Item_Group1,
    	
    	I.COUNTRY_CD Item_Country_Code,
    	
    	--I.LENGTH Item_Length,
    	--I.LENGTH_UM Item_Length_UM,
    	--I.WIDTH Item_Width,
    	--I.WIDTH_UM Item_Width_UM,
    	--I.HEIGHT Item_Height,
    	--I.HEIGHT_UM Item_Height_UM,
    	--I.ANNEX_NBR Item_Annexx_Number,
    	
    	I.COPPER_WEIGHT Item_Copper_Weight,
    	
    	--I.CMS_ABBR Item_CMS_Abbrevation,
    	I.COLOR_CD Item_Color_Code,
    	I.PUTUP Item_Putup,
    	I.PUTUP_UM Item_Putup_UM,
    	I.PACKAGE Item_Package,
    	I.PRODUCT_CD Item_Product_Code,
    	
    	--I.PRIM_FAC_KEY Item_Primary_Facility_Key,
    	--I.CELL_NBR Item_Cell_Number,
	   	CASE WHEN (S.SRC_SYS_ID IN ('BPCSRI', 'BPCSCO')) THEN 
	   			CASE WHEN (B.ItemClass >= 'B0' AND B.ItemClass <= 'QZ') OR (B.ItemClass >= 'T0' AND B.ItemClass <= 'T2')  THEN 'Y' ELSE 'N' END
	   		ELSE
	   			CASE WHEN (B.ItemClass >= 'R0' AND B.ItemClass <= 'SZ')  THEN 'Y' ELSE 'N' END
	   		END ITEM_FINISH_FLG,
	   	/*I.FINISH_FLG Item_Finish_Flag,*/
--Added Global Hierarchy and Attributes
		H.LEVEL01_NAME GIHGIA_Product_Category,
		H.LEVEL02_CD GIHGIA_Product_Segment,	
    	IH.PRODUCT GIHGIA_Product,
    	IH.PERFORMANCE GIHGIA_Performance,
    	IH.MATERIAL GIHGIA_Material,
    	IH.PRIMARY_MKT GIHGIA_Primary_Vertical_Market,
    	IH.ENVIROMENT GIHGIA_Environment,
    	IH.BRAND GIHGIA_Brand,
    	IH.SPC_STD_FLG GIHGIA_STD_Special_Flag,
    	--IH.NORM_FACTOR GIHGIA_NORM_FACTOR,	

    ISNULL(UPPER(PG.ProductGroup), 'UNKNOWN') PRODUCT_DIVISION,

	B.SalesIncentiveRecapClass1 AMERICAS_SALESINCENTIVE_RECAP_1,
	B.SalesIncentiveRecapClass2 AMERICAS_SALESINCENTIVE_RECAP_2,
	B.SalesIncentiveClass		AMERICAS_SALESINCENTIVE_CLASS,
	B.CopperAdjusted			AMERICAS_SALESINCENTIVE_COPPER_ADJ,

	B.ProductGroup Product_Group,
	B.SCPG AMERICAS_SCPG,
	B.ItemClass ITEM_CLASS,
    B.ItemFamily AMERICAS_ITEM_FAMILY,
    B.DivisionName AMERICAS_DIVISION_NAME,
    B.MarketName AMERICAS_MARKET_NAME,
    
	--S.UPDATE_DTTM SALES_UPDATE_DATETIME,
	--S.ITEM_KEY SALES_ITEM_KEY,
	--S.TIME_KEY SALES_TIME_KEY,
	--S.CUSTOMER_KEY SALES_CUSTOMER_KEY,
	--S.ORGANIZATION_KEY SALES_ORGANIZATION_KEY,

	CASE      WHEN (B.DivisionCode = 9 AND LEFT(B.ItemClass, 1) <> 'A') THEN 'THIRD'
			  WHEN (B.DivisionCode = 9 AND LEFT(B.ItemClass, 1) = 'A') THEN 'UNKNOWN'
	ELSE S.TRX_TYPE END SALES_TRANSACTION_TYPE,
	-- S.QUANTITY SALES_QUANTITY,
	-- S.NET_PRICE,
	-- S.BILLING_NET_PRICE,

	B.ExtendedQuantity SALES_QUANTITY,
	B.UnitPriceInStockingUOM NET_PRICE,
	B.UnitPriceInSellingUOM BILLING_NET_PRICE,


--	CASE WHEN ((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT <> S.FREIGHT_AMT) OR S.SRC_SYS_ID = 'STDMWP') THEN 
--		(S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT)
--	ELSE
--		(S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT - S.FREIGHT_AMT)
--	END GROSS_SALE_AMT,	

	CASE WHEN ((B.FinancialReasonCode = 'BILNG' OR  SUBSTRING(B.FinancialReasonCode, 1, 2) = 'PS') AND 
				((B.DivisionCode = 2 OR B.DivisionCode = 3 OR B.DivisionCode = 6 OR B.DivisionCode = 7 OR B.DivisionCode=9) OR
				(B.DivisionCode = 4 AND (B.RegionCode= 94 OR B.RegionCode= 95 OR B.RegionCode= 96 OR B.RegionCode= 99))) AND
				LEFT(B.ItemClass, 1) <> 'A')
				THEN B.ExtendedUSDPrice ELSE 0 END	GROSS_SALE_AMT,
	
/*	
	CASE WHEN ((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT <> 0 AND S.FREIGHT_AMT <> 0) AND (I.SRC_SYS_ID='BPCSRI' OR I.SRC_SYS_ID='BPCSCO')) THEN 
		((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT - FREIGHT_AMT)+S.SND_ADJUST_AMT+S.OTH_ADJUST_AMT+S.CREDIT_RMA_AMT+S.ALLOWANCE_AMT)
	ELSE
		CASE WHEN ((S.CREDIT_RMA_AMT <> 0 AND S.SERV_CHRG_AMT <> 0) AND (I.SRC_SYS_ID='BPCSRI' OR I.SRC_SYS_ID='BPCSCO')) THEN
			0
		ELSE
			((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT)+S.SND_ADJUST_AMT+S.OTH_ADJUST_AMT+S.CREDIT_RMA_AMT+S.ALLOWANCE_AMT)
		END			
	END NET_BILLING_AMT,
	
	
	ISNULL(B.ExtendedUSDPrice - S.REBATE_AMT, CASE WHEN ((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT <> 0 AND S.FREIGHT_AMT <> 0) AND (I.SRC_SYS_ID='BPCSRI' OR I.SRC_SYS_ID='BPCSCO')) THEN 
		((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT - FREIGHT_AMT)+S.SND_ADJUST_AMT+S.OTH_ADJUST_AMT+S.CREDIT_RMA_AMT+S.ALLOWANCE_AMT)
	ELSE
		CASE WHEN ((S.CREDIT_RMA_AMT <> 0 AND S.SERV_CHRG_AMT <> 0) AND (I.SRC_SYS_ID='BPCSRI' OR I.SRC_SYS_ID='BPCSCO')) THEN
			0
		ELSE
			((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT)+S.SND_ADJUST_AMT+S.OTH_ADJUST_AMT+S.CREDIT_RMA_AMT+S.ALLOWANCE_AMT)
		END			
	END) NET_BILLING_AMT,
*/

	CASE WHEN (B.Financialreasoncode <> 'CRE7A') THEN B.ExtendedUSDPrice ELSE 0 END NET_BILLING_AMT,

	
--	CASE WHEN (S.CUST_SALE_AMT <> S.FREIGHT_AMT ) THEN S.CUST_SALE_AMT ELSE 0 END CUST_SALE_AMT,
--	CASE WHEN (S.INTER_SALE_AMT <> S.FREIGHT_AMT) THEN S.INTER_SALE_AMT ELSE 0 END INTER_SALE_AMT,
--	CASE WHEN (S.INTRA_SALE_AMT <> S.FREIGHT_AMT) THEN S.INTRA_SALE_AMT ELSE 0 END INTRA_SALE_AMT,


	CASE WHEN ((B.FinancialReasonCode = 'BILNG' OR  SUBSTRING(B.FinancialReasonCode, 1, 2) = 'PS') AND 
				(B.DivisionCode = 2 OR B.DivisionCode = 3 OR B.DivisionCode = 6 OR B.DivisionCode = 7 OR B.DivisionCode = 9) AND
				LEFT(B.ItemClass, 1) <> 'A')
				THEN B.ExtendedUSDPrice ELSE 0 END	CUST_SALE_AMT,
				
	CASE WHEN (( B.FinancialReasonCode = 'BILNG' OR  SUBSTRING(B.FinancialReasonCode, 1, 2) = 'PS') AND 
				B.DivisionCode = 4 AND
				SUBSTRING(CAST(B.RegionCode AS VARCHAR(8)), 1, 2) IN ('96') AND 				
				LEFT(B.ItemClass, 1) <> 'A')
				THEN B.ExtendedUSDPrice ELSE 0 END	INTER_SALE_AMT,
	
	CASE WHEN (( B.FinancialReasonCode = 'BILNG' OR  SUBSTRING(B.FinancialReasonCode, 1, 2) = 'PS') AND 
				B.DivisionCode = 4 AND
				SUBSTRING(CAST(B.RegionCode AS VARCHAR(8)), 1, 2) IN ('94', '95', '99') AND 				
				LEFT(B.ItemClass, 1) <> 'A')
				THEN B.ExtendedUSDPrice ELSE 0 END	INTRA_SALE_AMT,
				
	
--	S.FREIGHT_AMT,
--	S.SERV_CHRG_AMT,
--	S.SND_ADJUST_AMT,
--	S.OTH_ADJUST_AMT,
--	S.REBATE_AMT,
--	CASE WHEN (S.CREDIT_RMA_AMT <> S.SERV_CHRG_AMT) THEN S.CREDIT_RMA_AMT ELSE 0 END CREDIT_RMA_AMT,
--	S.ALLOWANCE_AMT,
	
		
	CASE WHEN B.FinancialReasonCode = 'BILNG' AND B.ItemClass = 'A2' THEN B.ExtendedUSDPrice ELSE 0 END FREIGHT_AMT,
	CASE WHEN B.FinancialReasonCode = 'BILNG' AND SUBSTRING(B.ItemClass, 1, 1) = 'A' AND B.ItemClass <> 'A2' THEN S.SERV_CHRG_AMT ELSE 0 END SERV_CHRG_AMT,
	CASE WHEN B.FinancialReasonCode IN ('CRE7E', 'CRE3H') THEN B.ExtendedUSDPrice ELSE 0 END SND_ADJUST_AMT,
	CASE WHEN SUBSTRING(B.FinancialReasonCode, 1, 4) IN ('CRE2', 'CRE7') AND NOT B.FinancialReasonCode IN ('CRE7A', 'CRE7E', 'CRE7C')THEN B.ExtendedUSDPrice ELSE 0 END OTHER_ADJUST_AMT,
	CASE WHEN B.FinancialReasonCode IN ('CRE7A') THEN B.ExtendedUSDPrice ELSE 0 END REBATE_AMT,	
	CASE WHEN SUBSTRING(B.FinancialReasonCode, 1, 4) IN ('CRE1')THEN B.ExtendedUSDPrice ELSE 0 END CREDIT_RMA_AMT,
	CASE WHEN SUBSTRING(B.FinancialReasonCode, 1, 4) IN ('CRE3', 'CRE8') AND NOT B.FinancialReasonCode IN ('CRE3H')THEN B.ExtendedUSDPrice ELSE 0 END ALLOWANCE_AMT,

	
	-- S.LOC_FSTD_CST_AMT,

	B.ExtendedUSDFrozenCost LOC_FSTD_CST_AMT,

	S.LOC_MAT_CST_AMT,
	S.LOC_SCRAP_CST_AMT,
	S.LOC_LABOR_CST_AMT,
	S.LOC_OHEAD_CST_AMT,
	S.LOC_RMCC_AMT,
	S.GBL_FSTD_CST_AMT,
	S.GBL_RMCC_AMT,
--	((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT + CREDIT_RMA_AMT + S.SND_ADJUST_AMT + S.OTH_ADJUST_AMT) - S.LOC_FSTD_CST_AMT) LOC_STD_MARGIN_AMT,
--	((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT+S.SND_ADJUST_AMT+S.OTH_ADJUST_AMT+S.CREDIT_RMA_AMT+S.ALLOWANCE_AMT)- S.LOC_RMCC_AMT) LOC_RMCM_AMT,
--	((S.CUST_SALE_AMT + S.INTER_SALE_AMT + S.INTRA_SALE_AMT+S.SND_ADJUST_AMT+S.OTH_ADJUST_AMT+S.CREDIT_RMA_AMT+S.ALLOWANCE_AMT)- S.CU_TOTAL_WEIGHT * (S.CU_AVG_PRICE - 1.487)) LOC_RMCR_AMT,
	CASE WHEN (B.Financialreasoncode <> 'CRE7A') THEN B.ExtendedUSDPrice ELSE 0 END - B.ExtendedUSDFrozenCost LOC_STD_MARGIN_AMT,
	CASE WHEN (B.Financialreasoncode <> 'CRE7A') THEN B.ExtendedUSDPrice ELSE 0 END - S.LOC_RMCC_AMT LOC_RMCM_AMT,
	CASE WHEN (B.Financialreasoncode <> 'CRE7A') THEN B.ExtendedUSDPrice ELSE 0 END - S.CU_TOTAL_WEIGHT * (S.CU_AVG_PRICE - 1.487) LOC_RMCR_AMT,
	S.CU_SURCHARGE,
	S.CU_AVG_PRICE,
	S.EXTD_QTY_FT,
	S.CU_TOTAL_WEIGHT,
	-- S.VITALITY,
	S.CU_STD_PRICE,
	0.0 AS AG_AVG_PRICE,
	0.0 AS AG_STD_PRICE,
	0.0 AS AG_TOTAL_WEIGHT,
	S.EXTD_QTY_MT,
	S.QTY_PIECE,
	S.LOC_CURRENCY,
	S.UNIT_OF_MEASURE,
	S.INVOICE_NBR,
	S.INVOICE_LN_NBR,
	B.FinancialReasonCode FIN_REASON_CD,
	S.TO_LOC_CURR_RATE,
	0.0 AS TO_EUR_RATE,
	--S.TIME_KEY,	*
	--C.CUSTOMER_KEY,
    --C.EFF_START_DTTM  CUST_EFFECTIVE_START_DT,
	--C.EFF_END_DTTM  CUST_EFFECTIVE_END_DT,
	--C.CURRENT_IND CUST_CURRENT_FLAG,
	--C.DELETE_IND CUST_DELETE_FLAG,
	--C.INFERRED_IND CUST_INFERRED_FLAG,
	--C.UPDATE_DTTM CUST_UPDATE_DATETIME,
	-- C.CUSTOMER_NBR CUST_nUMBER,
	-- C.NAME CUST_NAME,
	
	B.CustomerNumber AS CUST_nUMBER,
	B.CustomerName AS CUST_NAME,
	
	C.BILL_ADDR_LN1 CUST_Bill_ADDRESS1,
	C.BILL_ADDR_LN2 Bill_CUST_ADDRESS2,
	C.BILL_ADDR_LN3 Bill_CUST_ADDRESS3,
	C.BILL_CITY CUST_BILL_CITY,
	C.BILL_STATE_CD CUST_BILL_STATE,
	C.BILL_POSTAL_CD CUST_BILL_ZIP,
	C.BILL_COUNTRY_CD CUST_COUNTRY_CODE,
	C.COMPANY_NBR CUST_COMPANY_NAME,
	C.ROUTE_CD CUST_ROUTE_CODE,
	C.SALES_PERSON CUST_SALES_PERSON,
	
	-- C.DIVISION CUST_DIVISION,
	-- C.REGION CUST_REGION,
	
	CAST( B.DivisionCode AS VARCHAR(2)) CUST_DIVISION,
	CAST( B.RegionCode AS VARCHAR(2)) CUST_REGION,
	B.SalesConsolidationName AMERICAS_SALESCON_NAME,
	B.SalesConsolidationNumber AMERICAS_SALESCON_NUMBER,
	
	C.SALES_CUST_NBR CUST_SALES_NUMBER,
	C.TERRITORY CUST_TERRITORY,
	C.PREFIX_CD CUST_PREFIX_CODE,
	C.FREIGHT_TERM_CD CUST_FREIGHT_TERM_CODE,
	C.SHIPPING_OFFICER CUST_SHIPPING_OFFICER,
	C.CUST_HOLD_CD CUST_HOLD_CODE,
	C.HEAD_CORP_PRNT CUST_HEAD_CORP_PRINT,
	C.CORP_PRNT CUST_CORP_PRINT,
	CT.CUSTOMER_TYPE CUST_TYPE,
	CASE WHEN NOT CH.LEVEL01_NAME IS NULL THEN CH.LEVEL01_NAME ELSE 'NO_GBL_PARENT' END CUST_GLOBAL,
	CASE WHEN NOT CH.LEVEL02_NAME IS NULL THEN CH.LEVEL02_NAME ELSE 'NO_GBL_PARENT' END CUST_GLOBAL_BU_LEVEL1,
	CASE WHEN NOT CH.LEVEL04_NAME IS NULL THEN CH.LEVEL04_NAME ELSE 'NO_GBL_PARENT' END CUST_GLOBAL_BU_LEVEL2,
	CASE WHEN NOT CH.LEVEL03_NAME IS NULL THEN CH.LEVEL03_NAME ELSE 'NO_GBL_PARENT' END CUST_GLOBAL_CHANNEL_CATEGORY,
	CASE WHEN NOT CH.LEVEL05_NAME IS NULL THEN CH.LEVEL05_NAME ELSE 'NO_GBL_PARENT' END CUST_GLOBAL_REGION,
	--T.DATE,
    --T.YEAR,
	--T.QUARTER,
	--T.MONTH,
    --T.MONTH_NAME,
    --T.DAY,
    T.FISCAL_YEAR,
    T.FISCAL_QUARTER,
	T.FISCAL_PERIOD,
	T.FISCAL_PERIOD_NAME,
	DATEPART(week, CAST(T.DATE AS smalldatetime) -1) FISCAL_WEEK,
	--(SELECT FISCAL_PERIOD FROM DM_D_CALENDAR WHERE TIME_KEY=convert(int,convert(varchar(8),getdate(),112))) CURRENT_PERIOD,
	--(SELECT FISCAL_YEAR FROM DM_D_CALENDAR WHERE TIME_KEY=convert(int,convert(varchar(8),getdate(),112))) CURRENT_YEAR,
    T.DAY_OF_WEEK,
    T.WEEKEND_FLG,
    T.HOLIDAY_FLG
    --T.AUDIT_FLG
  
FROM MIRROR_DM_F_INVOICE_LN S
LEFT OUTER JOIN MIRROR_BAG_BILLINGS B ON S.INVOICE_NBR = B.InvoiceNumber AND S.INVOICE_LN_NBR = B.InvoiceLineNumber AND S.INVOICE_DT = B.InvoiceDate AND (S.SRC_SYS_ID = B.SRC_SYS_ID OR (S.SRC_SYS_ID='BPCSMH' AND B.SRC_SYS_ID IN ('BPCSM1', 'BPCSMH')))
JOIN MIRROR_DM_D_ITEM I ON I.ITEM_KEY=S.ITEM_KEY  
JOIN MIRROR_DM_D_CUSTOMER C  ON C.CUSTOMER_KEY=S.CUSTOMER_KEY
JOIN MIRROR_DM_D_CALENDAR T ON T.TIME_KEY=S.TIME_KEY

LEFT OUTER JOIN MIRROR_DM_D_CUSTOMER_TYPE CT  ON C.CUST_TYPE_KEY=CT.CUST_TYPE_KEY
LEFT OUTER JOIN MIRROR_TPR_X_RECAPCLASS_PRODUCTGROUP PG ON B.SalesIncentiveRecapClass2=PG.SalesIncentiveRecapClass2

LEFT OUTER JOIN (
	SELECT H2.SRC_SYS_ID, H2.ITEM_NBR, H2.LEVEL01_NAME, H2.LEVEL02_NAME, H2.LEVEL02_CD 
		FROM MIRROR_DM_H_ITEM h2
		INNER JOIN MIRROR_DM_L_HIERARCHY l1 ON h2.Hierarchy_Id=l1.Hierarchy_Id
		WHERE H2.Current_Ind = 'Y' AND H2.Delete_Ind = 'N' AND l1.NAME='ITEM_GL'
) h ON h.ITEM_NBR = I.ITEM_NBR AND h.SRC_SYS_ID = S.SRC_SYS_ID

LEFT OUTER JOIN (SELECT CASE WHEN SRC_SYS_ID= 'TEXTAL' THEN 'BPCSAL'
                             WHEN SRC_SYS_ID= 'TEXTAS' THEN 'ASIASR'
                             WHEN SRC_SYS_ID= 'TEXTCO' THEN 'BPCSCO'
                             WHEN SRC_SYS_ID= 'TEXTEU' THEN 'BPCSEU'
                             WHEN SRC_SYS_ID= 'TEXTMH' THEN 'BPCSMH'
                             WHEN SRC_SYS_ID= 'TEXTRI' THEN 'BPCSRI'
                             WHEN SRC_SYS_ID= 'TEXTTM' THEN 'THERMX'
                             WHEN SRC_SYS_ID= 'TEXTWP' THEN 'STDMWP' END AS SRC_SYS_ID,
							 ACCT_NBR AS CUSTOMER_NBR,
							 GBL_NAME AS LEVEL01_NAME,
							 GBL_DIV AS LEVEL02_NAME,
							 CH_CATG AS LEVEL03_NAME,
							 CHR_ATTR1 AS LEVEL04_NAME,
							 CHR_ATTR2 AS LEVEL05_NAME FROM TPR_TXT_GBL_ACCOUNT h3 WHERE H3.Current_Ind = 'Y') ch ON ch.CUSTOMER_NBR = C.CUSTOMER_NBR AND ch.SRC_SYS_ID = S.SRC_SYS_ID
							 
/*
LEFT OUTER JOIN (SELECT H3.SRC_SYS_ID, H3.CUSTOMER_NBR, H3.LEVEL01_NAME, H3.LEVEL02_NAME, H3.LEVEL03_NAME, H3.LEVEL04_NAME, H3.LEVEL05_NAME FROM DM_H_CUSTOMER h3
 WHERE H3.Hierarchy_Id=15 and H3.Current_Ind = 'Y' and H3.Delete_Ind = 'N') ch ON ch.CUSTOMER_NBR = C.CUSTOMER_NBR AND ch.SRC_SYS_ID = S.SRC_SYS_ID
 */

LEFT OUTER JOIN (SELECT H4.SRC_SYS_ID, H4.ITEM_NBR, H4.PRODUCT,H4.PERFORMANCE, H4.MATERIAL, H4.PRIMARY_MKT, H4.ENVIROMENT, H4.BRAND, H4.SPC_STD_FLG, H4.NORM_FACTOR FROM MIRROR_DM_D_ITEM H4
 WHERE H4.Current_Ind = 'Y') ih ON ih.ITEM_NBR = I.ITEM_NBR AND ih.SRC_SYS_ID = S.SRC_SYS_ID
 
WHERE S.SRC_SYS_ID IN ('BPCSCO', 'BPCSRI') OR (S.SRC_SYS_ID='BPCSMH' AND S.TIME_KEY >= 20100101)
GO


