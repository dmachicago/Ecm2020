
CREATE FUNCTION [udf_CkSmallStepsHasChanged] (@TF bit )
RETURNS INT
AS
begin

declare @UpdatesFOund as nvarchar(10) = '' ; 
declare @b as bit = 0 ;

set @UpdatesFOund = 
(
SELECT SYS_CHANGE_OPERATION FROM CHANGETABLE (CHANGES CMS_Class , NULL) AS [CT]
union
SELECT SYS_CHANGE_OPERATION FROM CHANGETABLE (CHANGES CMS_Document , NULL) AS [CT]
union
SELECT SYS_CHANGE_OPERATION FROM CHANGETABLE (CHANGES CMS_Site , NULL) AS [CT]
union
SELECT SYS_CHANGE_OPERATION FROM CHANGETABLE (CHANGES CMS_Tree , NULL) AS [CT]
union
SELECT SYS_CHANGE_OPERATION FROM CHANGETABLE (CHANGES CMS_User , NULL) AS [CT]
union
SELECT SYS_CHANGE_OPERATION FROM CHANGETABLE (CHANGES CMS_UserSettings , NULL) AS [CT]
union
SELECT SYS_CHANGE_OPERATION FROM CHANGETABLE (CHANGES CMS_UserSite , NULL) AS [CT]
union
SELECT SYS_CHANGE_OPERATION FROM CHANGETABLE (CHANGES COM_SKU , NULL) AS [CT]
union
SELECT SYS_CHANGE_OPERATION FROM CHANGETABLE (CHANGES HFit_Account , NULL) AS [CT]
union
SELECT SYS_CHANGE_OPERATION FROM CHANGETABLE (CHANGES HFit_HACampaign , NULL) AS [CT]
union
SELECT SYS_CHANGE_OPERATION FROM CHANGETABLE (CHANGES HFit_HealthAssesmentUserStarted , NULL) AS [CT]
union
SELECT SYS_CHANGE_OPERATION FROM CHANGETABLE (CHANGES HFit_OutComeMessages , NULL) AS [CT]
union
SELECT SYS_CHANGE_OPERATION FROM CHANGETABLE (CHANGES Hfit_SmallStepResponses , NULL) AS [CT]
union
SELECT SYS_CHANGE_OPERATION FROM CHANGETABLE (CHANGES HFit_ToDoSmallSteps , NULL) AS [CT]
)

if (@UpdatesFOund is null)
    set @b = 0;
else 
    set @b = 1;

return @b;

end 