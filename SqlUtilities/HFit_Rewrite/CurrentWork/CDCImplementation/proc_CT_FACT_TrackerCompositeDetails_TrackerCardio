
GO
PRINT 'proc_CT_FACT_TrackerCompositeDetails_TrackerCardio.sql';
GO

IF EXISTS (SELECT
                  name
                  FROM sys.procedures
                  WHERE name = 'proc_CT_FACT_TrackerCompositeDetails_TrackerCardio') 
    BEGIN
        DROP PROCEDURE
             proc_CT_FACT_TrackerCompositeDetails_TrackerCardio
    END;
GO
CREATE PROCEDURE proc_CT_FACT_TrackerCompositeDetails_TrackerCardio
AS
BEGIN
    SET TRANSACTION ISOLATION LEVEL SNAPSHOT;
    --truncate table FACT_HFit_TrackerCardio
    DECLARE @msg AS NVARCHAR (1000) = '';
    DECLARE @StepSecs AS BIGINT = 0;
    DECLARE @TotalSecs AS BIGINT = 0;
    DECLARE @StartTime AS DATETIME = GETDATE () ;
    DECLARE @Step1Time AS DATETIME = GETDATE () ;
    DECLARE @Step2Time AS DATETIME = GETDATE () ;
    DECLARE @Step3Time AS DATETIME = GETDATE () ;
    DECLARE @Step4Time AS DATETIME = GETDATE () ;
    DECLARE @Step5Time AS DATETIME = GETDATE () ;
    DECLARE @Step6Time AS DATETIME = GETDATE () ;

    DECLARE @iCnt AS BIGINT = 0;
    DECLARE @i AS BIGINT = 0;

    EXEC PrintImmediate 'Processing FACT_HFit_TrackerCardio';
    EXEC PrintImmediate 'Rows: ';
    EXEC proc_QuickRowCount BASE_HFit_TrackerCardio;

    --******************************************************
    CHECKPOINT;
    --drop table #Changes;
    SELECT
           ITEMID
         , SYS_CHANGE_VERSION
         , SYS_CHANGE_OPERATION
         , SYS_CHANGE_COLUMNS
         , SVR
         , DBNAME INTO
                       #Changes
           FROM CHANGETABLE (CHANGES BASE_HFit_TrackerCardio, NULL) AS CT;

    CREATE CLUSTERED INDEX PK_TT ON #Changes (SVR, DBNAME, ItemID, SYS_CHANGE_OPERATION) ;

    EXEC printImmediate 'Starting Time: ';
    SET @msg = CAST (GETDATE () AS NVARCHAR (50)) ;
    EXEC printImmediate @msg;

    SELECT
           COUNT (*) 
           FROM BASE_HFit_TrackerCardio;
    SET @iCnt = (SELECT
                        COUNT (*) 
                        FROM FACT_HFit_TrackerCardio
                        WHERE TrackerNameAggregateTable = 'HFit_TrackerCardio');
    IF @iCnt = 0
        BEGIN
            truncate TABLE #Changes;
            INSERT INTO #Changes (
                   ITEMID
                 , SYS_CHANGE_VERSION
                 , SYS_CHANGE_OPERATION
                 , SYS_CHANGE_COLUMNS
                 , SVR
                 , DBNAME) 
            SELECT
                   'HFit_TrackerCardio' AS TrackerNameAggregateTable
                 , ITEMID
                 , 0 AS SYS_CHANGE_VERSION
                 , 'I' AS SYS_CHANGE_OPERATION
                 , NULL AS SYS_CHANGE_COLUMNS
                 , SVR
                 , DBNAME
                   FROM BASE_HFit_TrackerCardio;
        END;
    -- select * from #Changes
    INSERT INTO FACT_HFit_TrackerCardio
    (
           TrackerNameAggregateTable
         , ItemID
         , EventDate
         , IsProfessionallyCollected
         , TrackerCollectionSourceID
         , Notes
         , UserID
         , EventName
         , UOM
         , KEY1
         , VAL1
         , Key2
         , Val2
         , Key3
         , Val3
         , Key4
         , Val4
         , Key5
         , Val5
         , Key6
         , Val6
         , Key7
         , Val7
         , Key8
         , Val8
         , Key9
         , Val9
         , Key10
         , Val10
         , ItemCreatedBy
         , ItemCreatedWhen
         , ItemModifiedBy
         , ItemModifiedWhen
         , IsProcessedForHa
         , TXTKEY1
         , TXTVAL1
         , TXTKEY2
         , TXTVAL2
         , TXTKEY3
         , TXTVAL3
         , ItemOrder
         , ItemGuid
         , UserGuid
         , MPI
         , ClientCode
         , VendorID
         , VendorName
         , LastModifiedDate
         , SVR
         , DBNAME) 
    SELECT
           'HFit_TrackerCardio' AS TrackerNameAggregateTable
         , TT.ItemID
         , CAST (EventDate AS DATETIME) AS EventDate
         , TT.IsProfessionallyCollected
         , TT.TrackerCollectionSourceID
         , Notes
         , TT.UserID
           --, CollectionSourceName_Internal
           --, CollectionSourceName_External
         , 'MISSING' AS EventName
         , 'NA' AS UOM
         , 'Minutes' AS KEY1
         , CAST ( Minutes AS FLOAT) AS VAL1
         , 'Distance' AS KEY2
         , CAST ( Distance AS FLOAT) AS VAL2
         , 'DistanceUnit' AS KEY3
         , CAST ( DistanceUnit AS FLOAT) AS VAL3
         , 'Intensity' AS KEY4
         , CAST ( Intensity AS FLOAT) AS VAL4
         , 'ActivityID' AS KEY5
         , CAST ( ActivityID AS FLOAT) AS VAL5
         , 'NA' AS KEY6
         , NULL AS VAL6
         , 'NA' AS KEY7
         , NULL AS VAL7
         , 'NA' AS KEY8
         , NULL AS VAL8
         , 'NA' AS KEY9
         , NULL AS VAL9
         , 'NA' AS KEY10
         , NULL AS VAL10
         , TT.ItemCreatedBy
         , CAST (TT.ItemCreatedWhen AS DATETIME) AS ItemCreatedWhen
         , TT.ItemModifiedBy
         , CAST (TT.ItemModifiedWhen AS DATETIME) AS ItemModifiedWhen
         , NULL AS IsProcessedForHa
         , 'NA' AS TXTKEY1
         , NULL AS TXTVAL1
         , 'NA' AS TXTKEY2
         , NULL AS TXTVAL2
         , 'NA' AS TXTKEY3
         , NULL AS TXTVAL3
         , NULL AS ItemOrder
         , NULL AS ItemGuid
         , C.UserGuid
         , PP.MPI
         , PP.ClientCode
         , NULL AS VendorID	--VENDOR.ItemID as VendorID
         , NULL AS VendorName --VENDOR.VendorName
         , TT.LastModifiedDate
         , TT.SVR
         , TT.DBNAME
           FROM dbo.BASE_HFit_TrackerCardio AS TT
                    INNER JOIN #Changes AS CHG
                        ON TT.SVR = CHG.SVR
                       AND TT.DBNAME = CHG.DBNAME
                       AND TT.ItemID = CHG.ItemID
                       AND CHG.SYS_CHANGE_OPERATION = 'I'
                    INNER JOIN dbo.BASE_CMS_User AS C
                        ON C.UserID = TT.UserID
                       AND C.SVR = TT.SVR
                       AND C.DBNAME = TT.DBNAME
                    INNER JOIN dbo.BASE_HFit_ppteligibility AS PP
                        ON TT.UserID = PP.userID
                       AND TT.SVR = PP.SVR
                       AND TT.DBNAME = PP.DBNAME
           WHERE
           EventDate > '01/01/1960';

    SET @StepSecs = DATEDIFF (second, @StartTime, GETDATE ()) ;
    SET @msg = 'Step1 seconds: ' + CAST (@StepSecs AS NVARCHAR (50)) ;
    EXEC printImmediate @msg;
    SET @Step2Time = GETDATE () ;
    --******************************************************
    CHECKPOINT;
    UPDATE FT
           SET
               FT.AccountID = ACCT.AccountID
             ,FT.AccountCD = ACCT.AccountCD
               FROM BASE_HFit_TrackerCardio AS BT
                        INNER JOIN #Changes AS CHG
                            ON BT.SVR = CHG.SVR
                           AND BT.DBNAME = CHG.DBNAME
                           AND BT.ItemID = CHG.ItemID
                        JOIN FACT_HFit_TrackerCardio AS FT
                            ON
                            BT.SVR = FT.SVR
                        AND BT.DBNAME = FT.DBNAME
                        AND BT.ItemID = FT.ItemID
                        INNER JOIN dbo.BASE_HFit_Account AS ACCT
                            ON
                            FT.ClientCode = ACCT.AccountCD
                        AND FT.SVR = ACCT.SVR
                        AND FT.DBNAME = ACCT.DBNAME;

    SET @StepSecs = DATEDIFF (second, @Step1Time, @Step2Time) ;
    SET @msg = 'Step2 seconds: ' + CAST (@StepSecs AS NVARCHAR (50)) ;
    EXEC printImmediate @msg;
    SET @Step3Time = GETDATE () ;
    --******************************************************
    CHECKPOINT;
    UPDATE FT
           SET
               FT.AccountCD = ACCT.AccountCD
               FROM BASE_HFit_TrackerCardio AS BT
                        INNER JOIN #Changes AS CHG
                            ON BT.SVR = CHG.SVR
                           AND BT.DBNAME = CHG.DBNAME
                           AND BT.ItemID = CHG.ItemID
                        JOIN FACT_HFit_TrackerCardio AS FT
                            ON
                            BT.ItemID = FT.ItemID
                        AND FT.SVR = BT.SVR
                        AND FT.DBNAME = BT.DBNAME
                        INNER JOIN dbo.BASE_HFit_Account AS ACCT
                            ON
                            FT.ClientCode = ACCT.AccountCD
                        AND FT.SVR = ACCT.SVR
                        AND FT.DBNAME = ACCT.DBNAME;

    SET @StepSecs = DATEDIFF (second, @Step2Time, @Step3Time) ;
    SET @msg = 'Step3 seconds: ' + CAST (@StepSecs AS NVARCHAR (50)) ;
    EXEC printImmediate @msg;
    SET @Step4Time = GETDATE () ;
    --******************************************************
    CHECKPOINT;
    UPDATE FT
           SET
               FT.SiteGUID = S.SiteGUID
               FROM FACT_HFit_TrackerCardio AS FT
                        INNER JOIN #Changes AS CHG
                            ON FT.SVR = CHG.SVR
                           AND FT.DBNAME = CHG.DBNAME
                           AND FT.ItemID = CHG.ItemID
                        INNER JOIN dbo.BASE_HFit_Account AS ACCT
                            ON
                            FT.AccountCD = ACCT.AccountCD
                        AND FT.SVR = ACCT.SVR
                        AND FT.DBNAME = ACCT.DBNAME
                        INNER JOIN dbo.BASE_CMS_Site AS S
                            ON
                            ACCT.SiteID = S.SiteID
                        AND ACCT.SVR = S.SVR
                        AND ACCT.DBNAME = S.DBNAME;

    SET @StepSecs = DATEDIFF (second, @Step3Time, @Step4Time) ;
    SET @msg = 'Step4 seconds: ' + CAST (@StepSecs AS NVARCHAR (50)) ;
    EXEC printImmediate @msg;

    SET @Step5Time = GETDATE () ;
    --******************************************************
    CHECKPOINT;
    UPDATE FT
           SET
               FT.CollectionSourceName_Internal = TC.CollectionSourceName_Internal
             ,FT.CollectionSourceName_External = TC.CollectionSourceName_External
               FROM BASE_HFit_TrackerCardio AS BT
                        INNER JOIN #Changes AS CHG
                            ON BT.SVR = CHG.SVR
                           AND BT.DBNAME = CHG.DBNAME
                           AND BT.ItemID = CHG.ItemID
                        JOIN FACT_HFit_TrackerCardio AS FT
                            ON
                            BT.ItemID = FT.ItemID
                        AND FT.SVR = BT.SVR
                        AND FT.DBNAME = BT.DBNAME
                        INNER JOIN dbo.BASE_HFit_TrackerCollectionSource AS TC
                            ON
                            TC.TrackerCollectionSourceID = BT.TrackerCollectionSourceID
                        AND TC.SVR = BT.SVR
                        AND TC.DBNAME = BT.DBNAME OPTION (
                                                         MAXDOP 1) ;

    SET @StepSecs = DATEDIFF (second, @Step4Time, @Step5Time) ;
    SET @msg = 'Step5 seconds: ' + CAST (@StepSecs AS NVARCHAR (50)) ;
    EXEC printImmediate @msg;

    SET @Step6Time = GETDATE () ;
    --******************************************************
    CHECKPOINT;
    UPDATE FT
           SET
               FT.IsAvailable = T.IsAvailable
             ,FT.IsCustom = T.IsCustom
             ,FT.UniqueName = T.UniqueName
             ,FT.ColDesc = T.UniqueName
               FROM FACT_HFit_TrackerCardio AS FT
                        INNER JOIN #Changes AS CHG
                            ON FT.SVR = CHG.SVR
                           AND FT.DBNAME = CHG.DBNAME
                           AND FT.ItemID = CHG.ItemID
                        JOIN dbo.BASE_HFit_Tracker AS T
                            ON
                            T.AggregateTableName = 'HFit_TrackerCardio'
                        AND T.SVR = FT.SVR
                        AND T.DBNAME = FT.DBNAME OPTION (
                                                        MAXDOP 1) ;

    SET @StepSecs = DATEDIFF (second, @Step5Time, @Step6Time) ;
    SET @msg = 'Step6 seconds: ' + CAST (@StepSecs AS NVARCHAR (50)) ;
    EXEC printImmediate @msg;

    SET @StepSecs = DATEDIFF (second, @StartTime, GETDATE ()) ;
    SET @msg = 'Total Time in seconds: ' + CAST (@StepSecs AS NVARCHAR (50)) ;
    EXEC printImmediate @msg;

    EXEC printImmediate 'Ending Time: ';
    PRINT GETDATE () ;
END;