
go
use KenticoCMS_DataMart

GO

/*----------------------------------------------
TempData Started: 
Jul 13 2015 12:26AM
##_TEMP_HFit_HealthAssesmentUserQuestion Created
TempData Loaded: 
Jul 13 2015  1:12AM
Seconds: 2783
HA Data Loaded: 
Jul 13 2015  1:47AM
Total Records Loaded : 927077
Time in Hours : 0.58
Indexes Created: 
Jul 13 2015  1:47AM
Index Time in Hours : 0.58
Process Started:
Jul 13 2015 12:26AM
Process Ended:
Jul 13 2015  1:47AM
TOTAL ROWS: 927077
TOTAL Hours: 1.35
-----------------------------------------------
TempData Started: 
Jul 12 2015 10:45PM
##_TEMP_HFit_HealthAssesmentUserQuestion Created
TempData Loaded: 
Jul 12 2015 10:51PM
Seconds: 356
HA Data Loaded: 
Jul 12 2015 11:22PM
Total Records Loaded : 927077
Time in Hours : 0.51
Indexes Created: 
Jul 12 2015 11:22PM
Index Time in Hours : 0.51
Process Started:
Jul 12 2015 10:45PM
Process Ended:
Jul 12 2015 11:22PM
TOTAL ROWS: 927077
TOTAL Hours: 0.62
*/

-- use KenticoCMS_Prod1

GO
PRINT 'Creating proc_Denormalize_EDW_HealthAssessment_VIEWS_CT_Only.sql';
GO

-- select count(*) from BASE_HFit_HealthAssesmentUserAnswers

IF EXISTS ( SELECT
                   name
                   FROM sys.procedures
                   WHERE name = 'proc_Denormalize_EDW_HealthAssessment_VIEWS_CT_Only') 
    BEGIN
        DROP PROCEDURE
             proc_Denormalize_EDW_HealthAssessment_VIEWS_CT_Only;
    END;

/*------------------------------------------------------------
--------------------------------------------------------------
STATS:	  07.09.2015
    TempData Started: 
    Jul  9 2015  1:02PM
    ##CT_TEMP_HFit_HealthAssesmentUserQuestion Created
    TempData Loaded: 
    Jul  9 2015  1:14PM
    Seconds: 669
    HA Data Loaded: 
    Jul  9 2015  2:29PM
    Total Records Loaded : 92849
    Time in Hours : 1.25389
    Indexes Created: 
    Jul  9 2015  2:29PM
    Index Time in Hours : 1.25389
    Process Started:
    Jul  9 2015  1:02PM
    Process Ended:
    Jul  9 2015  2:29PM
    TOTAL ROWS: 92849
    TOTAL Hours: 1.45
*/
-- exec proc_Denormalize_EDW_HealthAssessment_VIEWS_CT_Only

GO
CREATE PROCEDURE proc_Denormalize_EDW_HealthAssessment_VIEWS_CT_Only
AS
BEGIN

/*--------------------------------------------------------------
Author:	  W. Dale Miller
Created:	  06.15.2015
USE:		  exec proc_Denormalize_EDW_HealthAssessment_VIEWS_CT_Only
*/

    -- declare @ReloadAll as int = 0 ;

    DECLARE
           @St AS DATETIME = GETDATE () ;
    PRINT 'TempData Started: ';
    PRINT CHAR ( 10) ;
    PRINT GETDATE () ;
    PRINT CHAR ( 10) ;
    SET NOCOUNT ON;

    IF EXISTS ( SELECT
                       NAME
                       FROM TEMPDB.DBO.SYSOBJECTS
                       WHERE ID = OBJECT_ID ( N'tempdb..##_CMS_USER')) 
        BEGIN
            DROP TABLE
                 ##_CMS_USER;
        END;

    IF EXISTS ( SELECT
                       NAME
                       FROM TEMPDB.DBO.SYSOBJECTS
                       WHERE ID = OBJECT_ID ( N'tempdb..##_HFIT_HEALTHASSESMENTUSERSTARTED')) 
        BEGIN
            DROP TABLE
                 ##_HFIT_HEALTHASSESMENTUSERSTARTED;
        END;

    IF EXISTS ( SELECT
                       NAME
                       FROM TEMPDB.DBO.SYSOBJECTS
                       WHERE ID = OBJECT_ID ( N'tempdb..##HealthAssessmentData')) 
        BEGIN
            DROP TABLE
                 ##HealthAssessmentData;
        END;

    IF EXISTS ( SELECT
                       NAME
                       FROM TEMPDB.DBO.SYSOBJECTS
                       WHERE ID = OBJECT_ID ( N'tempdb..##_TEMP_HFit_HealthAssesmentUserAnswers')) 
        BEGIN
            DROP TABLE
                 ##_TEMP_HFIT_HEALTHASSESMENTUSERANSWERS;
        END;

    IF EXISTS ( SELECT
                       NAME
                       FROM TEMPDB.DBO.SYSOBJECTS
                       WHERE ID = OBJECT_ID ( N'tempdb..##_CMS_USERSITE')) 
        BEGIN
            DROP TABLE
                 ##_CMS_USERSITE;
        END;

    SELECT
           USERSITE.USERID
         , USERSITE.SITEID
         , USERSITE.USERSITEID
    INTO
         ##_CMS_USERSITE
           FROM CMS_USERSITE AS USERSITE;

    CREATE CLUSTERED INDEX PI_CMS_USERSITE
    ON ##_CMS_USERSITE ( USERID , SITEID , USERSITEID) ;

    IF EXISTS ( SELECT
                       NAME
                       FROM TEMPDB.DBO.SYSOBJECTS
                       WHERE ID = OBJECT_ID ( N'tempdb..##_HFIT_HEALTHASSESMENTUSERMODULE')) 
        BEGIN
            DROP TABLE
                 ##_HFIT_HEALTHASSESMENTUSERMODULE;
        END;

    SELECT
           HAUSERMODULE.HASTARTEDITEMID
         , HAUSERMODULE.ITEMID
         , HAUSERMODULE.CODENAME
         , HAUSERMODULE.HAMODULENODEGUID
         , HAUSERMODULE.HAMODULESCORE
         , HAUSERMODULE.PREWEIGHTEDSCORE
    INTO
         ##_HFIT_HEALTHASSESMENTUSERMODULE
           FROM HFIT_HEALTHASSESMENTUSERMODULE AS HAUSERMODULE;

    CREATE NONCLUSTERED INDEX PI_HFIT_HEALTHASSESMENTUSERMODULE
    ON ##_HFIT_HEALTHASSESMENTUSERMODULE ( HASTARTEDITEMID , ITEMID) 
    INCLUDE (CODENAME , HAMODULENODEGUID , HAMODULESCORE , PREWEIGHTEDSCORE) ;

    IF EXISTS ( SELECT
                       NAME
                       FROM TEMPDB.DBO.SYSOBJECTS
                       WHERE ID = OBJECT_ID ( N'tempdb..##_HFIT_HEALTHASSESMENTUSERRISKCATEGORY')) 
        BEGIN
            DROP TABLE
                 ##_HFIT_HEALTHASSESMENTUSERRISKCATEGORY;
        END;

    SELECT
           HARISKCATEGORY.ITEMID
         , HARISKCATEGORY.CODENAME
         , HARISKCATEGORY.HARISKCATEGORYNODEGUID
         , HARISKCATEGORY.HARISKCATEGORYSCORE
         , HARISKCATEGORY.PREWEIGHTEDSCORE
         , HARISKCATEGORY.ITEMMODIFIEDWHEN
         , HARISKCATEGORY.HAMODULEITEMID
    INTO
         ##_HFIT_HEALTHASSESMENTUSERRISKCATEGORY
           FROM HFIT_HEALTHASSESMENTUSERRISKCATEGORY AS HARISKCATEGORY;

    CREATE NONCLUSTERED INDEX PI_HEALTHASSESMENTUSERRISKCATEGORY
    ON ##_HFIT_HEALTHASSESMENTUSERRISKCATEGORY ( ITEMID , HAMODULEITEMID) 
    INCLUDE (CODENAME , HARISKCATEGORYNODEGUID , HARISKCATEGORYSCORE , PREWEIGHTEDSCORE , ITEMMODIFIEDWHEN) ;

    IF EXISTS ( SELECT
                       NAME
                       FROM TEMPDB.DBO.SYSOBJECTS
                       WHERE ID = OBJECT_ID ( N'tempdb..##_CMS_USERSETTINGS')) 
        BEGIN
            DROP TABLE
                 ##_CMS_USERSETTINGS;
        END;

    SELECT
           USERSETTINGS.USERSETTINGSUSERID
         , USERSETTINGS.HFITUSERMPINUMBER
         , USERSETTINGS.USERSETTINGSID
    INTO
         ##_CMS_USERSETTINGS
           FROM CMS_USERSETTINGS AS USERSETTINGS;

    CREATE CLUSTERED INDEX PI_CMS_USER
    ON ##_CMS_USERSETTINGS ( USERSETTINGSUSERID , HFITUSERMPINUMBER , USERSETTINGSID) ;

    -- select count(*) from CMS_USER
    SELECT
           CMSUSER.USERID
         , CMSUSER.USERGUID
    INTO
         ##_CMS_USER
           FROM CMS_USER AS CMSUSER;

    CREATE CLUSTERED INDEX PI_CMS_USER
    ON ##_CMS_USER ( USERID , USERGUID) ;

    SELECT
           HAUSERSTARTED.ITEMID
         , HAUSERSTARTED.USERID
         , HAUSERSTARTED.HASTARTEDDT
         , HAUSERSTARTED.HACOMPLETEDDT
         , HAUSERSTARTED.HASCORE
         , HAUSERSTARTED.HAPAPERFLG
         , HAUSERSTARTED.HATELEPHONICFLG
         , HAUSERSTARTED.HASTARTEDMODE
         , HAUSERSTARTED.HACOMPLETEDMODE
         , HAUSERSTARTED.HACAMPAIGNNODEGUID
         , HAUserStarted.HADocumentConfigID
         , GETDATE () AS LASTLOADEDDATE
    INTO
         ##_HFIT_HEALTHASSESMENTUSERSTARTED
           FROM HFIT_HEALTHASSESMENTUSERSTARTED AS HAUSERSTARTED;
    CREATE NONCLUSTERED INDEX PI_HFIT_HEALTHASSESMENTUSERSTARTED
    ON ##_HFIT_HEALTHASSESMENTUSERSTARTED ( ITEMID , USERID) 
    INCLUDE ( HASTARTEDDT , HACOMPLETEDDT , HASCORE , HAPAPERFLG , HATELEPHONICFLG , HASTARTEDMODE , HACAMPAIGNNODEGUID , HADocumentConfigID) ;

    IF EXISTS ( SELECT
                       NAME
                       FROM TEMPDB.DBO.SYSOBJECTS
                       WHERE ID = OBJECT_ID ( N'tempdb..##_TEMP_HFit_HealthAssesmentUserRiskArea')) 
        BEGIN
            DROP TABLE
                 ##_TEMP_HFIT_HEALTHASSESMENTUSERRISKAREA;
        END;

    SELECT
           HAUSERANSWERS.ITEMID
         , HAUSERANSWERS.HAANSWERNODEGUID
         , HAUSERANSWERS.CODENAME
         , HAUSERANSWERS.HAANSWERVALUE
         , HAUSERANSWERS.HAANSWERPOINTS
         , HAUSERANSWERS.UOMCODE
         , HAUSERANSWERS.ITEMCREATEDWHEN
         , HAUSERANSWERS.ITEMMODIFIEDWHEN
         , HAUSERANSWERS.HAQUESTIONITEMID
         , GETDATE () AS LASTLOADEDDATE
    INTO
         ##_TEMP_HFIT_HEALTHASSESMENTUSERANSWERS
           FROM BASE_HFit_HealthAssesmentUserAnswers AS HAUSERANSWERS;

    CREATE NONCLUSTERED INDEX PI_HFIT_HEALTHASSESMENTUSERANSWERS
    ON ##_TEMP_HFIT_HEALTHASSESMENTUSERANSWERS ( ITEMID , HAQUESTIONITEMID) 
    INCLUDE ( HAANSWERNODEGUID , CODENAME , HAANSWERVALUE , HAANSWERPOINTS , UOMCODE , ITEMCREATEDWHEN , ITEMMODIFIEDWHEN) ;
    IF EXISTS ( SELECT
                       NAME
                       FROM TEMPDB.DBO.SYSOBJECTS
                       WHERE ID = OBJECT_ID ( N'tempdb..##_TEMP_HFit_HealthAssesmentUserRiskArea')) 
        BEGIN
            DROP TABLE
                 ##_TEMP_HFIT_HEALTHASSESMENTUSERRISKAREA;
        END;
    SELECT
           HAUSERRISKAREA.ITEMID
         , HAUSERRISKAREA.CODENAME
         , HAUSERRISKAREA.HARISKAREANODEGUID
         , HAUSERRISKAREA.HARISKAREASCORE
         , HAUSERRISKAREA.PREWEIGHTEDSCORE
         , HAUSERRISKAREA.ITEMMODIFIEDWHEN
         , HAUSERRISKAREA.HARISKCATEGORYITEMID
         , GETDATE () AS LASTLOADEDDATE
    INTO
         ##_TEMP_HFIT_HEALTHASSESMENTUSERRISKAREA
           FROM BASE_HFIT_HEALTHASSESMENTUSERRISKAREA AS HAUSERRISKAREA;

    CREATE NONCLUSTERED INDEX PI_HEALTHASSESMENTUSERRISKAREA
    ON ##_TEMP_HFIT_HEALTHASSESMENTUSERRISKAREA ( ITEMID , HARISKCATEGORYITEMID) 
    INCLUDE ( CODENAME , HARISKAREANODEGUID , HARISKAREASCORE , PREWEIGHTEDSCORE , ITEMMODIFIEDWHEN) ;
    IF EXISTS ( SELECT
                       NAME
                       FROM TEMPDB.DBO.SYSOBJECTS
                       WHERE ID = OBJECT_ID ( N'tempdb..##_TEMP_HFit_HealthAssesmentUserQuestionGroupResults')) 
        BEGIN
            DROP TABLE
                 ##_TEMP_HFIT_HEALTHASSESMENTUSERQUESTIONGROUPRESULTS;
        END;
    SELECT
           HAUSERQUESTIONGROUPRESULTS.ITEMID
         , HAUSERQUESTIONGROUPRESULTS.POINTRESULTS
         , HAUSERQUESTIONGROUPRESULTS.CODENAME
         , HAUSERQUESTIONGROUPRESULTS.HARISKAREAITEMID
         , GETDATE () AS LASTLOADEDDATE
    INTO
         ##_TEMP_HFIT_HEALTHASSESMENTUSERQUESTIONGROUPRESULTS
           FROM FACT_EDW_HFit_HealthAssesmentUserQuestionGroupResults AS HAUSERQUESTIONGROUPRESULTS;

    CREATE NONCLUSTERED INDEX PI_HEALTHASSESMENTUSERQUESTIONGROUPRESULTS
    ON ##_TEMP_HFIT_HEALTHASSESMENTUSERQUESTIONGROUPRESULTS ( ITEMID) 
    INCLUDE ( POINTRESULTS , CODENAME , HARISKAREAITEMID) ;
    IF EXISTS ( SELECT
                       NAME
                       FROM TEMPDB.DBO.SYSOBJECTS
                       WHERE ID = OBJECT_ID ( N'tempdb..##_TEMP_HFit_HealthAssesmentUserQuestion')) 
        BEGIN
            DROP TABLE
                 ##_TEMP_HFit_HealthAssesmentUserQuestion;
        END;
    SELECT
           USERQUES.ITEMID
         , USERQUES.HAQUESTIONNODEGUID
         , USERQUES.CODENAME
         , USERQUES.HAQUESTIONSCORE
         , USERQUES.PREWEIGHTEDSCORE
         , USERQUES.ISPROFESSIONALLYCOLLECTED
         , USERQUES.ITEMMODIFIEDWHEN
         , USERQUES.HARISKAREAITEMID
         , CT_HFIT_HEALTHASSESMENTUSERQUESTION.ITEMID AS HFIT_HEALTHASSESMENTUSERQUESTION_CTID
         , CT_HFIT_HEALTHASSESMENTUSERQUESTION.SYS_CHANGE_OPERATION AS HFIT_HEALTHASSESMENTUSERQUESTION_CHANGE_OPERATION
         , CT_HFIT_HEALTHASSESMENTUSERQUESTION.SYS_CHANGE_VERSION AS CT_HFIT_HEALTHASSESMENTUSERQUESTION_SCV
         , GETDATE () AS LASTLOADEDDATE
    INTO
         ##_TEMP_HFit_HealthAssesmentUserQuestion
           FROM
                BASE_HFIT_HEALTHASSESMENTUSERQUESTION AS USERQUES
                     LEFT OUTER JOIN CHANGETABLE (CHANGES BASE_HFIT_HEALTHASSESMENTUSERQUESTION , NULL) AS CT_HFIT_HEALTHASSESMENTUSERQUESTION
                     ON USERQUES.ITEMID = CT_HFIT_HEALTHASSESMENTUSERQUESTION.ITEMID;

    PRINT '##_TEMP_HFit_HealthAssesmentUserQuestion Created';
    -- select top 100 * from ##_TEMP_HFit_HealthAssesmentUserQuestion

    CREATE UNIQUE CLUSTERED INDEX PI_HFit_HealthAssesmentUserQuestion ON ##_TEMP_HFit_HealthAssesmentUserQuestion
    (
    ITEMID
    , HARISKAREAITEMID
    , HAQUESTIONNODEGUID
    , CODENAME
    , HAQUESTIONSCORE
    , PREWEIGHTEDSCORE
    , ITEMMODIFIEDWHEN
    )WITH ( PAD_INDEX = OFF , STATISTICS_NORECOMPUTE = OFF , SORT_IN_TEMPDB = OFF , IGNORE_DUP_KEY = OFF , DROP_EXISTING = OFF , ONLINE = OFF , ALLOW_ROW_LOCKS = ON , ALLOW_PAGE_LOCKS = ON) ;

    CREATE NONCLUSTERED INDEX PI_USERQUES_RISKAREAID
    ON ##_TEMP_HFit_HealthAssesmentUserQuestion ( HARISKAREAITEMID) 
    INCLUDE ( ITEMID , HAQUESTIONNODEGUID , CODENAME , HAQUESTIONSCORE , PREWEIGHTEDSCORE , ISPROFESSIONALLYCOLLECTED , ITEMMODIFIEDWHEN) ;

    IF EXISTS ( SELECT
                       NAME
                       FROM TEMPDB.DBO.SYSOBJECTS
                       WHERE ID = OBJECT_ID ( N'tempdb..##_TEMP_View_HFit_HACampaign_Joined')) 
        BEGIN

            --PRINT 'Dropping ##_TEMP_View_HFit_HACampaign_Joined';

            DROP TABLE
                 ##_TEMP_VIEW_HFIT_HACAMPAIGN_JOINED;
        END;
    SELECT
           CAMPAIGN.DOCUMENTCULTURE
         , CAMPAIGN.HACAMPAIGNID
         , CAMPAIGN.NODEGUID
         , CAMPAIGN.NODESITEID
         , CAMPAIGN.HEALTHASSESSMENTID
         , GETDATE () AS LASTLOADEDDATE
    INTO
         ##_TEMP_VIEW_HFIT_HACAMPAIGN_JOINED
           FROM VIEW_HFIT_HACAMPAIGN_JOINED AS CAMPAIGN;

    CREATE UNIQUE CLUSTERED INDEX PI_VIEW_HFIT_HACAMPAIGN_JOINED ON ##_TEMP_VIEW_HFIT_HACAMPAIGN_JOINED
    (
    DOCUMENTCULTURE ASC ,
    HACAMPAIGNID ASC ,
    NODEGUID ASC ,
    HEALTHASSESSMENTID
    )WITH ( PAD_INDEX = OFF , STATISTICS_NORECOMPUTE = OFF , SORT_IN_TEMPDB = OFF , IGNORE_DUP_KEY = OFF , DROP_EXISTING = OFF , ONLINE = OFF , ALLOW_ROW_LOCKS = ON , ALLOW_PAGE_LOCKS = ON) ;

    IF EXISTS ( SELECT
                       NAME
                       FROM TEMPDB.DBO.SYSOBJECTS
                       WHERE ID = OBJECT_ID ( N'tempdb..##_TEMP_View_HFit_HealthAssessment_Joined')) 
        BEGIN

            --PRINT 'Dropping ##_TEMP_View_HFit_HealthAssessment_Joined';

            DROP TABLE
                 ##_TEMP_VIEW_HFIT_HEALTHASSESSMENT_JOINED;
        END;

    --select top 100 * from View_HFit_HealthAssessment_Joined

    SELECT
           HAJOINED.NODEGUID
         , HAJOINED.DOCUMENTID
         , HAJOINED.DOCUMENTCULTURE
         , GETDATE () AS LASTLOADEDDATE
    INTO
         ##_TEMP_VIEW_HFIT_HEALTHASSESSMENT_JOINED
           FROM VIEW_HFIT_HEALTHASSESSMENT_JOINED AS HAJOINED;
    SET ANSI_PADDING ON;

    CREATE UNIQUE CLUSTERED INDEX PI_VIEW_HFIT_HEALTHASSESSMENT_JOINED ON ##_TEMP_VIEW_HFIT_HEALTHASSESSMENT_JOINED
    (
    NODEGUID ASC ,
    DOCUMENTID ASC
    )WITH ( PAD_INDEX = OFF , STATISTICS_NORECOMPUTE = OFF , SORT_IN_TEMPDB = OFF , IGNORE_DUP_KEY = OFF , DROP_EXISTING = OFF , ONLINE = OFF , ALLOW_ROW_LOCKS = ON , ALLOW_PAGE_LOCKS = ON) ;
    IF EXISTS ( SELECT
                       NAME
                       FROM TEMPDB.DBO.SYSOBJECTS
                       WHERE ID = OBJECT_ID ( N'tempdb..##_TEMP_View_EDW_HealthAssesmentQuestions')) 
        BEGIN
            DROP TABLE
                 ##_TEMP_VIEW_EDW_HEALTHASSESMENTQUESTIONS;
        END;

    SELECT
           DBO.UDF_STRIPHTML ( QUES.TITLE) AS TITLE
         , QUES.DOCUMENTCULTURE
         , QUES.NODEGUID
         , GETDATE () AS LASTLOADEDDATE
    INTO
         ##_TEMP_VIEW_EDW_HEALTHASSESMENTQUESTIONS
           FROM VIEW_EDW_HEALTHASSESMENTQUESTIONS AS QUES;

    IF NOT EXISTS ( SELECT
                           NAME
                           FROM SYS.INDEXES
                           WHERE NAME = 'PI_HAUserQuestionGroupResults') 
        BEGIN
            CREATE NONCLUSTERED INDEX PI_HAUserQuestionGroupResults
            ON DBO.##_TEMP_HFIT_HEALTHASSESMENTUSERQUESTIONGROUPRESULTS ( HARISKAREAITEMID) 
            INCLUDE ( ITEMID , POINTRESULTS , CODENAME) ;
        END;
    SET ANSI_PADDING ON;

    CREATE UNIQUE CLUSTERED INDEX PI_VIEW_EDW_HEALTHASSESMENTQUESTIONS ON ##_TEMP_VIEW_EDW_HEALTHASSESMENTQUESTIONS
    (
    DOCUMENTCULTURE ASC ,
    NODEGUID ASC
    )WITH ( PAD_INDEX = OFF , STATISTICS_NORECOMPUTE = OFF , SORT_IN_TEMPDB = OFF , IGNORE_DUP_KEY = OFF , DROP_EXISTING = OFF , ONLINE = OFF , ALLOW_ROW_LOCKS = ON , ALLOW_PAGE_LOCKS = ON) ;

    PRINT 'TempData Loaded: ';
    PRINT CHAR ( 10) ;
    PRINT GETDATE () ;
    PRINT CHAR ( 10) ;
    PRINT 'Seconds: ' + CAST ( DATEDIFF ( SECOND , @St , GETDATE ()) AS NVARCHAR (50)) ;
    PRINT CHAR ( 10) ;

    DECLARE
           @StPullTime AS DATETIME = GETDATE () ;

    --************************************************************
    --TO THIS POINT: Averages around 3 minutes. WDM 06.01.2015
    --TO THIS POINT: Averages around 5 minutes, now - more temp tables. WDM 06.01.2015

    DECLARE
           @Stdataload AS DATETIME = GETDATE () ;
    SELECT
           HAUSERSTARTED.ITEMID AS USERSTARTEDITEMID
         , VHAJ.NODEGUID AS HEALTHASSESMENTUSERSTARTEDNODEGUID
         , HAUSERSTARTED.USERID
         , CMSUSER.USERGUID
         , USERSETTINGS.HFITUSERMPINUMBER
         , CMSSITE.SITEGUID
         , ACCT.ACCOUNTID
         , ACCT.ACCOUNTCD
         , ACCT.ACCOUNTNAME
         , HAUSERSTARTED.HASTARTEDDT
         , HAUSERSTARTED.HACOMPLETEDDT
         , HAUSERMODULE.ITEMID AS USERMODULEITEMID
         , HAUSERMODULE.CODENAME AS USERMODULECODENAME
         , HAUSERMODULE.HAMODULENODEGUID
         , VHAJ.NODEGUID AS CMSNODEGUID
         , NULL AS HAMODULEVERSIONID
         , HARISKCATEGORY.ITEMID AS USERRISKCATEGORYITEMID
         , HARISKCATEGORY.CODENAME AS USERRISKCATEGORYCODENAME
         , HARISKCATEGORY.HARISKCATEGORYNODEGUID
         , NULL AS HARISKCATEGORYVERSIONID
         , HAUSERRISKAREA.ITEMID AS USERRISKAREAITEMID
         , HAUSERRISKAREA.CODENAME AS USERRISKAREACODENAME
         , HAUSERRISKAREA.HARISKAREANODEGUID
         , NULL AS HARISKAREAVERSIONID
         , HAUSERQUESTION.ITEMID AS USERQUESTIONITEMID
         , DBO.UDF_STRIPHTML ( HAQUESTIONSVIEW.TITLE) AS TITLE
         , HAUSERQUESTION.HAQUESTIONNODEGUID AS HAQUESTIONGUID
         , HAUSERQUESTION.CODENAME AS USERQUESTIONCODENAME
         , NULL AS HAQUESTIONDOCUMENTID
         , NULL AS HAQUESTIONVERSIONID
         , HAUSERQUESTION.HAQUESTIONNODEGUID
         , HAUSERANSWERS.ITEMID AS USERANSWERITEMID
         , HAUSERANSWERS.HAANSWERNODEGUID
         , NULL AS HAANSWERVERSIONID
         , HAUSERANSWERS.CODENAME AS USERANSWERCODENAME
         , HAUSERANSWERS.HAANSWERVALUE
         , HAUSERMODULE.HAMODULESCORE
         , HARISKCATEGORY.HARISKCATEGORYSCORE
         , HAUSERRISKAREA.HARISKAREASCORE
         , HAUSERQUESTION.HAQUESTIONSCORE
         , HAUSERANSWERS.HAANSWERPOINTS
         , HAUSERQUESTIONGROUPRESULTS.POINTRESULTS
         , HAUSERANSWERS.UOMCODE
         , HAUSERSTARTED.HASCORE
         , HAUSERMODULE.PREWEIGHTEDSCORE AS MODULEPREWEIGHTEDSCORE
         , HARISKCATEGORY.PREWEIGHTEDSCORE AS RISKCATEGORYPREWEIGHTEDSCORE
         , HAUSERRISKAREA.PREWEIGHTEDSCORE AS RISKAREAPREWEIGHTEDSCORE
         , HAUSERQUESTION.PREWEIGHTEDSCORE AS QUESTIONPREWEIGHTEDSCORE
         , HAUSERQUESTIONGROUPRESULTS.CODENAME AS QUESTIONGROUPCODENAME
         , COALESCE ( CT_CMS_USER.SYS_CHANGE_OPERATION , CT_CMS_USERSETTINGS.SYS_CHANGE_OPERATION , CT_CMS_SITE.SYS_CHANGE_OPERATION , CT_CMS_USERSITE.SYS_CHANGE_OPERATION , CT_HFIT_ACCOUNT.SYS_CHANGE_OPERATION , CT_HFIT_HEALTHASSESMENTUSERANSWERS.SYS_CHANGE_OPERATION ,
           CT_HFIT_HEALTHASSESMENTUSERMODULE.SYS_CHANGE_OPERATION , CT_HFIT_HEALTHASSESMENTUSERQUESTION.SYS_CHANGE_OPERATION ,
           CT_HFIT_HEALTHASSESMENTUSERQUESTIONGROUPRESULTS.SYS_CHANGE_OPERATION , CT_HFIT_HEALTHASSESMENTUSERRISKAREA.SYS_CHANGE_OPERATION ,
           CT_HFIT_HEALTHASSESMENTUSERRISKCATEGORY.SYS_CHANGE_OPERATION , CT_HFIT_HEALTHASSESMENTUSERSTARTED.SYS_CHANGE_OPERATION) AS CHANGETYPE
         , HAUSERANSWERS.ITEMCREATEDWHEN
         , HAUSERANSWERS.ITEMMODIFIEDWHEN
         , HAUSERQUESTION.ISPROFESSIONALLYCOLLECTED
         , HARISKCATEGORY.ITEMMODIFIEDWHEN AS HARISKCATEGORY_ITEMMODIFIEDWHEN
         , HAUSERRISKAREA.ITEMMODIFIEDWHEN AS HAUSERRISKAREA_ITEMMODIFIEDWHEN
         , HAUSERQUESTION.ITEMMODIFIEDWHEN AS HAUSERQUESTION_ITEMMODIFIEDWHEN
         , HAUSERANSWERS.ITEMMODIFIEDWHEN AS HAUSERANSWERS_ITEMMODIFIEDWHEN
         , HAUSERSTARTED.HAPAPERFLG
         , HAUSERSTARTED.HATELEPHONICFLG
         , HAUSERSTARTED.HASTARTEDMODE
         , HAUSERSTARTED.HACOMPLETEDMODE
         , VHCJ.DOCUMENTCULTURE AS DOCUMENTCULTURE_VHCJ
         , HAQUESTIONSVIEW.DOCUMENTCULTURE AS DOCUMENTCULTURE_HAQUESTIONSVIEW
         , HAUSERSTARTED.HACAMPAIGNNODEGUID AS CAMPAIGNNODEGUID
         , VHCJ.HACAMPAIGNID
         , CAST ( HASHBYTES ( 'sha1' ,
           ISNULL ( CAST ( HAUSERSTARTED.ITEMID AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( VHAJ.NODEGUID  AS NVARCHAR (100)) , '-') + ISNULL ( CAST (
           HAUSERSTARTED.USERID AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( CMSUSER.USERGUID AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( USERSETTINGS.HFITUSERMPINUMBER AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( CMSSITE.SITEGUID AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( ACCT.ACCOUNTID AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( ACCT.ACCOUNTCD AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( ACCT.ACCOUNTNAME AS NVARCHAR (100)) , '-') + ISNULL ( CAST (
           HAUSERSTARTED.HASTARTEDDT AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HAUSERSTARTED.HACOMPLETEDDT AS NVARCHAR (100)) , '-') + ISNULL ( CAST (
           HAUSERMODULE.ITEMID  AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HAUSERMODULE.CODENAME  AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HAUSERMODULE.HAMODULENODEGUID AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( VHAJ.NODEGUID  AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HARISKCATEGORY.ITEMID AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HARISKCATEGORY.CODENAME AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HARISKCATEGORY.HARISKCATEGORYNODEGUID AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HAUSERRISKAREA.ITEMID AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HAUSERRISKAREA.CODENAME AS NVARCHAR (100)) ,
           '-') + ISNULL ( CAST ( HAUSERRISKAREA.HARISKAREANODEGUID AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HAUSERQUESTION.ITEMID AS NVARCHAR (100)) , '-') + ISNULL ( LEFT ( HAQUESTIONSVIEW.TITLE , 1000) , '-') + ISNULL ( CAST ( HAUSERQUESTION.HAQUESTIONNODEGUID  AS NVARCHAR (100)) , '-') + ISNULL ( CAST (
           HAUSERQUESTION.CODENAME  AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HAUSERQUESTION.HAQUESTIONNODEGUID AS NVARCHAR (100)) , '-') + ISNULL ( CAST (
           HAUSERANSWERS.ITEMID AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HAUSERANSWERS.HAANSWERNODEGUID AS NVARCHAR (100)) , '-') + ISNULL ( CAST (
           HAUSERANSWERS.CODENAME AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HAUSERANSWERS.HAANSWERVALUE AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HAUSERMODULE.HAMODULESCORE AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HARISKCATEGORY.HARISKCATEGORYSCORE AS NVARCHAR (100)) , '-') + ISNULL ( CAST (
           HAUSERRISKAREA.HARISKAREASCORE AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HAUSERQUESTION.HAQUESTIONSCORE AS NVARCHAR (100)) , '-') + ISNULL ( CAST (
           HAUSERANSWERS.HAANSWERPOINTS AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HAUSERQUESTIONGROUPRESULTS.POINTRESULTS AS NVARCHAR (100)) , '-') + ISNULL (
           CAST ( HAUSERANSWERS.UOMCODE AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HAUSERSTARTED.HASCORE AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HAUSERMODULE.PREWEIGHTEDSCORE AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HARISKCATEGORY.PREWEIGHTEDSCORE  AS NVARCHAR (100)) , '-') + ISNULL ( CAST (
           HAUSERRISKAREA.PREWEIGHTEDSCORE  AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HAUSERQUESTION.PREWEIGHTEDSCORE  AS NVARCHAR (100)) , '-') + ISNULL ( CAST
           ( HAUSERQUESTIONGROUPRESULTS.CODENAME AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HAUSERANSWERS.ITEMCREATEDWHEN AS NVARCHAR (100)) , '-') + ISNULL (
           CAST ( HAUSERANSWERS.ITEMMODIFIEDWHEN AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HAUSERQUESTION.ISPROFESSIONALLYCOLLECTED AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HARISKCATEGORY.ITEMMODIFIEDWHEN AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HAUSERRISKAREA.ITEMMODIFIEDWHEN AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HAUSERQUESTION.ITEMMODIFIEDWHEN AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HAUSERANSWERS.ITEMMODIFIEDWHEN AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HAUSERSTARTED.HAPAPERFLG AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HAUSERSTARTED.HATELEPHONICFLG AS NVARCHAR (100)) , '-') + ISNULL (
           CAST ( HAUSERSTARTED.HASTARTEDMODE AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( HAUSERSTARTED.HACOMPLETEDMODE AS NVARCHAR (100)) , '-') + ISNULL ( CAST
           ( HAUSERSTARTED.HACAMPAIGNNODEGUID AS NVARCHAR (100)) , '-') + ISNULL ( CAST ( VHCJ.HACAMPAIGNID AS NVARCHAR (100)) , '-') + ISNULL ( CAST (
           HAUSERANSWERS.ITEMMODIFIEDWHEN AS NVARCHAR (100)) , '-')) AS VARCHAR (100)) AS HASHCODE
         , CAST ( HASHBYTES ( 'sha1' , ISNULL ( CAST ( HAUSERSTARTED.ITEMID AS VARCHAR (50)) , '-') + ISNULL ( CAST ( VHAJ.NODEGUID  AS VARCHAR (50)) , '-') + ISNULL ( CAST ( USERGUID AS VARCHAR (50)) , '-') + ISNULL ( CAST ( SITEGUID AS VARCHAR (50)) , '-') + ISNULL ( CAST ( ACCT.ACCOUNTID AS VARCHAR (50)) , '-') + ISNULL ( CAST ( ACCOUNTCD AS VARCHAR (50)) , '-') + ISNULL ( CAST ( HAUSERMODULE.ITEMID AS VARCHAR (50)) , '-') + ISNULL ( CAST ( HAMODULENODEGUID AS VARCHAR (50)) , '-') + ISNULL ( CAST ( VHAJ.NODEGUID AS VARCHAR (50)) , '-') + ISNULL ( CAST ( HARISKCATEGORY.ITEMID AS VARCHAR (50)) , '-') + ISNULL ( CAST ( HARISKCATEGORYNODEGUID AS VARCHAR (50)) , '-') + ISNULL ( CAST ( HARISKCATEGORY.CODENAME AS VARCHAR (100)) , '-') + ISNULL ( CAST ( HARISKCATEGORY.HARISKCATEGORYNODEGUID AS VARCHAR (50)) , '-') + ISNULL ( CAST ( HAUSERRISKAREA.ITEMID AS VARCHAR (50)) , '-') + ISNULL ( CAST ( HARISKAREANODEGUID AS VARCHAR (50)) , '-') + ISNULL ( CAST ( HAUSERRISKAREA.CODENAME AS VARCHAR (50)) , '-') + ISNULL ( CAST ( HAUSERQUESTION.ITEMID AS VARCHAR (50)) , '-') + ISNULL ( CAST ( HAUSERQUESTION.HAQUESTIONNODEGUID AS VARCHAR (50)) , '-') + ISNULL ( CAST ( HAUSERQUESTION.CODENAME AS VARCHAR (50)) , '-') + ISNULL ( CAST ( HAQUESTIONNODEGUID AS VARCHAR (50)) , '-') + ISNULL ( CAST ( HAUSERANSWERS.ITEMID AS VARCHAR (50)) , '-') + ISNULL ( CAST ( HAANSWERNODEGUID   AS VARCHAR (50)) , '-') + ISNULL ( CAST ( HAUSERSTARTED.HACAMPAIGNNODEGUID AS VARCHAR (50)) , '-')) AS VARCHAR (100)) AS PKHASHCODE
         , COALESCE ( CT_CMS_USER.USERID , CT_CMS_USERSETTINGS.USERSETTINGSID , CT_CMS_SITE.SITEID , CT_CMS_USERSITE.USERSITEID , CT_HFIT_ACCOUNT.ACCOUNTID , CT_HFIT_HEALTHASSESMENTUSERANSWERS.ITEMID , CT_HFIT_HEALTHASSESMENTUSERMODULE.ITEMID , CT_HFIT_HEALTHASSESMENTUSERQUESTION.ITEMID , CT_HFIT_HEALTHASSESMENTUSERQUESTIONGROUPRESULTS.ITEMID , CT_HFIT_HEALTHASSESMENTUSERRISKAREA.ITEMID , CT_HFIT_HEALTHASSESMENTUSERRISKCATEGORY.ITEMID , CT_HFIT_HEALTHASSESMENTUSERSTARTED.ITEMID) AS CHANGED_FLG

           --*************************************
           --join changes to the records 

         , CT_CMS_USER.USERID AS CT_CMS_USER_USERID
         , CT_CMS_USER.SYS_CHANGE_OPERATION AS CT_CMS_USER_CHANGE_OPERATION
         , CT_CMS_USERSETTINGS.USERSETTINGSID AS CT_USERSETTINGSID
         , CT_CMS_USERSETTINGS.SYS_CHANGE_OPERATION AS CT_USERSETTINGSID_CHANGE_OPERATION
         , CT_CMS_SITE.SITEID AS SITEID_CTID
         , CT_CMS_SITE.SYS_CHANGE_OPERATION AS SITEID_CHANGE_OPERATION
         , CT_CMS_USERSITE.USERSITEID AS USERSITEID_CTID
         , CT_CMS_USERSITE.SYS_CHANGE_OPERATION AS USERSITEID_CHANGE_OPERATION
         , CT_HFIT_ACCOUNT.ACCOUNTID AS ACCOUNTID_CTID
         , CT_HFIT_ACCOUNT.SYS_CHANGE_OPERATION AS ACCOUNTID__CHANGE_OPERATION
         , CT_HFIT_HEALTHASSESMENTUSERANSWERS.ITEMID AS HAUSERANSWERS_CTID
         , CT_HFIT_HEALTHASSESMENTUSERANSWERS.SYS_CHANGE_OPERATION AS HAUSERANSWERS_CHANGE_OPERATION
         , CT_HFIT_HEALTHASSESMENTUSERMODULE.ITEMID AS HFIT_HEALTHASSESMENTUSERMODULE_CTID
         , CT_HFIT_HEALTHASSESMENTUSERMODULE.SYS_CHANGE_OPERATION AS HFIT_HEALTHASSESMENTUSERMODULE_CHANGE_OPERATION
         , CT_HFIT_HEALTHASSESMENTUSERQUESTION.ITEMID AS HFIT_HEALTHASSESMENTUSERQUESTION_CTID
         , CT_HFIT_HEALTHASSESMENTUSERQUESTION.SYS_CHANGE_OPERATION AS HFIT_HEALTHASSESMENTUSERQUESTION_CHANGE_OPERATION
         , CT_HFIT_HEALTHASSESMENTUSERQUESTIONGROUPRESULTS.ITEMID AS HFIT_HEALTHASSESMENTUSERQUESTIONGROUPRESULTS_CTID
         , CT_HFIT_HEALTHASSESMENTUSERQUESTIONGROUPRESULTS.SYS_CHANGE_OPERATION AS HFIT_HEALTHASSESMENTUSERQUESTIONGROUPRESULTS_CHANGE_OPERATION
         , CT_HFIT_HEALTHASSESMENTUSERRISKAREA.ITEMID AS HFIT_HEALTHASSESMENTUSERRISKAREA_CTID
         , CT_HFIT_HEALTHASSESMENTUSERRISKAREA.SYS_CHANGE_OPERATION AS HFIT_HEALTHASSESMENTUSERRISKAREA_CHANGE_OPERATION
         , CT_HFIT_HEALTHASSESMENTUSERRISKCATEGORY.ITEMID AS HFIT_HEALTHASSESMENTUSERRISKCATEGORY_CTID
         , CT_HFIT_HEALTHASSESMENTUSERRISKCATEGORY.SYS_CHANGE_OPERATION AS HFIT_HEALTHASSESMENTUSERRISKCATEGORY_CHANGE_OPERATION
         , CT_HFIT_HEALTHASSESMENTUSERSTARTED.ITEMID AS HFIT_HEALTHASSESMENTUSERSTARTED_CTID
         , CT_HFIT_HEALTHASSESMENTUSERSTARTED.SYS_CHANGE_OPERATION AS HFIT_HEALTHASSESMENTUSERSTARTED_CHANGE_OPERATION

           --Get the TYPE of change ID NUMBER

         , CT_CMS_USER.SYS_CHANGE_VERSION AS CT_CMS_USER_SCV
         , CT_CMS_USERSETTINGS.SYS_CHANGE_VERSION AS CT_CMS_USERSETTINGS_SCV
         , CT_CMS_SITE.SYS_CHANGE_VERSION AS CT_CMS_SITE_SCV
         , CT_CMS_USERSITE.SYS_CHANGE_VERSION AS CT_CMS_USERSITE_SCV
         , CT_HFIT_ACCOUNT.SYS_CHANGE_VERSION AS CT_HFIT_ACCOUNT_SCV
         , CT_HFIT_HEALTHASSESMENTUSERANSWERS.SYS_CHANGE_VERSION AS CT_HFIT_HEALTHASSESMENTUSERANSWERS_SCV
         , CT_HFIT_HEALTHASSESMENTUSERMODULE.SYS_CHANGE_VERSION AS CT_HFIT_HEALTHASSESMENTUSERMODULE_SCV
         , CT_HFIT_HEALTHASSESMENTUSERQUESTION.SYS_CHANGE_VERSION AS CT_HFIT_HEALTHASSESMENTUSERQUESTION_SCV
         , CT_HFIT_HEALTHASSESMENTUSERQUESTIONGROUPRESULTS.SYS_CHANGE_VERSION AS CT_HFIT_HEALTHASSESMENTUSERQUESTIONGROUPRESULTS_SCV
         , CT_HFIT_HEALTHASSESMENTUSERRISKAREA.SYS_CHANGE_VERSION AS CT_HFIT_HEALTHASSESMENTUSERRISKAREA_SCV
         , CT_HFIT_HEALTHASSESMENTUSERRISKCATEGORY.SYS_CHANGE_VERSION AS CT_HFIT_HEALTHASSESMENTUSERRISKCATEGORY_SCV
         , CT_HFIT_HEALTHASSESMENTUSERSTARTED.SYS_CHANGE_VERSION AS CT_HFIT_HEALTHASSESMENTUSERSTARTED_SCV
         , HAUSERANSWERS.ITEMMODIFIEDWHEN AS LastModifiedDATE
         , 0 AS DELETEFLG
         , CASE
               WHEN HAUserStarted.HADocumentConfigID IS NULL
                   THEN 'SHORT_VER'
               WHEN HAUserStarted.HADocumentConfigID IS NOT NULL
                   THEN 'LONG_VER'
               ELSE 'UNKNOWN'
           END AS HealthAssessmentType
         , GETDATE () AS LASTLOADEDDATE
         , @@SERVERNAME AS SVR
         , DB_NAME () AS DBNAME
    INTO
         ##HealthAssessmentData
           FROM
                ##_HFIT_HEALTHASSESMENTUSERSTARTED AS HAUSERSTARTED
                     INNER JOIN ##_CMS_USER AS CMSUSER
                     ON HAUSERSTARTED.USERID = CMSUSER.USERID
                     INNER JOIN ##_CMS_USERSETTINGS AS USERSETTINGS
                     ON
                        USERSETTINGS.USERSETTINGSUSERID = CMSUSER.USERID AND
                        HFITUSERMPINUMBER >= 0 AND
                        HFITUSERMPINUMBER IS NOT NULL
                     INNER JOIN ##_CMS_USERSITE AS USERSITE
                     ON CMSUSER.USERID = USERSITE.USERID
                     INNER JOIN DBO.BASE_CMS_SITE AS CMSSITE
                     ON USERSITE.SITEID = CMSSITE.SITEID
                     INNER JOIN DBO.BASE_HFIT_ACCOUNT AS ACCT
                     ON ACCT.SITEID = CMSSITE.SITEID
                     INNER JOIN ##_HFIT_HEALTHASSESMENTUSERMODULE AS HAUSERMODULE
                     ON HAUSERSTARTED.ITEMID = HAUSERMODULE.HASTARTEDITEMID
                     INNER JOIN ##_TEMP_VIEW_HFIT_HACAMPAIGN_JOINED AS VHCJ
                     ON
                        VHCJ.NODEGUID = HAUSERSTARTED.HACAMPAIGNNODEGUID AND
                        VHCJ.NODESITEID = USERSITE.SITEID AND
                        VHCJ.DOCUMENTCULTURE = 'en-US'
                     INNER JOIN ##_TEMP_VIEW_HFIT_HEALTHASSESSMENT_JOINED AS VHAJ
                     ON VHAJ.DOCUMENTID = VHCJ.HEALTHASSESSMENTID
                     INNER JOIN ##_HFIT_HEALTHASSESMENTUSERRISKCATEGORY AS HARISKCATEGORY
                     ON HAUSERMODULE.ITEMID = HARISKCATEGORY.HAMODULEITEMID
                     INNER JOIN ##_TEMP_HFIT_HEALTHASSESMENTUSERRISKAREA AS HAUSERRISKAREA
                     ON HARISKCATEGORY.ITEMID = HAUSERRISKAREA.HARISKCATEGORYITEMID
                     INNER JOIN ##_TEMP_HFit_HealthAssesmentUserQuestion AS HAUSERQUESTION
                     ON HAUSERRISKAREA.ITEMID = HAUSERQUESTION.HARISKAREAITEMID
                     INNER JOIN ##_TEMP_VIEW_EDW_HEALTHASSESMENTQUESTIONS AS HAQUESTIONSVIEW
                     ON HAUSERQUESTION.HAQUESTIONNODEGUID = HAQUESTIONSVIEW.NODEGUID
                     LEFT OUTER JOIN ##_TEMP_HFIT_HEALTHASSESMENTUSERQUESTIONGROUPRESULTS AS HAUSERQUESTIONGROUPRESULTS
                     ON HAUSERRISKAREA.ITEMID = HAUSERQUESTIONGROUPRESULTS.HARISKAREAITEMID
                     INNER JOIN ##_TEMP_HFIT_HEALTHASSESMENTUSERANSWERS AS HAUSERANSWERS
                     ON HAUSERQUESTION.ITEMID = HAUSERANSWERS.HAQUESTIONITEMID --**********************************
                --Add in the change tracking data
                     LEFT JOIN CHANGETABLE (CHANGES CMS_USERSETTINGS , NULL) AS CT_CMS_USERSETTINGS
                     ON USERSETTINGS.USERSETTINGSID = CT_CMS_USERSETTINGS.USERSETTINGSID
                     LEFT JOIN CHANGETABLE (CHANGES CMS_USER , NULL) AS CT_CMS_USER
                     ON CMSUSER.USERID = CT_CMS_USER.USERID
                     LEFT OUTER JOIN CHANGETABLE (CHANGES CMS_SITE , NULL) AS CT_CMS_SITE
                     ON CMSSITE.SITEID = CT_CMS_SITE.SITEID
                     LEFT OUTER JOIN CHANGETABLE (CHANGES CMS_USERSITE , NULL) AS CT_CMS_USERSITE
                     ON USERSITE.USERSITEID = CT_CMS_USERSITE.USERSITEID
                     LEFT OUTER JOIN CHANGETABLE (CHANGES HFIT_ACCOUNT , NULL) AS CT_HFIT_ACCOUNT
                     ON ACCT.ACCOUNTID = CT_HFIT_ACCOUNT.ACCOUNTID
                     LEFT OUTER JOIN CHANGETABLE (CHANGES HFIT_HACAMPAIGN , NULL) AS CT_HFIT_HACAMPAIGN
                     ON VHCJ.HACAMPAIGNID = CT_HFIT_HACAMPAIGN.HACAMPAIGNID
                     LEFT OUTER JOIN CHANGETABLE (CHANGES BASE_HFit_HealthAssesmentUserAnswers , NULL) AS CT_HFIT_HEALTHASSESMENTUSERANSWERS
                     ON HAUSERANSWERS.ITEMID = CT_HFIT_HEALTHASSESMENTUSERANSWERS.ITEMID
                     LEFT OUTER JOIN CHANGETABLE (CHANGES HFIT_HEALTHASSESMENTUSERMODULE , NULL) AS CT_HFIT_HEALTHASSESMENTUSERMODULE
                     ON HAUSERMODULE.ITEMID = CT_HFIT_HEALTHASSESMENTUSERMODULE.ITEMID
                     LEFT OUTER JOIN CHANGETABLE (CHANGES BASE_HFIT_HEALTHASSESMENTUSERQUESTION , NULL) AS CT_HFIT_HEALTHASSESMENTUSERQUESTION
                     ON HAUSERQUESTION.ITEMID = CT_HFIT_HEALTHASSESMENTUSERQUESTION.ITEMID
                     LEFT OUTER JOIN CHANGETABLE (CHANGES FACT_EDW_HFit_HealthAssesmentUserQuestionGroupResults , NULL) AS CT_HFIT_HEALTHASSESMENTUSERQUESTIONGROUPRESULTS
                     ON HAUSERQUESTIONGROUPRESULTS.ITEMID = CT_HFIT_HEALTHASSESMENTUSERQUESTIONGROUPRESULTS.ITEMID
                     LEFT OUTER JOIN CHANGETABLE (CHANGES BASE_HFIT_HEALTHASSESMENTUSERRISKAREA , NULL) AS CT_HFIT_HEALTHASSESMENTUSERRISKAREA
                     ON HAUSERRISKAREA.ITEMID = CT_HFIT_HEALTHASSESMENTUSERRISKAREA.ITEMID
                     LEFT OUTER JOIN CHANGETABLE (CHANGES HFIT_HEALTHASSESMENTUSERRISKCATEGORY , NULL) AS CT_HFIT_HEALTHASSESMENTUSERRISKCATEGORY
                     ON HARISKCATEGORY.ITEMID = CT_HFIT_HEALTHASSESMENTUSERRISKCATEGORY.ITEMID
                     LEFT OUTER JOIN CHANGETABLE (CHANGES HFIT_HEALTHASSESMENTUSERSTARTED , NULL) AS CT_HFIT_HEALTHASSESMENTUSERSTARTED
                     ON HAUSERSTARTED.ITEMID = CT_HFIT_HEALTHASSESMENTUSERSTARTED.ITEMID
           WHERE
           USERSETTINGS.HFITUSERMPINUMBER NOT IN (
           SELECT
                  REJECTMPICODE
                  FROM BASE_HFIT_LKP_EDW_REJECTMPI) AND
           COALESCE ( CT_CMS_User.SYS_CHANGE_OPERATION , CT_CMS_UserSettings.SYS_CHANGE_OPERATION , CT_CMS_Site.SYS_CHANGE_OPERATION , CT_CMS_UserSite.SYS_CHANGE_OPERATION , CT_HFit_Account.SYS_CHANGE_OPERATION , CT_HFit_HealthAssesmentUserAnswers.SYS_CHANGE_OPERATION ,
           CT_HFit_HealthAssesmentUserModule.SYS_CHANGE_OPERATION , CT_HFit_HealthAssesmentUserQuestion.SYS_CHANGE_OPERATION ,
           CT_HFit_HealthAssesmentUserQuestionGroupResults.SYS_CHANGE_OPERATION , CT_HFit_HealthAssesmentUserRiskArea.SYS_CHANGE_OPERATION ,
           CT_HFit_HealthAssesmentUserRiskCategory.SYS_CHANGE_OPERATION , CT_HFit_HealthAssesmentUserStarted.SYS_CHANGE_OPERATION) 
           IS NOT NULL;
    DECLARE
           @recs AS INT = @@ROWCOUNT;
    DECLARE
           @LoadTimeHA AS DECIMAL (10 , 2) = 0;
    DECLARE
           @secs AS DECIMAL (10 , 2) = 0;

    SET @secs = DATEDIFF ( second , @StDataLoad , GETDATE ()) ;
    SET @LoadTimeHA = @secs / 60 / 60;
    PRINT 'HA Data Loaded: ';
    PRINT CHAR ( 10) ;
    PRINT GETDATE () ;
    PRINT CHAR ( 10) ;
    PRINT 'Total Records Loaded : ' + CAST ( @recs AS NVARCHAR (50)) ;
    PRINT CHAR ( 10) ;
    PRINT 'Time in Hours : ' + CAST ( @LoadTimeHA AS NVARCHAR (50)) ;
    PRINT CHAR ( 10) ;

    DECLARE
           @StIndexing AS DATETIME = GETDATE () ;

    IF NOT EXISTS ( SELECT
                           name
                           FROM sys.indexes
                           WHERE name = 'temp_PI_EDW_HealthAssessment_ChangeType') 
        BEGIN
            CREATE INDEX temp_PI_EDW_HealthAssessment_ChangeType ON ##HealthAssessmentData ( ChangeType) 
            WITH ( PAD_INDEX = OFF , STATISTICS_NORECOMPUTE = OFF , SORT_IN_TEMPDB = OFF , DROP_EXISTING = OFF , ONLINE = OFF ,
            ALLOW_ROW_LOCKS = ON ,
            ALLOW_PAGE_LOCKS = ON) ;
        END;
    IF NOT EXISTS ( SELECT
                           name
                           FROM sys.indexes
                           WHERE name = 'temp_PI_EDW_HealthAssessment_NATKEY') 
        BEGIN
            CREATE INDEX temp_PI_EDW_HealthAssessment_NATKEY ON dbo.##HealthAssessmentData ( UserStartedItemID , UserGUID , PKHashCode , HashCode , LastModifiedDate
            );
        END;

    DECLARE
           @IdxTime AS DECIMAL (10 , 2) = 0;
    DECLARE
           @IdxSecs AS DECIMAL (10 , 2) = 0;
    SET @IdxSecs = DATEDIFF ( second , @StIndexing , GETDATE ()) ;
    SET @IdxTime = @secs / 60 / 60;
    PRINT 'Indexes Created: ';
    PRINT CHAR ( 10) ;
    PRINT GETDATE () ;
    PRINT CHAR ( 10) ;
    PRINT 'Index Time in Hours : ' + CAST ( @IdxTime AS NVARCHAR (50)) ;
    PRINT CHAR ( 10) ;
    DECLARE
           @ET AS DATETIME = GETDATE () ;
    DECLARE
           @T AS DECIMAL (10 , 2) = DATEDIFF ( minute , @ST , @ET) 
         , @H AS DECIMAL (10 , 2) = 0;
    SET @H = @T / 60;
    PRINT 'Process Started:';
    PRINT CHAR ( 10) ;
    PRINT @ST;
    PRINT CHAR ( 10) ;
    PRINT 'Process Ended:';
    PRINT CHAR ( 10) ;
    PRINT @ET;
    PRINT CHAR ( 10) ;
    PRINT CHAR ( 10) ;
    PRINT 'TOTAL ROWS: ' + CAST ( @recs AS NVARCHAR (50)) ;
    PRINT CHAR ( 10) ;
    PRINT 'TOTAL Hours: ' + CAST ( @H AS NVARCHAR (50)) ;
    RETURN @recs;
END;
GO
PRINT 'Created proc_Denormalize_EDW_HealthAssessment_VIEWS_CT_Only.sql';
GO
