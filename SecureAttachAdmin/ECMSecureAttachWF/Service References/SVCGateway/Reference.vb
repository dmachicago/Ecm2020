'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Runtime.Serialization

Namespace SVCGateway
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="DS_SecureAttach", [Namespace]:="http://schemas.datacontract.org/2004/07/EcmSecureAttachWCF2"),  _
     System.SerializableAttribute()>  _
    Partial Public Class DS_SecureAttach
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CSField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CSDMALicenseField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CSGateWayField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CSHiveField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CSKBaseField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CSRepoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CSTDRField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CSThesaurusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CompanyIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CreateDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DisabledField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EncPWField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LastModDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RepoIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RowIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SVCCLCArchive_EndpointField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SVCDownload_CSField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SVCDownload_EndpointField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SVCFS_CSField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SVCFS_EndpointField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SVCGateway_CSField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SVCGateway_EndpointField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SVCSearch_CSField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SVCSearch_EndpointField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SVCThesaurus_CSField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private isThesaurusField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CS() As String
            Get
                Return Me.CSField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CSField, value) <> true) Then
                    Me.CSField = value
                    Me.RaisePropertyChanged("CS")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CSDMALicense() As String
            Get
                Return Me.CSDMALicenseField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CSDMALicenseField, value) <> true) Then
                    Me.CSDMALicenseField = value
                    Me.RaisePropertyChanged("CSDMALicense")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CSGateWay() As String
            Get
                Return Me.CSGateWayField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CSGateWayField, value) <> true) Then
                    Me.CSGateWayField = value
                    Me.RaisePropertyChanged("CSGateWay")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CSHive() As String
            Get
                Return Me.CSHiveField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CSHiveField, value) <> true) Then
                    Me.CSHiveField = value
                    Me.RaisePropertyChanged("CSHive")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CSKBase() As String
            Get
                Return Me.CSKBaseField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CSKBaseField, value) <> true) Then
                    Me.CSKBaseField = value
                    Me.RaisePropertyChanged("CSKBase")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CSRepo() As String
            Get
                Return Me.CSRepoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CSRepoField, value) <> true) Then
                    Me.CSRepoField = value
                    Me.RaisePropertyChanged("CSRepo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CSTDR() As String
            Get
                Return Me.CSTDRField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CSTDRField, value) <> true) Then
                    Me.CSTDRField = value
                    Me.RaisePropertyChanged("CSTDR")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CSThesaurus() As String
            Get
                Return Me.CSThesaurusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CSThesaurusField, value) <> true) Then
                    Me.CSThesaurusField = value
                    Me.RaisePropertyChanged("CSThesaurus")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CompanyID() As String
            Get
                Return Me.CompanyIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CompanyIDField, value) <> true) Then
                    Me.CompanyIDField = value
                    Me.RaisePropertyChanged("CompanyID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CreateDate() As Date
            Get
                Return Me.CreateDateField
            End Get
            Set
                If (Me.CreateDateField.Equals(value) <> true) Then
                    Me.CreateDateField = value
                    Me.RaisePropertyChanged("CreateDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Disabled() As Integer
            Get
                Return Me.DisabledField
            End Get
            Set
                If (Me.DisabledField.Equals(value) <> true) Then
                    Me.DisabledField = value
                    Me.RaisePropertyChanged("Disabled")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EncPW() As String
            Get
                Return Me.EncPWField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EncPWField, value) <> true) Then
                    Me.EncPWField = value
                    Me.RaisePropertyChanged("EncPW")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LastModDate() As Date
            Get
                Return Me.LastModDateField
            End Get
            Set
                If (Me.LastModDateField.Equals(value) <> true) Then
                    Me.LastModDateField = value
                    Me.RaisePropertyChanged("LastModDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RepoID() As String
            Get
                Return Me.RepoIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RepoIDField, value) <> true) Then
                    Me.RepoIDField = value
                    Me.RaisePropertyChanged("RepoID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RowID() As Integer
            Get
                Return Me.RowIDField
            End Get
            Set
                If (Me.RowIDField.Equals(value) <> true) Then
                    Me.RowIDField = value
                    Me.RaisePropertyChanged("RowID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SVCCLCArchive_Endpoint() As String
            Get
                Return Me.SVCCLCArchive_EndpointField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SVCCLCArchive_EndpointField, value) <> true) Then
                    Me.SVCCLCArchive_EndpointField = value
                    Me.RaisePropertyChanged("SVCCLCArchive_Endpoint")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SVCDownload_CS() As String
            Get
                Return Me.SVCDownload_CSField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SVCDownload_CSField, value) <> true) Then
                    Me.SVCDownload_CSField = value
                    Me.RaisePropertyChanged("SVCDownload_CS")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SVCDownload_Endpoint() As String
            Get
                Return Me.SVCDownload_EndpointField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SVCDownload_EndpointField, value) <> true) Then
                    Me.SVCDownload_EndpointField = value
                    Me.RaisePropertyChanged("SVCDownload_Endpoint")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SVCFS_CS() As String
            Get
                Return Me.SVCFS_CSField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SVCFS_CSField, value) <> true) Then
                    Me.SVCFS_CSField = value
                    Me.RaisePropertyChanged("SVCFS_CS")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SVCFS_Endpoint() As String
            Get
                Return Me.SVCFS_EndpointField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SVCFS_EndpointField, value) <> true) Then
                    Me.SVCFS_EndpointField = value
                    Me.RaisePropertyChanged("SVCFS_Endpoint")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SVCGateway_CS() As String
            Get
                Return Me.SVCGateway_CSField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SVCGateway_CSField, value) <> true) Then
                    Me.SVCGateway_CSField = value
                    Me.RaisePropertyChanged("SVCGateway_CS")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SVCGateway_Endpoint() As String
            Get
                Return Me.SVCGateway_EndpointField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SVCGateway_EndpointField, value) <> true) Then
                    Me.SVCGateway_EndpointField = value
                    Me.RaisePropertyChanged("SVCGateway_Endpoint")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SVCSearch_CS() As String
            Get
                Return Me.SVCSearch_CSField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SVCSearch_CSField, value) <> true) Then
                    Me.SVCSearch_CSField = value
                    Me.RaisePropertyChanged("SVCSearch_CS")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SVCSearch_Endpoint() As String
            Get
                Return Me.SVCSearch_EndpointField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SVCSearch_EndpointField, value) <> true) Then
                    Me.SVCSearch_EndpointField = value
                    Me.RaisePropertyChanged("SVCSearch_Endpoint")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SVCThesaurus_CS() As String
            Get
                Return Me.SVCThesaurus_CSField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SVCThesaurus_CSField, value) <> true) Then
                    Me.SVCThesaurus_CSField = value
                    Me.RaisePropertyChanged("SVCThesaurus_CS")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property isThesaurus() As Integer
            Get
                Return Me.isThesaurusField
            End Get
            Set
                If (Me.isThesaurusField.Equals(value) <> true) Then
                    Me.isThesaurusField = value
                    Me.RaisePropertyChanged("isThesaurus")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="CompositeType", [Namespace]:="http://schemas.datacontract.org/2004/07/EcmSecureAttachWCF2"),  _
     System.SerializableAttribute()>  _
    Partial Public Class CompositeType
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BoolValueField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StringValueField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property BoolValue() As Boolean
            Get
                Return Me.BoolValueField
            End Get
            Set
                If (Me.BoolValueField.Equals(value) <> true) Then
                    Me.BoolValueField = value
                    Me.RaisePropertyChanged("BoolValue")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StringValue() As String
            Get
                Return Me.StringValueField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StringValueField, value) <> true) Then
                    Me.StringValueField = value
                    Me.RaisePropertyChanged("StringValue")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="SVCGateway.IService1")>  _
    Public Interface IService1
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getUserCompanies", ReplyAction:="http://tempuri.org/IService1/getUserCompaniesResponse")>  _
        Function getUserCompanies(ByVal UserID As String, ByVal PW As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getUserCompanies", ReplyAction:="http://tempuri.org/IService1/getUserCompaniesResponse")>  _
        Function getUserCompaniesAsync(ByVal UserID As String, ByVal PW As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getAttachData", ReplyAction:="http://tempuri.org/IService1/getAttachDataResponse")>  _
        Function getAttachData(ByVal CS As String, ByVal CompanyID As String, ByVal SvrName As String, ByVal DBName As String, ByVal InstanceName As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getAttachData", ReplyAction:="http://tempuri.org/IService1/getAttachDataResponse")>  _
        Function getAttachDataAsync(ByVal CS As String, ByVal CompanyID As String, ByVal SvrName As String, ByVal DBName As String, ByVal InstanceName As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getCompanyID", ReplyAction:="http://tempuri.org/IService1/getCompanyIDResponse")>  _
        Function getCompanyID(ByVal CS As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getCompanyID", ReplyAction:="http://tempuri.org/IService1/getCompanyIDResponse")>  _
        Function getCompanyIDAsync(ByVal CS As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getServers", ReplyAction:="http://tempuri.org/IService1/getServersResponse")>  _
        Function getServers(ByVal CS As String, ByVal CompanyID As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getServers", ReplyAction:="http://tempuri.org/IService1/getServersResponse")>  _
        Function getServersAsync(ByVal CS As String, ByVal CompanyID As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getDatabases", ReplyAction:="http://tempuri.org/IService1/getDatabasesResponse")>  _
        Function getDatabases(ByVal CS As String, ByVal CompanyID As String, ByVal ServerID As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getDatabases", ReplyAction:="http://tempuri.org/IService1/getDatabasesResponse")>  _
        Function getDatabasesAsync(ByVal CS As String, ByVal CompanyID As String, ByVal ServerID As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getInstance", ReplyAction:="http://tempuri.org/IService1/getInstanceResponse")>  _
        Function getInstance(ByVal CS As String, ByVal CompanyID As String, ByVal ServerID As String, ByVal DBName As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getInstance", ReplyAction:="http://tempuri.org/IService1/getInstanceResponse")>  _
        Function getInstanceAsync(ByVal CS As String, ByVal CompanyID As String, ByVal ServerID As String, ByVal DBName As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ckServerRunning", ReplyAction:="http://tempuri.org/IService1/ckServerRunningResponse")>  _
        Function ckServerRunning() As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ckServerRunning", ReplyAction:="http://tempuri.org/IService1/ckServerRunningResponse")>  _
        Function ckServerRunningAsync() As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/duplicateEntry", ReplyAction:="http://tempuri.org/IService1/duplicateEntryResponse")>  _
        Function duplicateEntry(ByVal ConnStr As String, ByVal tDict As System.Collections.Generic.Dictionary(Of String, String)) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/duplicateEntry", ReplyAction:="http://tempuri.org/IService1/duplicateEntryResponse")>  _
        Function duplicateEntryAsync(ByVal ConnStr As String, ByVal tDict As System.Collections.Generic.Dictionary(Of String, String)) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSessionID", ReplyAction:="http://tempuri.org/IService1/getSessionIDResponse")>  _
        Function getSessionID() As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSessionID", ReplyAction:="http://tempuri.org/IService1/getSessionIDResponse")>  _
        Function getSessionIDAsync() As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getServiceVersion", ReplyAction:="http://tempuri.org/IService1/getServiceVersionResponse")>  _
        Function getServiceVersion() As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getServiceVersion", ReplyAction:="http://tempuri.org/IService1/getServiceVersionResponse")>  _
        Function getServiceVersionAsync() As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/updateRepoUsers", ReplyAction:="http://tempuri.org/IService1/updateRepoUsersResponse")>  _
        Function updateRepoUsers(ByVal CompanyID As String, ByVal RepoID As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/updateRepoUsers", ReplyAction:="http://tempuri.org/IService1/updateRepoUsersResponse")>  _
        Function updateRepoUsersAsync(ByVal CompanyID As String, ByVal RepoID As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/validateAttachSecureLogin", ReplyAction:="http://tempuri.org/IService1/validateAttachSecureLoginResponse")>  _
        Function validateAttachSecureLogin(ByVal gSecureID As Integer, ByVal gCompanyID As String, ByVal gRepoID As String, ByVal LoginID As String, ByVal EPW As String) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/validateAttachSecureLogin", ReplyAction:="http://tempuri.org/IService1/validateAttachSecureLoginResponse")>  _
        Function validateAttachSecureLoginAsync(ByVal gSecureID As Integer, ByVal gCompanyID As String, ByVal gRepoID As String, ByVal LoginID As String, ByVal EPW As String) As System.Threading.Tasks.Task(Of Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getGatewayCS", ReplyAction:="http://tempuri.org/IService1/getGatewayCSResponse")>  _
        Function getGatewayCS(ByVal gSecureID As Integer, ByVal gCompanyID As String, ByVal gRepoID As String, ByVal EPW As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getGatewayCS", ReplyAction:="http://tempuri.org/IService1/getGatewayCSResponse")>  _
        Function getGatewayCSAsync(ByVal gSecureID As Integer, ByVal gCompanyID As String, ByVal gRepoID As String, ByVal EPW As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getEndPoints", ReplyAction:="http://tempuri.org/IService1/getEndPointsResponse")>  _
        Function getEndPoints(ByVal CompanyID As String, ByVal RepoID As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getEndPoints", ReplyAction:="http://tempuri.org/IService1/getEndPointsResponse")>  _
        Function getEndPointsAsync(ByVal CompanyID As String, ByVal RepoID As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateGatewayLoginCB", ReplyAction:="http://tempuri.org/IService1/PopulateGatewayLoginCBResponse")>  _
        Function PopulateGatewayLoginCB(ByVal CS As String, ByVal CompanyID As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateGatewayLoginCB", ReplyAction:="http://tempuri.org/IService1/PopulateGatewayLoginCBResponse")>  _
        Function PopulateGatewayLoginCBAsync(ByVal CS As String, ByVal CompanyID As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSecureID", ReplyAction:="http://tempuri.org/IService1/getSecureIDResponse")>  _
        Function getSecureID(ByVal CompanyID As String, ByVal RepoID As String) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSecureID", ReplyAction:="http://tempuri.org/IService1/getSecureIDResponse")>  _
        Function getSecureIDAsync(ByVal CompanyID As String, ByVal RepoID As String) As System.Threading.Tasks.Task(Of Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getCS", ReplyAction:="http://tempuri.org/IService1/getCSResponse")>  _
        Function getCS(ByVal gSecureID As Integer) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getCS", ReplyAction:="http://tempuri.org/IService1/getCSResponse")>  _
        Function getCSAsync(ByVal gSecureID As Integer) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getRepoCS", ReplyAction:="http://tempuri.org/IService1/getRepoCSResponse")>  _
        Function getRepoCS(ByVal gSecureID As Integer) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getRepoCS", ReplyAction:="http://tempuri.org/IService1/getRepoCSResponse")>  _
        Function getRepoCSAsync(ByVal gSecureID As Integer) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getConnection", ReplyAction:="http://tempuri.org/IService1/getConnectionResponse")>  _
        Function getConnection(ByVal request As SVCGateway.getConnectionRequest) As SVCGateway.getConnectionResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getConnection", ReplyAction:="http://tempuri.org/IService1/getConnectionResponse")>  _
        Function getConnectionAsync(ByVal request As SVCGateway.getConnectionRequest) As System.Threading.Tasks.Task(Of SVCGateway.getConnectionResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ValidateUserLogin", ReplyAction:="http://tempuri.org/IService1/ValidateUserLoginResponse")>  _
        Function ValidateUserLogin(ByVal UID As String, ByVal EncPW As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ValidateUserLogin", ReplyAction:="http://tempuri.org/IService1/ValidateUserLoginResponse")>  _
        Function ValidateUserLoginAsync(ByVal UID As String, ByVal EncPW As String) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ValidateGatewayLogin", ReplyAction:="http://tempuri.org/IService1/ValidateGatewayLoginResponse")>  _
        Function ValidateGatewayLogin(ByVal request As SVCGateway.ValidateGatewayLoginRequest) As SVCGateway.ValidateGatewayLoginResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ValidateGatewayLogin", ReplyAction:="http://tempuri.org/IService1/ValidateGatewayLoginResponse")>  _
        Function ValidateGatewayLoginAsync(ByVal request As SVCGateway.ValidateGatewayLoginRequest) As System.Threading.Tasks.Task(Of SVCGateway.ValidateGatewayLoginResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSecureKey", ReplyAction:="http://tempuri.org/IService1/getSecureKeyResponse")>  _
        Function getSecureKey(ByVal request As SVCGateway.getSecureKeyRequest) As SVCGateway.getSecureKeyResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSecureKey", ReplyAction:="http://tempuri.org/IService1/getSecureKeyResponse")>  _
        Function getSecureKeyAsync(ByVal request As SVCGateway.getSecureKeyRequest) As System.Threading.Tasks.Task(Of SVCGateway.getSecureKeyResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateCombo", ReplyAction:="http://tempuri.org/IService1/PopulateComboResponse")>  _
        Function PopulateCombo(ByVal request As SVCGateway.PopulateComboRequest) As SVCGateway.PopulateComboResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateCombo", ReplyAction:="http://tempuri.org/IService1/PopulateComboResponse")>  _
        Function PopulateComboAsync(ByVal request As SVCGateway.PopulateComboRequest) As System.Threading.Tasks.Task(Of SVCGateway.PopulateComboResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateCompanyComboSecure", ReplyAction:="http://tempuri.org/IService1/PopulateCompanyComboSecureResponse")>  _
        Function PopulateCompanyComboSecure(ByVal request As SVCGateway.PopulateCompanyComboSecureRequest) As SVCGateway.PopulateCompanyComboSecureResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateCompanyComboSecure", ReplyAction:="http://tempuri.org/IService1/PopulateCompanyComboSecureResponse")>  _
        Function PopulateCompanyComboSecureAsync(ByVal request As SVCGateway.PopulateCompanyComboSecureRequest) As System.Threading.Tasks.Task(Of SVCGateway.PopulateCompanyComboSecureResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateRepoCombo", ReplyAction:="http://tempuri.org/IService1/PopulateRepoComboResponse")>  _
        Function PopulateRepoCombo(ByVal request As SVCGateway.PopulateRepoComboRequest) As SVCGateway.PopulateRepoComboResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateRepoCombo", ReplyAction:="http://tempuri.org/IService1/PopulateRepoComboResponse")>  _
        Function PopulateRepoComboAsync(ByVal request As SVCGateway.PopulateRepoComboRequest) As System.Threading.Tasks.Task(Of SVCGateway.PopulateRepoComboResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateRepoSecure", ReplyAction:="http://tempuri.org/IService1/PopulateRepoSecureResponse")>  _
        Function PopulateRepoSecure(ByVal request As SVCGateway.PopulateRepoSecureRequest) As SVCGateway.PopulateRepoSecureResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateRepoSecure", ReplyAction:="http://tempuri.org/IService1/PopulateRepoSecureResponse")>  _
        Function PopulateRepoSecureAsync(ByVal request As SVCGateway.PopulateRepoSecureRequest) As System.Threading.Tasks.Task(Of SVCGateway.PopulateRepoSecureResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/DeleteExistingConnection", ReplyAction:="http://tempuri.org/IService1/DeleteExistingConnectionResponse")>  _
        Function DeleteExistingConnection(ByVal request As SVCGateway.DeleteExistingConnectionRequest) As SVCGateway.DeleteExistingConnectionResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/DeleteExistingConnection", ReplyAction:="http://tempuri.org/IService1/DeleteExistingConnectionResponse")>  _
        Function DeleteExistingConnectionAsync(ByVal request As SVCGateway.DeleteExistingConnectionRequest) As System.Threading.Tasks.Task(Of SVCGateway.DeleteExistingConnectionResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateGrid", ReplyAction:="http://tempuri.org/IService1/PopulateGridResponse")>  _
        Function PopulateGrid(ByVal request As SVCGateway.PopulateGridRequest) As SVCGateway.PopulateGridResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateGrid", ReplyAction:="http://tempuri.org/IService1/PopulateGridResponse")>  _
        Function PopulateGridAsync(ByVal request As SVCGateway.PopulateGridRequest) As System.Threading.Tasks.Task(Of SVCGateway.PopulateGridResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/saveConnection", ReplyAction:="http://tempuri.org/IService1/saveConnectionResponse")>  _
        Function saveConnection(ByVal request As SVCGateway.saveConnectionRequest) As SVCGateway.saveConnectionResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/saveConnection", ReplyAction:="http://tempuri.org/IService1/saveConnectionResponse")>  _
        Function saveConnectionAsync(ByVal request As SVCGateway.saveConnectionRequest) As System.Threading.Tasks.Task(Of SVCGateway.saveConnectionResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/AttachToSecureLoginDB", ReplyAction:="http://tempuri.org/IService1/AttachToSecureLoginDBResponse")>  _
        Function AttachToSecureLoginDB(ByVal request As SVCGateway.AttachToSecureLoginDBRequest) As SVCGateway.AttachToSecureLoginDBResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/AttachToSecureLoginDB", ReplyAction:="http://tempuri.org/IService1/AttachToSecureLoginDBResponse")>  _
        Function AttachToSecureLoginDBAsync(ByVal request As SVCGateway.AttachToSecureLoginDBRequest) As System.Threading.Tasks.Task(Of SVCGateway.AttachToSecureLoginDBResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetData", ReplyAction:="http://tempuri.org/IService1/GetDataResponse")>  _
        Function GetData(ByVal value As Integer) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetData", ReplyAction:="http://tempuri.org/IService1/GetDataResponse")>  _
        Function GetDataAsync(ByVal value As Integer) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction:="http://tempuri.org/IService1/GetDataUsingDataContractResponse")>  _
        Function GetDataUsingDataContract(ByVal composite As SVCGateway.CompositeType) As SVCGateway.CompositeType
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction:="http://tempuri.org/IService1/GetDataUsingDataContractResponse")>  _
        Function GetDataUsingDataContractAsync(ByVal composite As SVCGateway.CompositeType) As System.Threading.Tasks.Task(Of SVCGateway.CompositeType)
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getConnection", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getConnectionRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public CompanyID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RepoID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal CompanyID As String, ByVal RepoID As String, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.CompanyID = CompanyID
            Me.RepoID = RepoID
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getConnectionResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getConnectionResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getConnectionResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getConnectionResult As String, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.getConnectionResult = getConnectionResult
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ValidateGatewayLogin", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ValidateGatewayLoginRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public CompanyID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RepoID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public EncPW As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RtnMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal CompanyID As String, ByVal RepoID As String, ByVal EncPW As String, ByVal RC As Boolean, ByVal RtnMsg As String)
            MyBase.New
            Me.CompanyID = CompanyID
            Me.RepoID = RepoID
            Me.EncPW = EncPW
            Me.RC = RC
            Me.RtnMsg = RtnMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ValidateGatewayLoginResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ValidateGatewayLoginResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public ValidateGatewayLoginResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RtnMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ValidateGatewayLoginResult As Boolean, ByVal RC As Boolean, ByVal RtnMsg As String)
            MyBase.New
            Me.ValidateGatewayLoginResult = ValidateGatewayLoginResult
            Me.RC = RC
            Me.RtnMsg = RtnMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSecureKey", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getSecureKeyRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public CompanyID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RepoID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public LoginPassword As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal CompanyID As String, ByVal RepoID As String, ByVal LoginPassword As String, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.CompanyID = CompanyID
            Me.RepoID = RepoID
            Me.LoginPassword = LoginPassword
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSecureKeyResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getSecureKeyResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getSecureKeyResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getSecureKeyResult As String, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.getSecureKeyResult = getSecureKeyResult
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateCombo", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateComboRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public CS As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public CompanyID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RetTxt As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal CS As String, ByVal CompanyID As String, ByVal RC As Boolean, ByVal RetTxt As String)
            MyBase.New
            Me.CS = CS
            Me.CompanyID = CompanyID
            Me.RC = RC
            Me.RetTxt = RetTxt
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateComboResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateComboResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public PopulateComboResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RetTxt As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal PopulateComboResult As String, ByVal RC As Boolean, ByVal RetTxt As String)
            MyBase.New
            Me.PopulateComboResult = PopulateComboResult
            Me.RC = RC
            Me.RetTxt = RetTxt
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateCompanyComboSecure", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateCompanyComboSecureRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public CS As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public CompanyID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public EncryptedPW As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RetTxt As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal CS As String, ByVal CompanyID As String, ByVal EncryptedPW As String, ByVal RC As Boolean, ByVal RetTxt As String)
            MyBase.New
            Me.CS = CS
            Me.CompanyID = CompanyID
            Me.EncryptedPW = EncryptedPW
            Me.RC = RC
            Me.RetTxt = RetTxt
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateCompanyComboSecureResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateCompanyComboSecureResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public PopulateCompanyComboSecureResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RetTxt As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal PopulateCompanyComboSecureResult As String, ByVal RC As Boolean, ByVal RetTxt As String)
            MyBase.New
            Me.PopulateCompanyComboSecureResult = PopulateCompanyComboSecureResult
            Me.RC = RC
            Me.RetTxt = RetTxt
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateRepoCombo", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateRepoComboRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public CS As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public CompanyID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RetTxt As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal CS As String, ByVal CompanyID As String, ByVal RC As Boolean, ByVal RetTxt As String)
            MyBase.New
            Me.CS = CS
            Me.CompanyID = CompanyID
            Me.RC = RC
            Me.RetTxt = RetTxt
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateRepoComboResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateRepoComboResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public PopulateRepoComboResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RetTxt As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal PopulateRepoComboResult As String, ByVal RC As Boolean, ByVal RetTxt As String)
            MyBase.New
            Me.PopulateRepoComboResult = PopulateRepoComboResult
            Me.RC = RC
            Me.RetTxt = RetTxt
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateRepoSecure", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateRepoSecureRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public CS As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public CompanyID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public EncryptedPW As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RetTxt As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal CS As String, ByVal CompanyID As String, ByVal EncryptedPW As String, ByVal RC As Boolean, ByVal RetTxt As String)
            MyBase.New
            Me.CS = CS
            Me.CompanyID = CompanyID
            Me.EncryptedPW = EncryptedPW
            Me.RC = RC
            Me.RetTxt = RetTxt
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateRepoSecureResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateRepoSecureResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public PopulateRepoSecureResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RetTxt As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal PopulateRepoSecureResult As String, ByVal RC As Boolean, ByVal RetTxt As String)
            MyBase.New
            Me.PopulateRepoSecureResult = PopulateRepoSecureResult
            Me.RC = RC
            Me.RetTxt = RetTxt
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="DeleteExistingConnection", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class DeleteExistingConnectionRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public ConnStr As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public tDict As System.Collections.Generic.Dictionary(Of String, String)
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RtnMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ConnStr As String, ByVal tDict As System.Collections.Generic.Dictionary(Of String, String), ByVal RC As Boolean, ByVal RtnMsg As String)
            MyBase.New
            Me.ConnStr = ConnStr
            Me.tDict = tDict
            Me.RC = RC
            Me.RtnMsg = RtnMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="DeleteExistingConnectionResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class DeleteExistingConnectionResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public DeleteExistingConnectionResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RtnMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal DeleteExistingConnectionResult As Boolean, ByVal RC As Boolean, ByVal RtnMsg As String)
            MyBase.New
            Me.DeleteExistingConnectionResult = DeleteExistingConnectionResult
            Me.RC = RC
            Me.RtnMsg = RtnMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateGrid", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateGridRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public CS As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public CompanyID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public EncPW As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RetTxt As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public LimitToCompany As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal CS As String, ByVal CompanyID As String, ByVal EncPW As String, ByVal RC As Boolean, ByVal RetTxt As String, ByVal LimitToCompany As Integer)
            MyBase.New
            Me.CS = CS
            Me.CompanyID = CompanyID
            Me.EncPW = EncPW
            Me.RC = RC
            Me.RetTxt = RetTxt
            Me.LimitToCompany = LimitToCompany
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateGridResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateGridResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public PopulateGridResult() As SVCGateway.DS_SecureAttach
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RetTxt As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal PopulateGridResult() As SVCGateway.DS_SecureAttach, ByVal RC As Boolean, ByVal RetTxt As String)
            MyBase.New
            Me.PopulateGridResult = PopulateGridResult
            Me.RC = RC
            Me.RetTxt = RetTxt
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="saveConnection", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class saveConnectionRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public ConnStr As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public tDict As System.Collections.Generic.Dictionary(Of String, String)
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RtnMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ConnStr As String, ByVal tDict As System.Collections.Generic.Dictionary(Of String, String), ByVal RC As Boolean, ByVal RtnMsg As String)
            MyBase.New
            Me.ConnStr = ConnStr
            Me.tDict = tDict
            Me.RC = RC
            Me.RtnMsg = RtnMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="saveConnectionResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class saveConnectionResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public saveConnectionResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RtnMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal saveConnectionResult As Boolean, ByVal RC As Boolean, ByVal RtnMsg As String)
            MyBase.New
            Me.saveConnectionResult = saveConnectionResult
            Me.RC = RC
            Me.RtnMsg = RtnMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="AttachToSecureLoginDB", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class AttachToSecureLoginDBRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public ConnStr As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RtnMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ConnStr As String, ByVal RC As Boolean, ByVal RtnMsg As String)
            MyBase.New
            Me.ConnStr = ConnStr
            Me.RC = RC
            Me.RtnMsg = RtnMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="AttachToSecureLoginDBResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class AttachToSecureLoginDBResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public AttachToSecureLoginDBResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RtnMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AttachToSecureLoginDBResult As Boolean, ByVal RC As Boolean, ByVal RtnMsg As String)
            MyBase.New
            Me.AttachToSecureLoginDBResult = AttachToSecureLoginDBResult
            Me.RC = RC
            Me.RtnMsg = RtnMsg
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface IService1Channel
        Inherits SVCGateway.IService1, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class Service1Client
        Inherits System.ServiceModel.ClientBase(Of SVCGateway.IService1)
        Implements SVCGateway.IService1
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function getUserCompanies(ByVal UserID As String, ByVal PW As String) As String Implements SVCGateway.IService1.getUserCompanies
            Return MyBase.Channel.getUserCompanies(UserID, PW)
        End Function
        
        Public Function getUserCompaniesAsync(ByVal UserID As String, ByVal PW As String) As System.Threading.Tasks.Task(Of String) Implements SVCGateway.IService1.getUserCompaniesAsync
            Return MyBase.Channel.getUserCompaniesAsync(UserID, PW)
        End Function
        
        Public Function getAttachData(ByVal CS As String, ByVal CompanyID As String, ByVal SvrName As String, ByVal DBName As String, ByVal InstanceName As String) As String Implements SVCGateway.IService1.getAttachData
            Return MyBase.Channel.getAttachData(CS, CompanyID, SvrName, DBName, InstanceName)
        End Function
        
        Public Function getAttachDataAsync(ByVal CS As String, ByVal CompanyID As String, ByVal SvrName As String, ByVal DBName As String, ByVal InstanceName As String) As System.Threading.Tasks.Task(Of String) Implements SVCGateway.IService1.getAttachDataAsync
            Return MyBase.Channel.getAttachDataAsync(CS, CompanyID, SvrName, DBName, InstanceName)
        End Function
        
        Public Function getCompanyID(ByVal CS As String) As String Implements SVCGateway.IService1.getCompanyID
            Return MyBase.Channel.getCompanyID(CS)
        End Function
        
        Public Function getCompanyIDAsync(ByVal CS As String) As System.Threading.Tasks.Task(Of String) Implements SVCGateway.IService1.getCompanyIDAsync
            Return MyBase.Channel.getCompanyIDAsync(CS)
        End Function
        
        Public Function getServers(ByVal CS As String, ByVal CompanyID As String) As String Implements SVCGateway.IService1.getServers
            Return MyBase.Channel.getServers(CS, CompanyID)
        End Function
        
        Public Function getServersAsync(ByVal CS As String, ByVal CompanyID As String) As System.Threading.Tasks.Task(Of String) Implements SVCGateway.IService1.getServersAsync
            Return MyBase.Channel.getServersAsync(CS, CompanyID)
        End Function
        
        Public Function getDatabases(ByVal CS As String, ByVal CompanyID As String, ByVal ServerID As String) As String Implements SVCGateway.IService1.getDatabases
            Return MyBase.Channel.getDatabases(CS, CompanyID, ServerID)
        End Function
        
        Public Function getDatabasesAsync(ByVal CS As String, ByVal CompanyID As String, ByVal ServerID As String) As System.Threading.Tasks.Task(Of String) Implements SVCGateway.IService1.getDatabasesAsync
            Return MyBase.Channel.getDatabasesAsync(CS, CompanyID, ServerID)
        End Function
        
        Public Function getInstance(ByVal CS As String, ByVal CompanyID As String, ByVal ServerID As String, ByVal DBName As String) As String Implements SVCGateway.IService1.getInstance
            Return MyBase.Channel.getInstance(CS, CompanyID, ServerID, DBName)
        End Function
        
        Public Function getInstanceAsync(ByVal CS As String, ByVal CompanyID As String, ByVal ServerID As String, ByVal DBName As String) As System.Threading.Tasks.Task(Of String) Implements SVCGateway.IService1.getInstanceAsync
            Return MyBase.Channel.getInstanceAsync(CS, CompanyID, ServerID, DBName)
        End Function
        
        Public Function ckServerRunning() As Boolean Implements SVCGateway.IService1.ckServerRunning
            Return MyBase.Channel.ckServerRunning
        End Function
        
        Public Function ckServerRunningAsync() As System.Threading.Tasks.Task(Of Boolean) Implements SVCGateway.IService1.ckServerRunningAsync
            Return MyBase.Channel.ckServerRunningAsync
        End Function
        
        Public Function duplicateEntry(ByVal ConnStr As String, ByVal tDict As System.Collections.Generic.Dictionary(Of String, String)) As Boolean Implements SVCGateway.IService1.duplicateEntry
            Return MyBase.Channel.duplicateEntry(ConnStr, tDict)
        End Function
        
        Public Function duplicateEntryAsync(ByVal ConnStr As String, ByVal tDict As System.Collections.Generic.Dictionary(Of String, String)) As System.Threading.Tasks.Task(Of Boolean) Implements SVCGateway.IService1.duplicateEntryAsync
            Return MyBase.Channel.duplicateEntryAsync(ConnStr, tDict)
        End Function
        
        Public Function getSessionID() As String Implements SVCGateway.IService1.getSessionID
            Return MyBase.Channel.getSessionID
        End Function
        
        Public Function getSessionIDAsync() As System.Threading.Tasks.Task(Of String) Implements SVCGateway.IService1.getSessionIDAsync
            Return MyBase.Channel.getSessionIDAsync
        End Function
        
        Public Function getServiceVersion() As String Implements SVCGateway.IService1.getServiceVersion
            Return MyBase.Channel.getServiceVersion
        End Function
        
        Public Function getServiceVersionAsync() As System.Threading.Tasks.Task(Of String) Implements SVCGateway.IService1.getServiceVersionAsync
            Return MyBase.Channel.getServiceVersionAsync
        End Function
        
        Public Function updateRepoUsers(ByVal CompanyID As String, ByVal RepoID As String) As String Implements SVCGateway.IService1.updateRepoUsers
            Return MyBase.Channel.updateRepoUsers(CompanyID, RepoID)
        End Function
        
        Public Function updateRepoUsersAsync(ByVal CompanyID As String, ByVal RepoID As String) As System.Threading.Tasks.Task(Of String) Implements SVCGateway.IService1.updateRepoUsersAsync
            Return MyBase.Channel.updateRepoUsersAsync(CompanyID, RepoID)
        End Function
        
        Public Function validateAttachSecureLogin(ByVal gSecureID As Integer, ByVal gCompanyID As String, ByVal gRepoID As String, ByVal LoginID As String, ByVal EPW As String) As Integer Implements SVCGateway.IService1.validateAttachSecureLogin
            Return MyBase.Channel.validateAttachSecureLogin(gSecureID, gCompanyID, gRepoID, LoginID, EPW)
        End Function
        
        Public Function validateAttachSecureLoginAsync(ByVal gSecureID As Integer, ByVal gCompanyID As String, ByVal gRepoID As String, ByVal LoginID As String, ByVal EPW As String) As System.Threading.Tasks.Task(Of Integer) Implements SVCGateway.IService1.validateAttachSecureLoginAsync
            Return MyBase.Channel.validateAttachSecureLoginAsync(gSecureID, gCompanyID, gRepoID, LoginID, EPW)
        End Function
        
        Public Function getGatewayCS(ByVal gSecureID As Integer, ByVal gCompanyID As String, ByVal gRepoID As String, ByVal EPW As String) As String Implements SVCGateway.IService1.getGatewayCS
            Return MyBase.Channel.getGatewayCS(gSecureID, gCompanyID, gRepoID, EPW)
        End Function
        
        Public Function getGatewayCSAsync(ByVal gSecureID As Integer, ByVal gCompanyID As String, ByVal gRepoID As String, ByVal EPW As String) As System.Threading.Tasks.Task(Of String) Implements SVCGateway.IService1.getGatewayCSAsync
            Return MyBase.Channel.getGatewayCSAsync(gSecureID, gCompanyID, gRepoID, EPW)
        End Function
        
        Public Function getEndPoints(ByVal CompanyID As String, ByVal RepoID As String) As String Implements SVCGateway.IService1.getEndPoints
            Return MyBase.Channel.getEndPoints(CompanyID, RepoID)
        End Function
        
        Public Function getEndPointsAsync(ByVal CompanyID As String, ByVal RepoID As String) As System.Threading.Tasks.Task(Of String) Implements SVCGateway.IService1.getEndPointsAsync
            Return MyBase.Channel.getEndPointsAsync(CompanyID, RepoID)
        End Function
        
        Public Function PopulateGatewayLoginCB(ByVal CS As String, ByVal CompanyID As String) As String Implements SVCGateway.IService1.PopulateGatewayLoginCB
            Return MyBase.Channel.PopulateGatewayLoginCB(CS, CompanyID)
        End Function
        
        Public Function PopulateGatewayLoginCBAsync(ByVal CS As String, ByVal CompanyID As String) As System.Threading.Tasks.Task(Of String) Implements SVCGateway.IService1.PopulateGatewayLoginCBAsync
            Return MyBase.Channel.PopulateGatewayLoginCBAsync(CS, CompanyID)
        End Function
        
        Public Function getSecureID(ByVal CompanyID As String, ByVal RepoID As String) As Integer Implements SVCGateway.IService1.getSecureID
            Return MyBase.Channel.getSecureID(CompanyID, RepoID)
        End Function
        
        Public Function getSecureIDAsync(ByVal CompanyID As String, ByVal RepoID As String) As System.Threading.Tasks.Task(Of Integer) Implements SVCGateway.IService1.getSecureIDAsync
            Return MyBase.Channel.getSecureIDAsync(CompanyID, RepoID)
        End Function
        
        Public Function getCS(ByVal gSecureID As Integer) As String Implements SVCGateway.IService1.getCS
            Return MyBase.Channel.getCS(gSecureID)
        End Function
        
        Public Function getCSAsync(ByVal gSecureID As Integer) As System.Threading.Tasks.Task(Of String) Implements SVCGateway.IService1.getCSAsync
            Return MyBase.Channel.getCSAsync(gSecureID)
        End Function
        
        Public Function getRepoCS(ByVal gSecureID As Integer) As String Implements SVCGateway.IService1.getRepoCS
            Return MyBase.Channel.getRepoCS(gSecureID)
        End Function
        
        Public Function getRepoCSAsync(ByVal gSecureID As Integer) As System.Threading.Tasks.Task(Of String) Implements SVCGateway.IService1.getRepoCSAsync
            Return MyBase.Channel.getRepoCSAsync(gSecureID)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCGateway_IService1_getConnection(ByVal request As SVCGateway.getConnectionRequest) As SVCGateway.getConnectionResponse Implements SVCGateway.IService1.getConnection
            Return MyBase.Channel.getConnection(request)
        End Function
        
        Public Function getConnection(ByVal CompanyID As String, ByVal RepoID As String, ByRef RC As Boolean, ByRef RetMsg As String) As String
            Dim inValue As SVCGateway.getConnectionRequest = New SVCGateway.getConnectionRequest()
            inValue.CompanyID = CompanyID
            inValue.RepoID = RepoID
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            Dim retVal As SVCGateway.getConnectionResponse = CType(Me,SVCGateway.IService1).getConnection(inValue)
            RC = retVal.RC
            RetMsg = retVal.RetMsg
            Return retVal.getConnectionResult
        End Function
        
        Public Function getConnectionAsync(ByVal request As SVCGateway.getConnectionRequest) As System.Threading.Tasks.Task(Of SVCGateway.getConnectionResponse) Implements SVCGateway.IService1.getConnectionAsync
            Return MyBase.Channel.getConnectionAsync(request)
        End Function
        
        Public Function ValidateUserLogin(ByVal UID As String, ByVal EncPW As String) As Boolean Implements SVCGateway.IService1.ValidateUserLogin
            Return MyBase.Channel.ValidateUserLogin(UID, EncPW)
        End Function
        
        Public Function ValidateUserLoginAsync(ByVal UID As String, ByVal EncPW As String) As System.Threading.Tasks.Task(Of Boolean) Implements SVCGateway.IService1.ValidateUserLoginAsync
            Return MyBase.Channel.ValidateUserLoginAsync(UID, EncPW)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCGateway_IService1_ValidateGatewayLogin(ByVal request As SVCGateway.ValidateGatewayLoginRequest) As SVCGateway.ValidateGatewayLoginResponse Implements SVCGateway.IService1.ValidateGatewayLogin
            Return MyBase.Channel.ValidateGatewayLogin(request)
        End Function
        
        Public Function ValidateGatewayLogin(ByVal CompanyID As String, ByVal RepoID As String, ByVal EncPW As String, ByRef RC As Boolean, ByRef RtnMsg As String) As Boolean
            Dim inValue As SVCGateway.ValidateGatewayLoginRequest = New SVCGateway.ValidateGatewayLoginRequest()
            inValue.CompanyID = CompanyID
            inValue.RepoID = RepoID
            inValue.EncPW = EncPW
            inValue.RC = RC
            inValue.RtnMsg = RtnMsg
            Dim retVal As SVCGateway.ValidateGatewayLoginResponse = CType(Me,SVCGateway.IService1).ValidateGatewayLogin(inValue)
            RC = retVal.RC
            RtnMsg = retVal.RtnMsg
            Return retVal.ValidateGatewayLoginResult
        End Function
        
        Public Function ValidateGatewayLoginAsync(ByVal request As SVCGateway.ValidateGatewayLoginRequest) As System.Threading.Tasks.Task(Of SVCGateway.ValidateGatewayLoginResponse) Implements SVCGateway.IService1.ValidateGatewayLoginAsync
            Return MyBase.Channel.ValidateGatewayLoginAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCGateway_IService1_getSecureKey(ByVal request As SVCGateway.getSecureKeyRequest) As SVCGateway.getSecureKeyResponse Implements SVCGateway.IService1.getSecureKey
            Return MyBase.Channel.getSecureKey(request)
        End Function
        
        Public Function getSecureKey(ByVal CompanyID As String, ByVal RepoID As String, ByVal LoginPassword As String, ByRef RC As Boolean, ByRef RetMsg As String) As String
            Dim inValue As SVCGateway.getSecureKeyRequest = New SVCGateway.getSecureKeyRequest()
            inValue.CompanyID = CompanyID
            inValue.RepoID = RepoID
            inValue.LoginPassword = LoginPassword
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            Dim retVal As SVCGateway.getSecureKeyResponse = CType(Me,SVCGateway.IService1).getSecureKey(inValue)
            RC = retVal.RC
            RetMsg = retVal.RetMsg
            Return retVal.getSecureKeyResult
        End Function
        
        Public Function getSecureKeyAsync(ByVal request As SVCGateway.getSecureKeyRequest) As System.Threading.Tasks.Task(Of SVCGateway.getSecureKeyResponse) Implements SVCGateway.IService1.getSecureKeyAsync
            Return MyBase.Channel.getSecureKeyAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCGateway_IService1_PopulateCombo(ByVal request As SVCGateway.PopulateComboRequest) As SVCGateway.PopulateComboResponse Implements SVCGateway.IService1.PopulateCombo
            Return MyBase.Channel.PopulateCombo(request)
        End Function
        
        Public Function PopulateCombo(ByVal CS As String, ByVal CompanyID As String, ByRef RC As Boolean, ByRef RetTxt As String) As String
            Dim inValue As SVCGateway.PopulateComboRequest = New SVCGateway.PopulateComboRequest()
            inValue.CS = CS
            inValue.CompanyID = CompanyID
            inValue.RC = RC
            inValue.RetTxt = RetTxt
            Dim retVal As SVCGateway.PopulateComboResponse = CType(Me,SVCGateway.IService1).PopulateCombo(inValue)
            RC = retVal.RC
            RetTxt = retVal.RetTxt
            Return retVal.PopulateComboResult
        End Function
        
        Public Function PopulateComboAsync(ByVal request As SVCGateway.PopulateComboRequest) As System.Threading.Tasks.Task(Of SVCGateway.PopulateComboResponse) Implements SVCGateway.IService1.PopulateComboAsync
            Return MyBase.Channel.PopulateComboAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCGateway_IService1_PopulateCompanyComboSecure(ByVal request As SVCGateway.PopulateCompanyComboSecureRequest) As SVCGateway.PopulateCompanyComboSecureResponse Implements SVCGateway.IService1.PopulateCompanyComboSecure
            Return MyBase.Channel.PopulateCompanyComboSecure(request)
        End Function
        
        Public Function PopulateCompanyComboSecure(ByVal CS As String, ByVal CompanyID As String, ByVal EncryptedPW As String, ByRef RC As Boolean, ByRef RetTxt As String) As String
            Dim inValue As SVCGateway.PopulateCompanyComboSecureRequest = New SVCGateway.PopulateCompanyComboSecureRequest()
            inValue.CS = CS
            inValue.CompanyID = CompanyID
            inValue.EncryptedPW = EncryptedPW
            inValue.RC = RC
            inValue.RetTxt = RetTxt
            Dim retVal As SVCGateway.PopulateCompanyComboSecureResponse = CType(Me,SVCGateway.IService1).PopulateCompanyComboSecure(inValue)
            RC = retVal.RC
            RetTxt = retVal.RetTxt
            Return retVal.PopulateCompanyComboSecureResult
        End Function
        
        Public Function PopulateCompanyComboSecureAsync(ByVal request As SVCGateway.PopulateCompanyComboSecureRequest) As System.Threading.Tasks.Task(Of SVCGateway.PopulateCompanyComboSecureResponse) Implements SVCGateway.IService1.PopulateCompanyComboSecureAsync
            Return MyBase.Channel.PopulateCompanyComboSecureAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCGateway_IService1_PopulateRepoCombo(ByVal request As SVCGateway.PopulateRepoComboRequest) As SVCGateway.PopulateRepoComboResponse Implements SVCGateway.IService1.PopulateRepoCombo
            Return MyBase.Channel.PopulateRepoCombo(request)
        End Function
        
        Public Function PopulateRepoCombo(ByVal CS As String, ByVal CompanyID As String, ByRef RC As Boolean, ByRef RetTxt As String) As String
            Dim inValue As SVCGateway.PopulateRepoComboRequest = New SVCGateway.PopulateRepoComboRequest()
            inValue.CS = CS
            inValue.CompanyID = CompanyID
            inValue.RC = RC
            inValue.RetTxt = RetTxt
            Dim retVal As SVCGateway.PopulateRepoComboResponse = CType(Me,SVCGateway.IService1).PopulateRepoCombo(inValue)
            RC = retVal.RC
            RetTxt = retVal.RetTxt
            Return retVal.PopulateRepoComboResult
        End Function
        
        Public Function PopulateRepoComboAsync(ByVal request As SVCGateway.PopulateRepoComboRequest) As System.Threading.Tasks.Task(Of SVCGateway.PopulateRepoComboResponse) Implements SVCGateway.IService1.PopulateRepoComboAsync
            Return MyBase.Channel.PopulateRepoComboAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCGateway_IService1_PopulateRepoSecure(ByVal request As SVCGateway.PopulateRepoSecureRequest) As SVCGateway.PopulateRepoSecureResponse Implements SVCGateway.IService1.PopulateRepoSecure
            Return MyBase.Channel.PopulateRepoSecure(request)
        End Function
        
        Public Function PopulateRepoSecure(ByVal CS As String, ByVal CompanyID As String, ByVal EncryptedPW As String, ByRef RC As Boolean, ByRef RetTxt As String) As String
            Dim inValue As SVCGateway.PopulateRepoSecureRequest = New SVCGateway.PopulateRepoSecureRequest()
            inValue.CS = CS
            inValue.CompanyID = CompanyID
            inValue.EncryptedPW = EncryptedPW
            inValue.RC = RC
            inValue.RetTxt = RetTxt
            Dim retVal As SVCGateway.PopulateRepoSecureResponse = CType(Me,SVCGateway.IService1).PopulateRepoSecure(inValue)
            RC = retVal.RC
            RetTxt = retVal.RetTxt
            Return retVal.PopulateRepoSecureResult
        End Function
        
        Public Function PopulateRepoSecureAsync(ByVal request As SVCGateway.PopulateRepoSecureRequest) As System.Threading.Tasks.Task(Of SVCGateway.PopulateRepoSecureResponse) Implements SVCGateway.IService1.PopulateRepoSecureAsync
            Return MyBase.Channel.PopulateRepoSecureAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCGateway_IService1_DeleteExistingConnection(ByVal request As SVCGateway.DeleteExistingConnectionRequest) As SVCGateway.DeleteExistingConnectionResponse Implements SVCGateway.IService1.DeleteExistingConnection
            Return MyBase.Channel.DeleteExistingConnection(request)
        End Function
        
        Public Function DeleteExistingConnection(ByVal ConnStr As String, ByVal tDict As System.Collections.Generic.Dictionary(Of String, String), ByRef RC As Boolean, ByRef RtnMsg As String) As Boolean
            Dim inValue As SVCGateway.DeleteExistingConnectionRequest = New SVCGateway.DeleteExistingConnectionRequest()
            inValue.ConnStr = ConnStr
            inValue.tDict = tDict
            inValue.RC = RC
            inValue.RtnMsg = RtnMsg
            Dim retVal As SVCGateway.DeleteExistingConnectionResponse = CType(Me,SVCGateway.IService1).DeleteExistingConnection(inValue)
            RC = retVal.RC
            RtnMsg = retVal.RtnMsg
            Return retVal.DeleteExistingConnectionResult
        End Function
        
        Public Function DeleteExistingConnectionAsync(ByVal request As SVCGateway.DeleteExistingConnectionRequest) As System.Threading.Tasks.Task(Of SVCGateway.DeleteExistingConnectionResponse) Implements SVCGateway.IService1.DeleteExistingConnectionAsync
            Return MyBase.Channel.DeleteExistingConnectionAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCGateway_IService1_PopulateGrid(ByVal request As SVCGateway.PopulateGridRequest) As SVCGateway.PopulateGridResponse Implements SVCGateway.IService1.PopulateGrid
            Return MyBase.Channel.PopulateGrid(request)
        End Function
        
        Public Function PopulateGrid(ByVal CS As String, ByVal CompanyID As String, ByVal EncPW As String, ByRef RC As Boolean, ByRef RetTxt As String, ByVal LimitToCompany As Integer) As SVCGateway.DS_SecureAttach()
            Dim inValue As SVCGateway.PopulateGridRequest = New SVCGateway.PopulateGridRequest()
            inValue.CS = CS
            inValue.CompanyID = CompanyID
            inValue.EncPW = EncPW
            inValue.RC = RC
            inValue.RetTxt = RetTxt
            inValue.LimitToCompany = LimitToCompany
            Dim retVal As SVCGateway.PopulateGridResponse = CType(Me,SVCGateway.IService1).PopulateGrid(inValue)
            RC = retVal.RC
            RetTxt = retVal.RetTxt
            Return retVal.PopulateGridResult
        End Function
        
        Public Function PopulateGridAsync(ByVal request As SVCGateway.PopulateGridRequest) As System.Threading.Tasks.Task(Of SVCGateway.PopulateGridResponse) Implements SVCGateway.IService1.PopulateGridAsync
            Return MyBase.Channel.PopulateGridAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCGateway_IService1_saveConnection(ByVal request As SVCGateway.saveConnectionRequest) As SVCGateway.saveConnectionResponse Implements SVCGateway.IService1.saveConnection
            Return MyBase.Channel.saveConnection(request)
        End Function
        
        Public Function saveConnection(ByVal ConnStr As String, ByVal tDict As System.Collections.Generic.Dictionary(Of String, String), ByRef RC As Boolean, ByRef RtnMsg As String) As Boolean
            Dim inValue As SVCGateway.saveConnectionRequest = New SVCGateway.saveConnectionRequest()
            inValue.ConnStr = ConnStr
            inValue.tDict = tDict
            inValue.RC = RC
            inValue.RtnMsg = RtnMsg
            Dim retVal As SVCGateway.saveConnectionResponse = CType(Me,SVCGateway.IService1).saveConnection(inValue)
            RC = retVal.RC
            RtnMsg = retVal.RtnMsg
            Return retVal.saveConnectionResult
        End Function
        
        Public Function saveConnectionAsync(ByVal request As SVCGateway.saveConnectionRequest) As System.Threading.Tasks.Task(Of SVCGateway.saveConnectionResponse) Implements SVCGateway.IService1.saveConnectionAsync
            Return MyBase.Channel.saveConnectionAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCGateway_IService1_AttachToSecureLoginDB(ByVal request As SVCGateway.AttachToSecureLoginDBRequest) As SVCGateway.AttachToSecureLoginDBResponse Implements SVCGateway.IService1.AttachToSecureLoginDB
            Return MyBase.Channel.AttachToSecureLoginDB(request)
        End Function
        
        Public Function AttachToSecureLoginDB(ByVal ConnStr As String, ByRef RC As Boolean, ByRef RtnMsg As String) As Boolean
            Dim inValue As SVCGateway.AttachToSecureLoginDBRequest = New SVCGateway.AttachToSecureLoginDBRequest()
            inValue.ConnStr = ConnStr
            inValue.RC = RC
            inValue.RtnMsg = RtnMsg
            Dim retVal As SVCGateway.AttachToSecureLoginDBResponse = CType(Me,SVCGateway.IService1).AttachToSecureLoginDB(inValue)
            RC = retVal.RC
            RtnMsg = retVal.RtnMsg
            Return retVal.AttachToSecureLoginDBResult
        End Function
        
        Public Function AttachToSecureLoginDBAsync(ByVal request As SVCGateway.AttachToSecureLoginDBRequest) As System.Threading.Tasks.Task(Of SVCGateway.AttachToSecureLoginDBResponse) Implements SVCGateway.IService1.AttachToSecureLoginDBAsync
            Return MyBase.Channel.AttachToSecureLoginDBAsync(request)
        End Function
        
        Public Function GetData(ByVal value As Integer) As String Implements SVCGateway.IService1.GetData
            Return MyBase.Channel.GetData(value)
        End Function
        
        Public Function GetDataAsync(ByVal value As Integer) As System.Threading.Tasks.Task(Of String) Implements SVCGateway.IService1.GetDataAsync
            Return MyBase.Channel.GetDataAsync(value)
        End Function
        
        Public Function GetDataUsingDataContract(ByVal composite As SVCGateway.CompositeType) As SVCGateway.CompositeType Implements SVCGateway.IService1.GetDataUsingDataContract
            Return MyBase.Channel.GetDataUsingDataContract(composite)
        End Function
        
        Public Function GetDataUsingDataContractAsync(ByVal composite As SVCGateway.CompositeType) As System.Threading.Tasks.Task(Of SVCGateway.CompositeType) Implements SVCGateway.IService1.GetDataUsingDataContractAsync
            Return MyBase.Channel.GetDataUsingDataContractAsync(composite)
        End Function
    End Class
End Namespace
