//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ECMSearchWPF.SVCGateway {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DS_SecureAttach", Namespace="http://schemas.datacontract.org/2004/07/EcmSecureAttachWCF2")]
    [System.SerializableAttribute()]
    public partial class DS_SecureAttach : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CSDMALicenseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CSGateWayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CSHiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CSKBaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CSRepoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CSTDRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CSThesaurusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DisabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EncPWField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RepoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SVCCLCArchive_EndpointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SVCDownload_CSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SVCDownload_EndpointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SVCFS_CSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SVCFS_EndpointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SVCGateway_CSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SVCGateway_EndpointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SVCSearch_CSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SVCSearch_EndpointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SVCThesaurus_CSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int isThesaurusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CS {
            get {
                return this.CSField;
            }
            set {
                if ((object.ReferenceEquals(this.CSField, value) != true)) {
                    this.CSField = value;
                    this.RaisePropertyChanged("CS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CSDMALicense {
            get {
                return this.CSDMALicenseField;
            }
            set {
                if ((object.ReferenceEquals(this.CSDMALicenseField, value) != true)) {
                    this.CSDMALicenseField = value;
                    this.RaisePropertyChanged("CSDMALicense");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CSGateWay {
            get {
                return this.CSGateWayField;
            }
            set {
                if ((object.ReferenceEquals(this.CSGateWayField, value) != true)) {
                    this.CSGateWayField = value;
                    this.RaisePropertyChanged("CSGateWay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CSHive {
            get {
                return this.CSHiveField;
            }
            set {
                if ((object.ReferenceEquals(this.CSHiveField, value) != true)) {
                    this.CSHiveField = value;
                    this.RaisePropertyChanged("CSHive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CSKBase {
            get {
                return this.CSKBaseField;
            }
            set {
                if ((object.ReferenceEquals(this.CSKBaseField, value) != true)) {
                    this.CSKBaseField = value;
                    this.RaisePropertyChanged("CSKBase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CSRepo {
            get {
                return this.CSRepoField;
            }
            set {
                if ((object.ReferenceEquals(this.CSRepoField, value) != true)) {
                    this.CSRepoField = value;
                    this.RaisePropertyChanged("CSRepo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CSTDR {
            get {
                return this.CSTDRField;
            }
            set {
                if ((object.ReferenceEquals(this.CSTDRField, value) != true)) {
                    this.CSTDRField = value;
                    this.RaisePropertyChanged("CSTDR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CSThesaurus {
            get {
                return this.CSThesaurusField;
            }
            set {
                if ((object.ReferenceEquals(this.CSThesaurusField, value) != true)) {
                    this.CSThesaurusField = value;
                    this.RaisePropertyChanged("CSThesaurus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyIDField, value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Disabled {
            get {
                return this.DisabledField;
            }
            set {
                if ((this.DisabledField.Equals(value) != true)) {
                    this.DisabledField = value;
                    this.RaisePropertyChanged("Disabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EncPW {
            get {
                return this.EncPWField;
            }
            set {
                if ((object.ReferenceEquals(this.EncPWField, value) != true)) {
                    this.EncPWField = value;
                    this.RaisePropertyChanged("EncPW");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModDate {
            get {
                return this.LastModDateField;
            }
            set {
                if ((this.LastModDateField.Equals(value) != true)) {
                    this.LastModDateField = value;
                    this.RaisePropertyChanged("LastModDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RepoID {
            get {
                return this.RepoIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RepoIDField, value) != true)) {
                    this.RepoIDField = value;
                    this.RaisePropertyChanged("RepoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowID {
            get {
                return this.RowIDField;
            }
            set {
                if ((this.RowIDField.Equals(value) != true)) {
                    this.RowIDField = value;
                    this.RaisePropertyChanged("RowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SVCCLCArchive_Endpoint {
            get {
                return this.SVCCLCArchive_EndpointField;
            }
            set {
                if ((object.ReferenceEquals(this.SVCCLCArchive_EndpointField, value) != true)) {
                    this.SVCCLCArchive_EndpointField = value;
                    this.RaisePropertyChanged("SVCCLCArchive_Endpoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SVCDownload_CS {
            get {
                return this.SVCDownload_CSField;
            }
            set {
                if ((object.ReferenceEquals(this.SVCDownload_CSField, value) != true)) {
                    this.SVCDownload_CSField = value;
                    this.RaisePropertyChanged("SVCDownload_CS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SVCDownload_Endpoint {
            get {
                return this.SVCDownload_EndpointField;
            }
            set {
                if ((object.ReferenceEquals(this.SVCDownload_EndpointField, value) != true)) {
                    this.SVCDownload_EndpointField = value;
                    this.RaisePropertyChanged("SVCDownload_Endpoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SVCFS_CS {
            get {
                return this.SVCFS_CSField;
            }
            set {
                if ((object.ReferenceEquals(this.SVCFS_CSField, value) != true)) {
                    this.SVCFS_CSField = value;
                    this.RaisePropertyChanged("SVCFS_CS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SVCFS_Endpoint {
            get {
                return this.SVCFS_EndpointField;
            }
            set {
                if ((object.ReferenceEquals(this.SVCFS_EndpointField, value) != true)) {
                    this.SVCFS_EndpointField = value;
                    this.RaisePropertyChanged("SVCFS_Endpoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SVCGateway_CS {
            get {
                return this.SVCGateway_CSField;
            }
            set {
                if ((object.ReferenceEquals(this.SVCGateway_CSField, value) != true)) {
                    this.SVCGateway_CSField = value;
                    this.RaisePropertyChanged("SVCGateway_CS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SVCGateway_Endpoint {
            get {
                return this.SVCGateway_EndpointField;
            }
            set {
                if ((object.ReferenceEquals(this.SVCGateway_EndpointField, value) != true)) {
                    this.SVCGateway_EndpointField = value;
                    this.RaisePropertyChanged("SVCGateway_Endpoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SVCSearch_CS {
            get {
                return this.SVCSearch_CSField;
            }
            set {
                if ((object.ReferenceEquals(this.SVCSearch_CSField, value) != true)) {
                    this.SVCSearch_CSField = value;
                    this.RaisePropertyChanged("SVCSearch_CS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SVCSearch_Endpoint {
            get {
                return this.SVCSearch_EndpointField;
            }
            set {
                if ((object.ReferenceEquals(this.SVCSearch_EndpointField, value) != true)) {
                    this.SVCSearch_EndpointField = value;
                    this.RaisePropertyChanged("SVCSearch_Endpoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SVCThesaurus_CS {
            get {
                return this.SVCThesaurus_CSField;
            }
            set {
                if ((object.ReferenceEquals(this.SVCThesaurus_CSField, value) != true)) {
                    this.SVCThesaurus_CSField = value;
                    this.RaisePropertyChanged("SVCThesaurus_CS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int isThesaurus {
            get {
                return this.isThesaurusField;
            }
            set {
                if ((this.isThesaurusField.Equals(value) != true)) {
                    this.isThesaurusField = value;
                    this.RaisePropertyChanged("isThesaurus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/EcmSecureAttachWCF2")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SVCGateway.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSessionID", ReplyAction="http://tempuri.org/IService1/getSessionIDResponse")]
        string getSessionID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSessionID", ReplyAction="http://tempuri.org/IService1/getSessionIDResponse")]
        System.Threading.Tasks.Task<string> getSessionIDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getServiceVersion", ReplyAction="http://tempuri.org/IService1/getServiceVersionResponse")]
        string getServiceVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getServiceVersion", ReplyAction="http://tempuri.org/IService1/getServiceVersionResponse")]
        System.Threading.Tasks.Task<string> getServiceVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateRepoUsers", ReplyAction="http://tempuri.org/IService1/updateRepoUsersResponse")]
        string updateRepoUsers(string CompanyID, string RepoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateRepoUsers", ReplyAction="http://tempuri.org/IService1/updateRepoUsersResponse")]
        System.Threading.Tasks.Task<string> updateRepoUsersAsync(string CompanyID, string RepoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/validateAttachSecureLogin", ReplyAction="http://tempuri.org/IService1/validateAttachSecureLoginResponse")]
        int validateAttachSecureLogin(int gSecureID, string gCompanyID, string gRepoID, string LoginID, string EPW);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/validateAttachSecureLogin", ReplyAction="http://tempuri.org/IService1/validateAttachSecureLoginResponse")]
        System.Threading.Tasks.Task<int> validateAttachSecureLoginAsync(int gSecureID, string gCompanyID, string gRepoID, string LoginID, string EPW);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getGatewayCS", ReplyAction="http://tempuri.org/IService1/getGatewayCSResponse")]
        string getGatewayCS(int gSecureID, string gCompanyID, string gRepoID, string EPW);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getGatewayCS", ReplyAction="http://tempuri.org/IService1/getGatewayCSResponse")]
        System.Threading.Tasks.Task<string> getGatewayCSAsync(int gSecureID, string gCompanyID, string gRepoID, string EPW);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getEndPoints", ReplyAction="http://tempuri.org/IService1/getEndPointsResponse")]
        string getEndPoints(string CompanyID, string RepoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getEndPoints", ReplyAction="http://tempuri.org/IService1/getEndPointsResponse")]
        System.Threading.Tasks.Task<string> getEndPointsAsync(string CompanyID, string RepoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PopulateGatewayLoginCB", ReplyAction="http://tempuri.org/IService1/PopulateGatewayLoginCBResponse")]
        string PopulateGatewayLoginCB(string CS, string CompanyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PopulateGatewayLoginCB", ReplyAction="http://tempuri.org/IService1/PopulateGatewayLoginCBResponse")]
        System.Threading.Tasks.Task<string> PopulateGatewayLoginCBAsync(string CS, string CompanyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSecureID", ReplyAction="http://tempuri.org/IService1/getSecureIDResponse")]
        int getSecureID(string CompanyID, string RepoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSecureID", ReplyAction="http://tempuri.org/IService1/getSecureIDResponse")]
        System.Threading.Tasks.Task<int> getSecureIDAsync(string CompanyID, string RepoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCS", ReplyAction="http://tempuri.org/IService1/getCSResponse")]
        string getCS(int gSecureID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCS", ReplyAction="http://tempuri.org/IService1/getCSResponse")]
        System.Threading.Tasks.Task<string> getCSAsync(int gSecureID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRepoCS", ReplyAction="http://tempuri.org/IService1/getRepoCSResponse")]
        string getRepoCS(int gSecureID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRepoCS", ReplyAction="http://tempuri.org/IService1/getRepoCSResponse")]
        System.Threading.Tasks.Task<string> getRepoCSAsync(int gSecureID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getConnection", ReplyAction="http://tempuri.org/IService1/getConnectionResponse")]
        ECMSearchWPF.SVCGateway.getConnectionResponse getConnection(ECMSearchWPF.SVCGateway.getConnectionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getConnection", ReplyAction="http://tempuri.org/IService1/getConnectionResponse")]
        System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.getConnectionResponse> getConnectionAsync(ECMSearchWPF.SVCGateway.getConnectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ValidateUserLogin", ReplyAction="http://tempuri.org/IService1/ValidateUserLoginResponse")]
        bool ValidateUserLogin(string UID, string EncPW);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ValidateUserLogin", ReplyAction="http://tempuri.org/IService1/ValidateUserLoginResponse")]
        System.Threading.Tasks.Task<bool> ValidateUserLoginAsync(string UID, string EncPW);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ValidateGatewayLogin", ReplyAction="http://tempuri.org/IService1/ValidateGatewayLoginResponse")]
        ECMSearchWPF.SVCGateway.ValidateGatewayLoginResponse ValidateGatewayLogin(ECMSearchWPF.SVCGateway.ValidateGatewayLoginRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ValidateGatewayLogin", ReplyAction="http://tempuri.org/IService1/ValidateGatewayLoginResponse")]
        System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.ValidateGatewayLoginResponse> ValidateGatewayLoginAsync(ECMSearchWPF.SVCGateway.ValidateGatewayLoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSecureKey", ReplyAction="http://tempuri.org/IService1/getSecureKeyResponse")]
        ECMSearchWPF.SVCGateway.getSecureKeyResponse getSecureKey(ECMSearchWPF.SVCGateway.getSecureKeyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSecureKey", ReplyAction="http://tempuri.org/IService1/getSecureKeyResponse")]
        System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.getSecureKeyResponse> getSecureKeyAsync(ECMSearchWPF.SVCGateway.getSecureKeyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PopulateCombo", ReplyAction="http://tempuri.org/IService1/PopulateComboResponse")]
        ECMSearchWPF.SVCGateway.PopulateComboResponse PopulateCombo(ECMSearchWPF.SVCGateway.PopulateComboRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PopulateCombo", ReplyAction="http://tempuri.org/IService1/PopulateComboResponse")]
        System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.PopulateComboResponse> PopulateComboAsync(ECMSearchWPF.SVCGateway.PopulateComboRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PopulateCompanyComboSecure", ReplyAction="http://tempuri.org/IService1/PopulateCompanyComboSecureResponse")]
        ECMSearchWPF.SVCGateway.PopulateCompanyComboSecureResponse PopulateCompanyComboSecure(ECMSearchWPF.SVCGateway.PopulateCompanyComboSecureRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PopulateCompanyComboSecure", ReplyAction="http://tempuri.org/IService1/PopulateCompanyComboSecureResponse")]
        System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.PopulateCompanyComboSecureResponse> PopulateCompanyComboSecureAsync(ECMSearchWPF.SVCGateway.PopulateCompanyComboSecureRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PopulateRepoCombo", ReplyAction="http://tempuri.org/IService1/PopulateRepoComboResponse")]
        ECMSearchWPF.SVCGateway.PopulateRepoComboResponse PopulateRepoCombo(ECMSearchWPF.SVCGateway.PopulateRepoComboRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PopulateRepoCombo", ReplyAction="http://tempuri.org/IService1/PopulateRepoComboResponse")]
        System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.PopulateRepoComboResponse> PopulateRepoComboAsync(ECMSearchWPF.SVCGateway.PopulateRepoComboRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PopulateRepoSecure", ReplyAction="http://tempuri.org/IService1/PopulateRepoSecureResponse")]
        ECMSearchWPF.SVCGateway.PopulateRepoSecureResponse PopulateRepoSecure(ECMSearchWPF.SVCGateway.PopulateRepoSecureRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PopulateRepoSecure", ReplyAction="http://tempuri.org/IService1/PopulateRepoSecureResponse")]
        System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.PopulateRepoSecureResponse> PopulateRepoSecureAsync(ECMSearchWPF.SVCGateway.PopulateRepoSecureRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteExistingConnection", ReplyAction="http://tempuri.org/IService1/DeleteExistingConnectionResponse")]
        ECMSearchWPF.SVCGateway.DeleteExistingConnectionResponse DeleteExistingConnection(ECMSearchWPF.SVCGateway.DeleteExistingConnectionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteExistingConnection", ReplyAction="http://tempuri.org/IService1/DeleteExistingConnectionResponse")]
        System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.DeleteExistingConnectionResponse> DeleteExistingConnectionAsync(ECMSearchWPF.SVCGateway.DeleteExistingConnectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PopulateGrid", ReplyAction="http://tempuri.org/IService1/PopulateGridResponse")]
        ECMSearchWPF.SVCGateway.PopulateGridResponse PopulateGrid(ECMSearchWPF.SVCGateway.PopulateGridRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PopulateGrid", ReplyAction="http://tempuri.org/IService1/PopulateGridResponse")]
        System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.PopulateGridResponse> PopulateGridAsync(ECMSearchWPF.SVCGateway.PopulateGridRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/saveConnection", ReplyAction="http://tempuri.org/IService1/saveConnectionResponse")]
        ECMSearchWPF.SVCGateway.saveConnectionResponse saveConnection(ECMSearchWPF.SVCGateway.saveConnectionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/saveConnection", ReplyAction="http://tempuri.org/IService1/saveConnectionResponse")]
        System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.saveConnectionResponse> saveConnectionAsync(ECMSearchWPF.SVCGateway.saveConnectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AttachToSecureLoginDB", ReplyAction="http://tempuri.org/IService1/AttachToSecureLoginDBResponse")]
        ECMSearchWPF.SVCGateway.AttachToSecureLoginDBResponse AttachToSecureLoginDB(ECMSearchWPF.SVCGateway.AttachToSecureLoginDBRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AttachToSecureLoginDB", ReplyAction="http://tempuri.org/IService1/AttachToSecureLoginDBResponse")]
        System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.AttachToSecureLoginDBResponse> AttachToSecureLoginDBAsync(ECMSearchWPF.SVCGateway.AttachToSecureLoginDBRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        ECMSearchWPF.SVCGateway.CompositeType GetDataUsingDataContract(ECMSearchWPF.SVCGateway.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.CompositeType> GetDataUsingDataContractAsync(ECMSearchWPF.SVCGateway.CompositeType composite);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getConnection", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getConnectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string CompanyID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string RepoID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public bool RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string RetMsg;
        
        public getConnectionRequest() {
        }
        
        public getConnectionRequest(string CompanyID, string RepoID, bool RC, string RetMsg) {
            this.CompanyID = CompanyID;
            this.RepoID = RepoID;
            this.RC = RC;
            this.RetMsg = RetMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getConnectionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getConnectionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string getConnectionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string RetMsg;
        
        public getConnectionResponse() {
        }
        
        public getConnectionResponse(string getConnectionResult, bool RC, string RetMsg) {
            this.getConnectionResult = getConnectionResult;
            this.RC = RC;
            this.RetMsg = RetMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateGatewayLogin", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ValidateGatewayLoginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string CompanyID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string RepoID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string EncPW;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public bool RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string RtnMsg;
        
        public ValidateGatewayLoginRequest() {
        }
        
        public ValidateGatewayLoginRequest(string CompanyID, string RepoID, string EncPW, bool RC, string RtnMsg) {
            this.CompanyID = CompanyID;
            this.RepoID = RepoID;
            this.EncPW = EncPW;
            this.RC = RC;
            this.RtnMsg = RtnMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateGatewayLoginResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ValidateGatewayLoginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool ValidateGatewayLoginResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string RtnMsg;
        
        public ValidateGatewayLoginResponse() {
        }
        
        public ValidateGatewayLoginResponse(bool ValidateGatewayLoginResult, bool RC, string RtnMsg) {
            this.ValidateGatewayLoginResult = ValidateGatewayLoginResult;
            this.RC = RC;
            this.RtnMsg = RtnMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getSecureKey", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getSecureKeyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string CompanyID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string RepoID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string LoginPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public bool RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string RetMsg;
        
        public getSecureKeyRequest() {
        }
        
        public getSecureKeyRequest(string CompanyID, string RepoID, string LoginPassword, bool RC, string RetMsg) {
            this.CompanyID = CompanyID;
            this.RepoID = RepoID;
            this.LoginPassword = LoginPassword;
            this.RC = RC;
            this.RetMsg = RetMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getSecureKeyResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getSecureKeyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string getSecureKeyResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string RetMsg;
        
        public getSecureKeyResponse() {
        }
        
        public getSecureKeyResponse(string getSecureKeyResult, bool RC, string RetMsg) {
            this.getSecureKeyResult = getSecureKeyResult;
            this.RC = RC;
            this.RetMsg = RetMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PopulateCombo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PopulateComboRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string CS;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string CompanyID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public bool RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string RetTxt;
        
        public PopulateComboRequest() {
        }
        
        public PopulateComboRequest(string CS, string CompanyID, bool RC, string RetTxt) {
            this.CS = CS;
            this.CompanyID = CompanyID;
            this.RC = RC;
            this.RetTxt = RetTxt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PopulateComboResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PopulateComboResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string PopulateComboResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string RetTxt;
        
        public PopulateComboResponse() {
        }
        
        public PopulateComboResponse(string PopulateComboResult, bool RC, string RetTxt) {
            this.PopulateComboResult = PopulateComboResult;
            this.RC = RC;
            this.RetTxt = RetTxt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PopulateCompanyComboSecure", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PopulateCompanyComboSecureRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string CS;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string CompanyID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string EncryptedPW;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public bool RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string RetTxt;
        
        public PopulateCompanyComboSecureRequest() {
        }
        
        public PopulateCompanyComboSecureRequest(string CS, string CompanyID, string EncryptedPW, bool RC, string RetTxt) {
            this.CS = CS;
            this.CompanyID = CompanyID;
            this.EncryptedPW = EncryptedPW;
            this.RC = RC;
            this.RetTxt = RetTxt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PopulateCompanyComboSecureResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PopulateCompanyComboSecureResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string PopulateCompanyComboSecureResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string RetTxt;
        
        public PopulateCompanyComboSecureResponse() {
        }
        
        public PopulateCompanyComboSecureResponse(string PopulateCompanyComboSecureResult, bool RC, string RetTxt) {
            this.PopulateCompanyComboSecureResult = PopulateCompanyComboSecureResult;
            this.RC = RC;
            this.RetTxt = RetTxt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PopulateRepoCombo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PopulateRepoComboRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string CS;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string CompanyID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public bool RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string RetTxt;
        
        public PopulateRepoComboRequest() {
        }
        
        public PopulateRepoComboRequest(string CS, string CompanyID, bool RC, string RetTxt) {
            this.CS = CS;
            this.CompanyID = CompanyID;
            this.RC = RC;
            this.RetTxt = RetTxt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PopulateRepoComboResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PopulateRepoComboResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string PopulateRepoComboResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string RetTxt;
        
        public PopulateRepoComboResponse() {
        }
        
        public PopulateRepoComboResponse(string PopulateRepoComboResult, bool RC, string RetTxt) {
            this.PopulateRepoComboResult = PopulateRepoComboResult;
            this.RC = RC;
            this.RetTxt = RetTxt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PopulateRepoSecure", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PopulateRepoSecureRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string CS;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string CompanyID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string EncryptedPW;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public bool RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string RetTxt;
        
        public PopulateRepoSecureRequest() {
        }
        
        public PopulateRepoSecureRequest(string CS, string CompanyID, string EncryptedPW, bool RC, string RetTxt) {
            this.CS = CS;
            this.CompanyID = CompanyID;
            this.EncryptedPW = EncryptedPW;
            this.RC = RC;
            this.RetTxt = RetTxt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PopulateRepoSecureResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PopulateRepoSecureResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string PopulateRepoSecureResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string RetTxt;
        
        public PopulateRepoSecureResponse() {
        }
        
        public PopulateRepoSecureResponse(string PopulateRepoSecureResult, bool RC, string RetTxt) {
            this.PopulateRepoSecureResult = PopulateRepoSecureResult;
            this.RC = RC;
            this.RetTxt = RetTxt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteExistingConnection", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteExistingConnectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string ConnStr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.Collections.Generic.Dictionary<string, string> tDict;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public bool RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string RtnMsg;
        
        public DeleteExistingConnectionRequest() {
        }
        
        public DeleteExistingConnectionRequest(string ConnStr, System.Collections.Generic.Dictionary<string, string> tDict, bool RC, string RtnMsg) {
            this.ConnStr = ConnStr;
            this.tDict = tDict;
            this.RC = RC;
            this.RtnMsg = RtnMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteExistingConnectionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteExistingConnectionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool DeleteExistingConnectionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string RtnMsg;
        
        public DeleteExistingConnectionResponse() {
        }
        
        public DeleteExistingConnectionResponse(bool DeleteExistingConnectionResult, bool RC, string RtnMsg) {
            this.DeleteExistingConnectionResult = DeleteExistingConnectionResult;
            this.RC = RC;
            this.RtnMsg = RtnMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PopulateGrid", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PopulateGridRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string CS;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string CompanyID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string EncPW;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public bool RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string RetTxt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public int LimitToCompany;
        
        public PopulateGridRequest() {
        }
        
        public PopulateGridRequest(string CS, string CompanyID, string EncPW, bool RC, string RetTxt, int LimitToCompany) {
            this.CS = CS;
            this.CompanyID = CompanyID;
            this.EncPW = EncPW;
            this.RC = RC;
            this.RetTxt = RetTxt;
            this.LimitToCompany = LimitToCompany;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PopulateGridResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PopulateGridResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ECMSearchWPF.SVCGateway.DS_SecureAttach[] PopulateGridResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string RetTxt;
        
        public PopulateGridResponse() {
        }
        
        public PopulateGridResponse(ECMSearchWPF.SVCGateway.DS_SecureAttach[] PopulateGridResult, bool RC, string RetTxt) {
            this.PopulateGridResult = PopulateGridResult;
            this.RC = RC;
            this.RetTxt = RetTxt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="saveConnection", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class saveConnectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string ConnStr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.Collections.Generic.Dictionary<string, string> tDict;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public bool RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string RtnMsg;
        
        public saveConnectionRequest() {
        }
        
        public saveConnectionRequest(string ConnStr, System.Collections.Generic.Dictionary<string, string> tDict, bool RC, string RtnMsg) {
            this.ConnStr = ConnStr;
            this.tDict = tDict;
            this.RC = RC;
            this.RtnMsg = RtnMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="saveConnectionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class saveConnectionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool saveConnectionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string RtnMsg;
        
        public saveConnectionResponse() {
        }
        
        public saveConnectionResponse(bool saveConnectionResult, bool RC, string RtnMsg) {
            this.saveConnectionResult = saveConnectionResult;
            this.RC = RC;
            this.RtnMsg = RtnMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AttachToSecureLoginDB", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AttachToSecureLoginDBRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string ConnStr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string RtnMsg;
        
        public AttachToSecureLoginDBRequest() {
        }
        
        public AttachToSecureLoginDBRequest(string ConnStr, bool RC, string RtnMsg) {
            this.ConnStr = ConnStr;
            this.RC = RC;
            this.RtnMsg = RtnMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AttachToSecureLoginDBResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AttachToSecureLoginDBResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool AttachToSecureLoginDBResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool RC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string RtnMsg;
        
        public AttachToSecureLoginDBResponse() {
        }
        
        public AttachToSecureLoginDBResponse(bool AttachToSecureLoginDBResult, bool RC, string RtnMsg) {
            this.AttachToSecureLoginDBResult = AttachToSecureLoginDBResult;
            this.RC = RC;
            this.RtnMsg = RtnMsg;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ECMSearchWPF.SVCGateway.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ECMSearchWPF.SVCGateway.IService1>, ECMSearchWPF.SVCGateway.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string getSessionID() {
            return base.Channel.getSessionID();
        }
        
        public System.Threading.Tasks.Task<string> getSessionIDAsync() {
            return base.Channel.getSessionIDAsync();
        }
        
        public string getServiceVersion() {
            return base.Channel.getServiceVersion();
        }
        
        public System.Threading.Tasks.Task<string> getServiceVersionAsync() {
            return base.Channel.getServiceVersionAsync();
        }
        
        public string updateRepoUsers(string CompanyID, string RepoID) {
            return base.Channel.updateRepoUsers(CompanyID, RepoID);
        }
        
        public System.Threading.Tasks.Task<string> updateRepoUsersAsync(string CompanyID, string RepoID) {
            return base.Channel.updateRepoUsersAsync(CompanyID, RepoID);
        }
        
        public int validateAttachSecureLogin(int gSecureID, string gCompanyID, string gRepoID, string LoginID, string EPW) {
            return base.Channel.validateAttachSecureLogin(gSecureID, gCompanyID, gRepoID, LoginID, EPW);
        }
        
        public System.Threading.Tasks.Task<int> validateAttachSecureLoginAsync(int gSecureID, string gCompanyID, string gRepoID, string LoginID, string EPW) {
            return base.Channel.validateAttachSecureLoginAsync(gSecureID, gCompanyID, gRepoID, LoginID, EPW);
        }
        
        public string getGatewayCS(int gSecureID, string gCompanyID, string gRepoID, string EPW) {
            return base.Channel.getGatewayCS(gSecureID, gCompanyID, gRepoID, EPW);
        }
        
        public System.Threading.Tasks.Task<string> getGatewayCSAsync(int gSecureID, string gCompanyID, string gRepoID, string EPW) {
            return base.Channel.getGatewayCSAsync(gSecureID, gCompanyID, gRepoID, EPW);
        }
        
        public string getEndPoints(string CompanyID, string RepoID) {
            return base.Channel.getEndPoints(CompanyID, RepoID);
        }
        
        public System.Threading.Tasks.Task<string> getEndPointsAsync(string CompanyID, string RepoID) {
            return base.Channel.getEndPointsAsync(CompanyID, RepoID);
        }
        
        public string PopulateGatewayLoginCB(string CS, string CompanyID) {
            return base.Channel.PopulateGatewayLoginCB(CS, CompanyID);
        }
        
        public System.Threading.Tasks.Task<string> PopulateGatewayLoginCBAsync(string CS, string CompanyID) {
            return base.Channel.PopulateGatewayLoginCBAsync(CS, CompanyID);
        }
        
        public int getSecureID(string CompanyID, string RepoID) {
            return base.Channel.getSecureID(CompanyID, RepoID);
        }
        
        public System.Threading.Tasks.Task<int> getSecureIDAsync(string CompanyID, string RepoID) {
            return base.Channel.getSecureIDAsync(CompanyID, RepoID);
        }
        
        public string getCS(int gSecureID) {
            return base.Channel.getCS(gSecureID);
        }
        
        public System.Threading.Tasks.Task<string> getCSAsync(int gSecureID) {
            return base.Channel.getCSAsync(gSecureID);
        }
        
        public string getRepoCS(int gSecureID) {
            return base.Channel.getRepoCS(gSecureID);
        }
        
        public System.Threading.Tasks.Task<string> getRepoCSAsync(int gSecureID) {
            return base.Channel.getRepoCSAsync(gSecureID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ECMSearchWPF.SVCGateway.getConnectionResponse ECMSearchWPF.SVCGateway.IService1.getConnection(ECMSearchWPF.SVCGateway.getConnectionRequest request) {
            return base.Channel.getConnection(request);
        }
        
        public string getConnection(string CompanyID, string RepoID, ref bool RC, ref string RetMsg) {
            ECMSearchWPF.SVCGateway.getConnectionRequest inValue = new ECMSearchWPF.SVCGateway.getConnectionRequest();
            inValue.CompanyID = CompanyID;
            inValue.RepoID = RepoID;
            inValue.RC = RC;
            inValue.RetMsg = RetMsg;
            ECMSearchWPF.SVCGateway.getConnectionResponse retVal = ((ECMSearchWPF.SVCGateway.IService1)(this)).getConnection(inValue);
            RC = retVal.RC;
            RetMsg = retVal.RetMsg;
            return retVal.getConnectionResult;
        }
        
        public System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.getConnectionResponse> getConnectionAsync(ECMSearchWPF.SVCGateway.getConnectionRequest request) {
            return base.Channel.getConnectionAsync(request);
        }
        
        public bool ValidateUserLogin(string UID, string EncPW) {
            return base.Channel.ValidateUserLogin(UID, EncPW);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateUserLoginAsync(string UID, string EncPW) {
            return base.Channel.ValidateUserLoginAsync(UID, EncPW);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ECMSearchWPF.SVCGateway.ValidateGatewayLoginResponse ECMSearchWPF.SVCGateway.IService1.ValidateGatewayLogin(ECMSearchWPF.SVCGateway.ValidateGatewayLoginRequest request) {
            return base.Channel.ValidateGatewayLogin(request);
        }
        
        public bool ValidateGatewayLogin(string CompanyID, string RepoID, string EncPW, ref bool RC, ref string RtnMsg) {
            ECMSearchWPF.SVCGateway.ValidateGatewayLoginRequest inValue = new ECMSearchWPF.SVCGateway.ValidateGatewayLoginRequest();
            inValue.CompanyID = CompanyID;
            inValue.RepoID = RepoID;
            inValue.EncPW = EncPW;
            inValue.RC = RC;
            inValue.RtnMsg = RtnMsg;
            ECMSearchWPF.SVCGateway.ValidateGatewayLoginResponse retVal = ((ECMSearchWPF.SVCGateway.IService1)(this)).ValidateGatewayLogin(inValue);
            RC = retVal.RC;
            RtnMsg = retVal.RtnMsg;
            return retVal.ValidateGatewayLoginResult;
        }
        
        public System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.ValidateGatewayLoginResponse> ValidateGatewayLoginAsync(ECMSearchWPF.SVCGateway.ValidateGatewayLoginRequest request) {
            return base.Channel.ValidateGatewayLoginAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ECMSearchWPF.SVCGateway.getSecureKeyResponse ECMSearchWPF.SVCGateway.IService1.getSecureKey(ECMSearchWPF.SVCGateway.getSecureKeyRequest request) {
            return base.Channel.getSecureKey(request);
        }
        
        public string getSecureKey(string CompanyID, string RepoID, string LoginPassword, ref bool RC, ref string RetMsg) {
            ECMSearchWPF.SVCGateway.getSecureKeyRequest inValue = new ECMSearchWPF.SVCGateway.getSecureKeyRequest();
            inValue.CompanyID = CompanyID;
            inValue.RepoID = RepoID;
            inValue.LoginPassword = LoginPassword;
            inValue.RC = RC;
            inValue.RetMsg = RetMsg;
            ECMSearchWPF.SVCGateway.getSecureKeyResponse retVal = ((ECMSearchWPF.SVCGateway.IService1)(this)).getSecureKey(inValue);
            RC = retVal.RC;
            RetMsg = retVal.RetMsg;
            return retVal.getSecureKeyResult;
        }
        
        public System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.getSecureKeyResponse> getSecureKeyAsync(ECMSearchWPF.SVCGateway.getSecureKeyRequest request) {
            return base.Channel.getSecureKeyAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ECMSearchWPF.SVCGateway.PopulateComboResponse ECMSearchWPF.SVCGateway.IService1.PopulateCombo(ECMSearchWPF.SVCGateway.PopulateComboRequest request) {
            return base.Channel.PopulateCombo(request);
        }
        
        public string PopulateCombo(string CS, string CompanyID, ref bool RC, ref string RetTxt) {
            ECMSearchWPF.SVCGateway.PopulateComboRequest inValue = new ECMSearchWPF.SVCGateway.PopulateComboRequest();
            inValue.CS = CS;
            inValue.CompanyID = CompanyID;
            inValue.RC = RC;
            inValue.RetTxt = RetTxt;
            ECMSearchWPF.SVCGateway.PopulateComboResponse retVal = ((ECMSearchWPF.SVCGateway.IService1)(this)).PopulateCombo(inValue);
            RC = retVal.RC;
            RetTxt = retVal.RetTxt;
            return retVal.PopulateComboResult;
        }
        
        public System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.PopulateComboResponse> PopulateComboAsync(ECMSearchWPF.SVCGateway.PopulateComboRequest request) {
            return base.Channel.PopulateComboAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ECMSearchWPF.SVCGateway.PopulateCompanyComboSecureResponse ECMSearchWPF.SVCGateway.IService1.PopulateCompanyComboSecure(ECMSearchWPF.SVCGateway.PopulateCompanyComboSecureRequest request) {
            return base.Channel.PopulateCompanyComboSecure(request);
        }
        
        public string PopulateCompanyComboSecure(string CS, string CompanyID, string EncryptedPW, ref bool RC, ref string RetTxt) {
            ECMSearchWPF.SVCGateway.PopulateCompanyComboSecureRequest inValue = new ECMSearchWPF.SVCGateway.PopulateCompanyComboSecureRequest();
            inValue.CS = CS;
            inValue.CompanyID = CompanyID;
            inValue.EncryptedPW = EncryptedPW;
            inValue.RC = RC;
            inValue.RetTxt = RetTxt;
            ECMSearchWPF.SVCGateway.PopulateCompanyComboSecureResponse retVal = ((ECMSearchWPF.SVCGateway.IService1)(this)).PopulateCompanyComboSecure(inValue);
            RC = retVal.RC;
            RetTxt = retVal.RetTxt;
            return retVal.PopulateCompanyComboSecureResult;
        }
        
        public System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.PopulateCompanyComboSecureResponse> PopulateCompanyComboSecureAsync(ECMSearchWPF.SVCGateway.PopulateCompanyComboSecureRequest request) {
            return base.Channel.PopulateCompanyComboSecureAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ECMSearchWPF.SVCGateway.PopulateRepoComboResponse ECMSearchWPF.SVCGateway.IService1.PopulateRepoCombo(ECMSearchWPF.SVCGateway.PopulateRepoComboRequest request) {
            return base.Channel.PopulateRepoCombo(request);
        }
        
        public string PopulateRepoCombo(string CS, string CompanyID, ref bool RC, ref string RetTxt) {
            ECMSearchWPF.SVCGateway.PopulateRepoComboRequest inValue = new ECMSearchWPF.SVCGateway.PopulateRepoComboRequest();
            inValue.CS = CS;
            inValue.CompanyID = CompanyID;
            inValue.RC = RC;
            inValue.RetTxt = RetTxt;
            ECMSearchWPF.SVCGateway.PopulateRepoComboResponse retVal = ((ECMSearchWPF.SVCGateway.IService1)(this)).PopulateRepoCombo(inValue);
            RC = retVal.RC;
            RetTxt = retVal.RetTxt;
            return retVal.PopulateRepoComboResult;
        }
        
        public System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.PopulateRepoComboResponse> PopulateRepoComboAsync(ECMSearchWPF.SVCGateway.PopulateRepoComboRequest request) {
            return base.Channel.PopulateRepoComboAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ECMSearchWPF.SVCGateway.PopulateRepoSecureResponse ECMSearchWPF.SVCGateway.IService1.PopulateRepoSecure(ECMSearchWPF.SVCGateway.PopulateRepoSecureRequest request) {
            return base.Channel.PopulateRepoSecure(request);
        }
        
        public string PopulateRepoSecure(string CS, string CompanyID, string EncryptedPW, ref bool RC, ref string RetTxt) {
            ECMSearchWPF.SVCGateway.PopulateRepoSecureRequest inValue = new ECMSearchWPF.SVCGateway.PopulateRepoSecureRequest();
            inValue.CS = CS;
            inValue.CompanyID = CompanyID;
            inValue.EncryptedPW = EncryptedPW;
            inValue.RC = RC;
            inValue.RetTxt = RetTxt;
            ECMSearchWPF.SVCGateway.PopulateRepoSecureResponse retVal = ((ECMSearchWPF.SVCGateway.IService1)(this)).PopulateRepoSecure(inValue);
            RC = retVal.RC;
            RetTxt = retVal.RetTxt;
            return retVal.PopulateRepoSecureResult;
        }
        
        public System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.PopulateRepoSecureResponse> PopulateRepoSecureAsync(ECMSearchWPF.SVCGateway.PopulateRepoSecureRequest request) {
            return base.Channel.PopulateRepoSecureAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ECMSearchWPF.SVCGateway.DeleteExistingConnectionResponse ECMSearchWPF.SVCGateway.IService1.DeleteExistingConnection(ECMSearchWPF.SVCGateway.DeleteExistingConnectionRequest request) {
            return base.Channel.DeleteExistingConnection(request);
        }
        
        public bool DeleteExistingConnection(string ConnStr, System.Collections.Generic.Dictionary<string, string> tDict, ref bool RC, ref string RtnMsg) {
            ECMSearchWPF.SVCGateway.DeleteExistingConnectionRequest inValue = new ECMSearchWPF.SVCGateway.DeleteExistingConnectionRequest();
            inValue.ConnStr = ConnStr;
            inValue.tDict = tDict;
            inValue.RC = RC;
            inValue.RtnMsg = RtnMsg;
            ECMSearchWPF.SVCGateway.DeleteExistingConnectionResponse retVal = ((ECMSearchWPF.SVCGateway.IService1)(this)).DeleteExistingConnection(inValue);
            RC = retVal.RC;
            RtnMsg = retVal.RtnMsg;
            return retVal.DeleteExistingConnectionResult;
        }
        
        public System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.DeleteExistingConnectionResponse> DeleteExistingConnectionAsync(ECMSearchWPF.SVCGateway.DeleteExistingConnectionRequest request) {
            return base.Channel.DeleteExistingConnectionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ECMSearchWPF.SVCGateway.PopulateGridResponse ECMSearchWPF.SVCGateway.IService1.PopulateGrid(ECMSearchWPF.SVCGateway.PopulateGridRequest request) {
            return base.Channel.PopulateGrid(request);
        }
        
        public ECMSearchWPF.SVCGateway.DS_SecureAttach[] PopulateGrid(string CS, string CompanyID, string EncPW, ref bool RC, ref string RetTxt, int LimitToCompany) {
            ECMSearchWPF.SVCGateway.PopulateGridRequest inValue = new ECMSearchWPF.SVCGateway.PopulateGridRequest();
            inValue.CS = CS;
            inValue.CompanyID = CompanyID;
            inValue.EncPW = EncPW;
            inValue.RC = RC;
            inValue.RetTxt = RetTxt;
            inValue.LimitToCompany = LimitToCompany;
            ECMSearchWPF.SVCGateway.PopulateGridResponse retVal = ((ECMSearchWPF.SVCGateway.IService1)(this)).PopulateGrid(inValue);
            RC = retVal.RC;
            RetTxt = retVal.RetTxt;
            return retVal.PopulateGridResult;
        }
        
        public System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.PopulateGridResponse> PopulateGridAsync(ECMSearchWPF.SVCGateway.PopulateGridRequest request) {
            return base.Channel.PopulateGridAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ECMSearchWPF.SVCGateway.saveConnectionResponse ECMSearchWPF.SVCGateway.IService1.saveConnection(ECMSearchWPF.SVCGateway.saveConnectionRequest request) {
            return base.Channel.saveConnection(request);
        }
        
        public bool saveConnection(string ConnStr, System.Collections.Generic.Dictionary<string, string> tDict, ref bool RC, ref string RtnMsg) {
            ECMSearchWPF.SVCGateway.saveConnectionRequest inValue = new ECMSearchWPF.SVCGateway.saveConnectionRequest();
            inValue.ConnStr = ConnStr;
            inValue.tDict = tDict;
            inValue.RC = RC;
            inValue.RtnMsg = RtnMsg;
            ECMSearchWPF.SVCGateway.saveConnectionResponse retVal = ((ECMSearchWPF.SVCGateway.IService1)(this)).saveConnection(inValue);
            RC = retVal.RC;
            RtnMsg = retVal.RtnMsg;
            return retVal.saveConnectionResult;
        }
        
        public System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.saveConnectionResponse> saveConnectionAsync(ECMSearchWPF.SVCGateway.saveConnectionRequest request) {
            return base.Channel.saveConnectionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ECMSearchWPF.SVCGateway.AttachToSecureLoginDBResponse ECMSearchWPF.SVCGateway.IService1.AttachToSecureLoginDB(ECMSearchWPF.SVCGateway.AttachToSecureLoginDBRequest request) {
            return base.Channel.AttachToSecureLoginDB(request);
        }
        
        public bool AttachToSecureLoginDB(string ConnStr, ref bool RC, ref string RtnMsg) {
            ECMSearchWPF.SVCGateway.AttachToSecureLoginDBRequest inValue = new ECMSearchWPF.SVCGateway.AttachToSecureLoginDBRequest();
            inValue.ConnStr = ConnStr;
            inValue.RC = RC;
            inValue.RtnMsg = RtnMsg;
            ECMSearchWPF.SVCGateway.AttachToSecureLoginDBResponse retVal = ((ECMSearchWPF.SVCGateway.IService1)(this)).AttachToSecureLoginDB(inValue);
            RC = retVal.RC;
            RtnMsg = retVal.RtnMsg;
            return retVal.AttachToSecureLoginDBResult;
        }
        
        public System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.AttachToSecureLoginDBResponse> AttachToSecureLoginDBAsync(ECMSearchWPF.SVCGateway.AttachToSecureLoginDBRequest request) {
            return base.Channel.AttachToSecureLoginDBAsync(request);
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public ECMSearchWPF.SVCGateway.CompositeType GetDataUsingDataContract(ECMSearchWPF.SVCGateway.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<ECMSearchWPF.SVCGateway.CompositeType> GetDataUsingDataContractAsync(ECMSearchWPF.SVCGateway.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
