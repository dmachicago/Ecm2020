'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Runtime.Serialization

Namespace SVCSearch
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="DS_USERSCREENSTATE", [Namespace]:="http://schemas.datacontract.org/2004/07/EcmCloudWcf.Web"),  _
     System.SerializableAttribute()>  _
    Partial Public Class DS_USERSCREENSTATE
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private HiveActiveField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private HiveConnectionNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ParmDataTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ParmNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ParmValField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RepoSvrNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RowCreationDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RowLastModDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RowNbrField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ScreenNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserIDField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property HiveActive() As Boolean
            Get
                Return Me.HiveActiveField
            End Get
            Set
                If (Me.HiveActiveField.Equals(value) <> true) Then
                    Me.HiveActiveField = value
                    Me.RaisePropertyChanged("HiveActive")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property HiveConnectionName() As String
            Get
                Return Me.HiveConnectionNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.HiveConnectionNameField, value) <> true) Then
                    Me.HiveConnectionNameField = value
                    Me.RaisePropertyChanged("HiveConnectionName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ParmDataType() As String
            Get
                Return Me.ParmDataTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ParmDataTypeField, value) <> true) Then
                    Me.ParmDataTypeField = value
                    Me.RaisePropertyChanged("ParmDataType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ParmName() As String
            Get
                Return Me.ParmNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ParmNameField, value) <> true) Then
                    Me.ParmNameField = value
                    Me.RaisePropertyChanged("ParmName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ParmVal() As String
            Get
                Return Me.ParmValField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ParmValField, value) <> true) Then
                    Me.ParmValField = value
                    Me.RaisePropertyChanged("ParmVal")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RepoSvrName() As String
            Get
                Return Me.RepoSvrNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RepoSvrNameField, value) <> true) Then
                    Me.RepoSvrNameField = value
                    Me.RaisePropertyChanged("RepoSvrName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RowCreationDate() As Date
            Get
                Return Me.RowCreationDateField
            End Get
            Set
                If (Me.RowCreationDateField.Equals(value) <> true) Then
                    Me.RowCreationDateField = value
                    Me.RaisePropertyChanged("RowCreationDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RowLastModDate() As Date
            Get
                Return Me.RowLastModDateField
            End Get
            Set
                If (Me.RowLastModDateField.Equals(value) <> true) Then
                    Me.RowLastModDateField = value
                    Me.RaisePropertyChanged("RowLastModDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RowNbr() As Integer
            Get
                Return Me.RowNbrField
            End Get
            Set
                If (Me.RowNbrField.Equals(value) <> true) Then
                    Me.RowNbrField = value
                    Me.RaisePropertyChanged("RowNbr")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ScreenName() As String
            Get
                Return Me.ScreenNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ScreenNameField, value) <> true) Then
                    Me.ScreenNameField = value
                    Me.RaisePropertyChanged("ScreenName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserID() As String
            Get
                Return Me.UserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserIDField, value) <> true) Then
                    Me.UserIDField = value
                    Me.RaisePropertyChanged("UserID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="DS_clsUSERGRIDSTATE", [Namespace]:="http://schemas.datacontract.org/2004/07/EcmCloudWcf.Web"),  _
     System.SerializableAttribute()>  _
    Partial Public Class DS_clsUSERGRIDSTATE
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ColNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ColOrderField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ColReadOnlyField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ColSortAscField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ColSortOrderField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ColVisibleField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ColWidthField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private GridNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private HiveActiveField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private HiveConnectionNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RepoSvrNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RowCreationDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RowLastModDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RowNbrField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ScreenNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserIDField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ColName() As String
            Get
                Return Me.ColNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ColNameField, value) <> true) Then
                    Me.ColNameField = value
                    Me.RaisePropertyChanged("ColName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ColOrder() As Integer
            Get
                Return Me.ColOrderField
            End Get
            Set
                If (Me.ColOrderField.Equals(value) <> true) Then
                    Me.ColOrderField = value
                    Me.RaisePropertyChanged("ColOrder")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ColReadOnly() As Boolean
            Get
                Return Me.ColReadOnlyField
            End Get
            Set
                If (Me.ColReadOnlyField.Equals(value) <> true) Then
                    Me.ColReadOnlyField = value
                    Me.RaisePropertyChanged("ColReadOnly")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ColSortAsc() As Boolean
            Get
                Return Me.ColSortAscField
            End Get
            Set
                If (Me.ColSortAscField.Equals(value) <> true) Then
                    Me.ColSortAscField = value
                    Me.RaisePropertyChanged("ColSortAsc")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ColSortOrder() As Integer
            Get
                Return Me.ColSortOrderField
            End Get
            Set
                If (Me.ColSortOrderField.Equals(value) <> true) Then
                    Me.ColSortOrderField = value
                    Me.RaisePropertyChanged("ColSortOrder")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ColVisible() As Boolean
            Get
                Return Me.ColVisibleField
            End Get
            Set
                If (Me.ColVisibleField.Equals(value) <> true) Then
                    Me.ColVisibleField = value
                    Me.RaisePropertyChanged("ColVisible")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ColWidth() As Integer
            Get
                Return Me.ColWidthField
            End Get
            Set
                If (Me.ColWidthField.Equals(value) <> true) Then
                    Me.ColWidthField = value
                    Me.RaisePropertyChanged("ColWidth")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property GridName() As String
            Get
                Return Me.GridNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.GridNameField, value) <> true) Then
                    Me.GridNameField = value
                    Me.RaisePropertyChanged("GridName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property HiveActive() As Boolean
            Get
                Return Me.HiveActiveField
            End Get
            Set
                If (Me.HiveActiveField.Equals(value) <> true) Then
                    Me.HiveActiveField = value
                    Me.RaisePropertyChanged("HiveActive")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property HiveConnectionName() As String
            Get
                Return Me.HiveConnectionNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.HiveConnectionNameField, value) <> true) Then
                    Me.HiveConnectionNameField = value
                    Me.RaisePropertyChanged("HiveConnectionName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RepoSvrName() As String
            Get
                Return Me.RepoSvrNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RepoSvrNameField, value) <> true) Then
                    Me.RepoSvrNameField = value
                    Me.RaisePropertyChanged("RepoSvrName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RowCreationDate() As Date
            Get
                Return Me.RowCreationDateField
            End Get
            Set
                If (Me.RowCreationDateField.Equals(value) <> true) Then
                    Me.RowCreationDateField = value
                    Me.RaisePropertyChanged("RowCreationDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RowLastModDate() As Date
            Get
                Return Me.RowLastModDateField
            End Get
            Set
                If (Me.RowLastModDateField.Equals(value) <> true) Then
                    Me.RowLastModDateField = value
                    Me.RaisePropertyChanged("RowLastModDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RowNbr() As Integer
            Get
                Return Me.RowNbrField
            End Get
            Set
                If (Me.RowNbrField.Equals(value) <> true) Then
                    Me.RowNbrField = value
                    Me.RaisePropertyChanged("RowNbr")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ScreenName() As String
            Get
                Return Me.ScreenNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ScreenNameField, value) <> true) Then
                    Me.ScreenNameField = value
                    Me.RaisePropertyChanged("ScreenName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserID() As String
            Get
                Return Me.UserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserIDField, value) <> true) Then
                    Me.UserIDField = value
                    Me.RaisePropertyChanged("UserID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="DS_CONTENT", [Namespace]:="http://schemas.datacontract.org/2004/07/EcmCloudWcf.Web"),  _
     System.SerializableAttribute()>  _
    Partial Public Class DS_CONTENT
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CreateDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DataSourceOwnerUserIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FQNField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FileDirectoryField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FileLengthField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LastAccessDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LastWriteTimeField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OriginalFileTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RANKField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ROWIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RepoSvrNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RetentionExpirationDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RssLinkFlgField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SourceGuidField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SourceNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StructuredDataField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private VersionNbrField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private isMasterField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private isPublicField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private isWebPageField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CreateDate() As Date
            Get
                Return Me.CreateDateField
            End Get
            Set
                If (Me.CreateDateField.Equals(value) <> true) Then
                    Me.CreateDateField = value
                    Me.RaisePropertyChanged("CreateDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DataSourceOwnerUserID() As String
            Get
                Return Me.DataSourceOwnerUserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DataSourceOwnerUserIDField, value) <> true) Then
                    Me.DataSourceOwnerUserIDField = value
                    Me.RaisePropertyChanged("DataSourceOwnerUserID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Description() As String
            Get
                Return Me.DescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DescriptionField, value) <> true) Then
                    Me.DescriptionField = value
                    Me.RaisePropertyChanged("Description")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FQN() As String
            Get
                Return Me.FQNField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FQNField, value) <> true) Then
                    Me.FQNField = value
                    Me.RaisePropertyChanged("FQN")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FileDirectory() As String
            Get
                Return Me.FileDirectoryField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FileDirectoryField, value) <> true) Then
                    Me.FileDirectoryField = value
                    Me.RaisePropertyChanged("FileDirectory")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FileLength() As Integer
            Get
                Return Me.FileLengthField
            End Get
            Set
                If (Me.FileLengthField.Equals(value) <> true) Then
                    Me.FileLengthField = value
                    Me.RaisePropertyChanged("FileLength")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LastAccessDate() As Date
            Get
                Return Me.LastAccessDateField
            End Get
            Set
                If (Me.LastAccessDateField.Equals(value) <> true) Then
                    Me.LastAccessDateField = value
                    Me.RaisePropertyChanged("LastAccessDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LastWriteTime() As Date
            Get
                Return Me.LastWriteTimeField
            End Get
            Set
                If (Me.LastWriteTimeField.Equals(value) <> true) Then
                    Me.LastWriteTimeField = value
                    Me.RaisePropertyChanged("LastWriteTime")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OriginalFileType() As String
            Get
                Return Me.OriginalFileTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OriginalFileTypeField, value) <> true) Then
                    Me.OriginalFileTypeField = value
                    Me.RaisePropertyChanged("OriginalFileType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RANK() As Integer
            Get
                Return Me.RANKField
            End Get
            Set
                If (Me.RANKField.Equals(value) <> true) Then
                    Me.RANKField = value
                    Me.RaisePropertyChanged("RANK")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ROWID() As String
            Get
                Return Me.ROWIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ROWIDField, value) <> true) Then
                    Me.ROWIDField = value
                    Me.RaisePropertyChanged("ROWID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RepoSvrName() As String
            Get
                Return Me.RepoSvrNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RepoSvrNameField, value) <> true) Then
                    Me.RepoSvrNameField = value
                    Me.RaisePropertyChanged("RepoSvrName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RetentionExpirationDate() As Date
            Get
                Return Me.RetentionExpirationDateField
            End Get
            Set
                If (Me.RetentionExpirationDateField.Equals(value) <> true) Then
                    Me.RetentionExpirationDateField = value
                    Me.RaisePropertyChanged("RetentionExpirationDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RssLinkFlg() As Boolean
            Get
                Return Me.RssLinkFlgField
            End Get
            Set
                If (Me.RssLinkFlgField.Equals(value) <> true) Then
                    Me.RssLinkFlgField = value
                    Me.RaisePropertyChanged("RssLinkFlg")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SourceGuid() As String
            Get
                Return Me.SourceGuidField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SourceGuidField, value) <> true) Then
                    Me.SourceGuidField = value
                    Me.RaisePropertyChanged("SourceGuid")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SourceName() As String
            Get
                Return Me.SourceNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SourceNameField, value) <> true) Then
                    Me.SourceNameField = value
                    Me.RaisePropertyChanged("SourceName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StructuredData() As Boolean
            Get
                Return Me.StructuredDataField
            End Get
            Set
                If (Me.StructuredDataField.Equals(value) <> true) Then
                    Me.StructuredDataField = value
                    Me.RaisePropertyChanged("StructuredData")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property VersionNbr() As Integer
            Get
                Return Me.VersionNbrField
            End Get
            Set
                If (Me.VersionNbrField.Equals(value) <> true) Then
                    Me.VersionNbrField = value
                    Me.RaisePropertyChanged("VersionNbr")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property isMaster() As String
            Get
                Return Me.isMasterField
            End Get
            Set
                If (Object.ReferenceEquals(Me.isMasterField, value) <> true) Then
                    Me.isMasterField = value
                    Me.RaisePropertyChanged("isMaster")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property isPublic() As String
            Get
                Return Me.isPublicField
            End Get
            Set
                If (Object.ReferenceEquals(Me.isPublicField, value) <> true) Then
                    Me.isPublicField = value
                    Me.RaisePropertyChanged("isPublic")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property isWebPage() As String
            Get
                Return Me.isWebPageField
            End Get
            Set
                If (Object.ReferenceEquals(Me.isWebPageField, value) <> true) Then
                    Me.isWebPageField = value
                    Me.RaisePropertyChanged("isWebPage")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="DS_EMAIL", [Namespace]:="http://schemas.datacontract.org/2004/07/EcmCloudWcf.Web"),  _
     System.SerializableAttribute()>  _
    Partial Public Class DS_EMAIL
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AllRecipientsField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BccField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BodyField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CCField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CreationTimeField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmailGuidField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FoundInAttachField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MsgSizeField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NbrAttachmentsField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OriginalFolderField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RANKField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ROWIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReceivedByNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReceivedTimeField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RepoSvrNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RetentionExpirationDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SUBJECTField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SenderEmailAddressField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SenderNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SentOnField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SentTOField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ShortSubjField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SourceTypeCodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private isPublicField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AllRecipients() As String
            Get
                Return Me.AllRecipientsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AllRecipientsField, value) <> true) Then
                    Me.AllRecipientsField = value
                    Me.RaisePropertyChanged("AllRecipients")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Bcc() As String
            Get
                Return Me.BccField
            End Get
            Set
                If (Object.ReferenceEquals(Me.BccField, value) <> true) Then
                    Me.BccField = value
                    Me.RaisePropertyChanged("Bcc")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Body() As String
            Get
                Return Me.BodyField
            End Get
            Set
                If (Object.ReferenceEquals(Me.BodyField, value) <> true) Then
                    Me.BodyField = value
                    Me.RaisePropertyChanged("Body")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CC() As String
            Get
                Return Me.CCField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CCField, value) <> true) Then
                    Me.CCField = value
                    Me.RaisePropertyChanged("CC")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CreationTime() As Date
            Get
                Return Me.CreationTimeField
            End Get
            Set
                If (Me.CreationTimeField.Equals(value) <> true) Then
                    Me.CreationTimeField = value
                    Me.RaisePropertyChanged("CreationTime")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmailGuid() As String
            Get
                Return Me.EmailGuidField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EmailGuidField, value) <> true) Then
                    Me.EmailGuidField = value
                    Me.RaisePropertyChanged("EmailGuid")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FoundInAttach() As Boolean
            Get
                Return Me.FoundInAttachField
            End Get
            Set
                If (Me.FoundInAttachField.Equals(value) <> true) Then
                    Me.FoundInAttachField = value
                    Me.RaisePropertyChanged("FoundInAttach")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MsgSize() As Integer
            Get
                Return Me.MsgSizeField
            End Get
            Set
                If (Me.MsgSizeField.Equals(value) <> true) Then
                    Me.MsgSizeField = value
                    Me.RaisePropertyChanged("MsgSize")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property NbrAttachments() As Integer
            Get
                Return Me.NbrAttachmentsField
            End Get
            Set
                If (Me.NbrAttachmentsField.Equals(value) <> true) Then
                    Me.NbrAttachmentsField = value
                    Me.RaisePropertyChanged("NbrAttachments")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OriginalFolder() As String
            Get
                Return Me.OriginalFolderField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OriginalFolderField, value) <> true) Then
                    Me.OriginalFolderField = value
                    Me.RaisePropertyChanged("OriginalFolder")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RANK() As Integer
            Get
                Return Me.RANKField
            End Get
            Set
                If (Me.RANKField.Equals(value) <> true) Then
                    Me.RANKField = value
                    Me.RaisePropertyChanged("RANK")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RID() As String
            Get
                Return Me.RIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RIDField, value) <> true) Then
                    Me.RIDField = value
                    Me.RaisePropertyChanged("RID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ROWID() As String
            Get
                Return Me.ROWIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ROWIDField, value) <> true) Then
                    Me.ROWIDField = value
                    Me.RaisePropertyChanged("ROWID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReceivedByName() As String
            Get
                Return Me.ReceivedByNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReceivedByNameField, value) <> true) Then
                    Me.ReceivedByNameField = value
                    Me.RaisePropertyChanged("ReceivedByName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReceivedTime() As Date
            Get
                Return Me.ReceivedTimeField
            End Get
            Set
                If (Me.ReceivedTimeField.Equals(value) <> true) Then
                    Me.ReceivedTimeField = value
                    Me.RaisePropertyChanged("ReceivedTime")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RepoSvrName() As String
            Get
                Return Me.RepoSvrNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RepoSvrNameField, value) <> true) Then
                    Me.RepoSvrNameField = value
                    Me.RaisePropertyChanged("RepoSvrName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RetentionExpirationDate() As Date
            Get
                Return Me.RetentionExpirationDateField
            End Get
            Set
                If (Me.RetentionExpirationDateField.Equals(value) <> true) Then
                    Me.RetentionExpirationDateField = value
                    Me.RaisePropertyChanged("RetentionExpirationDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SUBJECT() As String
            Get
                Return Me.SUBJECTField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SUBJECTField, value) <> true) Then
                    Me.SUBJECTField = value
                    Me.RaisePropertyChanged("SUBJECT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SenderEmailAddress() As String
            Get
                Return Me.SenderEmailAddressField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SenderEmailAddressField, value) <> true) Then
                    Me.SenderEmailAddressField = value
                    Me.RaisePropertyChanged("SenderEmailAddress")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SenderName() As String
            Get
                Return Me.SenderNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SenderNameField, value) <> true) Then
                    Me.SenderNameField = value
                    Me.RaisePropertyChanged("SenderName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SentOn() As Date
            Get
                Return Me.SentOnField
            End Get
            Set
                If (Me.SentOnField.Equals(value) <> true) Then
                    Me.SentOnField = value
                    Me.RaisePropertyChanged("SentOn")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SentTO() As String
            Get
                Return Me.SentTOField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SentTOField, value) <> true) Then
                    Me.SentTOField = value
                    Me.RaisePropertyChanged("SentTO")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ShortSubj() As String
            Get
                Return Me.ShortSubjField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ShortSubjField, value) <> true) Then
                    Me.ShortSubjField = value
                    Me.RaisePropertyChanged("ShortSubj")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SourceTypeCode() As String
            Get
                Return Me.SourceTypeCodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SourceTypeCodeField, value) <> true) Then
                    Me.SourceTypeCodeField = value
                    Me.RaisePropertyChanged("SourceTypeCode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserID() As String
            Get
                Return Me.UserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserIDField, value) <> true) Then
                    Me.UserIDField = value
                    Me.RaisePropertyChanged("UserID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property isPublic() As String
            Get
                Return Me.isPublicField
            End Get
            Set
                If (Object.ReferenceEquals(Me.isPublicField, value) <> true) Then
                    Me.isPublicField = value
                    Me.RaisePropertyChanged("isPublic")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="DS_License", [Namespace]:="http://schemas.datacontract.org/2004/07/EcmCloudWcf.Web"),  _
     System.SerializableAttribute()>  _
    Partial Public Class DS_License
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AppliedField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CompanyIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EncryptedLicenseField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LicenseIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LicenseNbrField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LicenseTextField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LicenseTypeCodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MachineIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PurchasedMachinesField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PurchasedUsersField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ServerNAMEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SqlInstanceNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SupportActiveField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SupportActiveDateField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SupportInactiveDateField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Applied() As String
            Get
                Return Me.AppliedField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AppliedField, value) <> true) Then
                    Me.AppliedField = value
                    Me.RaisePropertyChanged("Applied")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CompanyID() As String
            Get
                Return Me.CompanyIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CompanyIDField, value) <> true) Then
                    Me.CompanyIDField = value
                    Me.RaisePropertyChanged("CompanyID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EncryptedLicense() As String
            Get
                Return Me.EncryptedLicenseField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EncryptedLicenseField, value) <> true) Then
                    Me.EncryptedLicenseField = value
                    Me.RaisePropertyChanged("EncryptedLicense")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LicenseID() As String
            Get
                Return Me.LicenseIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LicenseIDField, value) <> true) Then
                    Me.LicenseIDField = value
                    Me.RaisePropertyChanged("LicenseID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LicenseNbr() As Integer
            Get
                Return Me.LicenseNbrField
            End Get
            Set
                If (Me.LicenseNbrField.Equals(value) <> true) Then
                    Me.LicenseNbrField = value
                    Me.RaisePropertyChanged("LicenseNbr")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LicenseText() As String
            Get
                Return Me.LicenseTextField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LicenseTextField, value) <> true) Then
                    Me.LicenseTextField = value
                    Me.RaisePropertyChanged("LicenseText")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LicenseTypeCode() As String
            Get
                Return Me.LicenseTypeCodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LicenseTypeCodeField, value) <> true) Then
                    Me.LicenseTypeCodeField = value
                    Me.RaisePropertyChanged("LicenseTypeCode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MachineID() As String
            Get
                Return Me.MachineIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MachineIDField, value) <> true) Then
                    Me.MachineIDField = value
                    Me.RaisePropertyChanged("MachineID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PurchasedMachines() As String
            Get
                Return Me.PurchasedMachinesField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PurchasedMachinesField, value) <> true) Then
                    Me.PurchasedMachinesField = value
                    Me.RaisePropertyChanged("PurchasedMachines")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PurchasedUsers() As String
            Get
                Return Me.PurchasedUsersField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PurchasedUsersField, value) <> true) Then
                    Me.PurchasedUsersField = value
                    Me.RaisePropertyChanged("PurchasedUsers")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ServerNAME() As String
            Get
                Return Me.ServerNAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ServerNAMEField, value) <> true) Then
                    Me.ServerNAMEField = value
                    Me.RaisePropertyChanged("ServerNAME")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SqlInstanceName() As String
            Get
                Return Me.SqlInstanceNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SqlInstanceNameField, value) <> true) Then
                    Me.SqlInstanceNameField = value
                    Me.RaisePropertyChanged("SqlInstanceName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SupportActive() As String
            Get
                Return Me.SupportActiveField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SupportActiveField, value) <> true) Then
                    Me.SupportActiveField = value
                    Me.RaisePropertyChanged("SupportActive")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SupportActiveDate() As String
            Get
                Return Me.SupportActiveDateField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SupportActiveDateField, value) <> true) Then
                    Me.SupportActiveDateField = value
                    Me.RaisePropertyChanged("SupportActiveDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SupportInactiveDate() As String
            Get
                Return Me.SupportInactiveDateField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SupportInactiveDateField, value) <> true) Then
                    Me.SupportInactiveDateField = value
                    Me.RaisePropertyChanged("SupportInactiveDate")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="DS_VUserGrid", [Namespace]:="http://schemas.datacontract.org/2004/07/EcmCloudWcf.Web"),  _
     System.SerializableAttribute()>  _
    Partial Public Class DS_VUserGrid
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdminField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ClientOnlyField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmailAddressField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private HiveActiveField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private HiveConnectionNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RepoSvrNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RowCreationDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RowLastModDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserLoginIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private isActiveField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Admin() As String
            Get
                Return Me.AdminField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdminField, value) <> true) Then
                    Me.AdminField = value
                    Me.RaisePropertyChanged("Admin")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ClientOnly() As Boolean
            Get
                Return Me.ClientOnlyField
            End Get
            Set
                If (Me.ClientOnlyField.Equals(value) <> true) Then
                    Me.ClientOnlyField = value
                    Me.RaisePropertyChanged("ClientOnly")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmailAddress() As String
            Get
                Return Me.EmailAddressField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EmailAddressField, value) <> true) Then
                    Me.EmailAddressField = value
                    Me.RaisePropertyChanged("EmailAddress")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property HiveActive() As Boolean
            Get
                Return Me.HiveActiveField
            End Get
            Set
                If (Me.HiveActiveField.Equals(value) <> true) Then
                    Me.HiveActiveField = value
                    Me.RaisePropertyChanged("HiveActive")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property HiveConnectionName() As String
            Get
                Return Me.HiveConnectionNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.HiveConnectionNameField, value) <> true) Then
                    Me.HiveConnectionNameField = value
                    Me.RaisePropertyChanged("HiveConnectionName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RepoSvrName() As String
            Get
                Return Me.RepoSvrNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RepoSvrNameField, value) <> true) Then
                    Me.RepoSvrNameField = value
                    Me.RaisePropertyChanged("RepoSvrName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RowCreationDate() As Date
            Get
                Return Me.RowCreationDateField
            End Get
            Set
                If (Me.RowCreationDateField.Equals(value) <> true) Then
                    Me.RowCreationDateField = value
                    Me.RaisePropertyChanged("RowCreationDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RowLastModDate() As Date
            Get
                Return Me.RowLastModDateField
            End Get
            Set
                If (Me.RowLastModDateField.Equals(value) <> true) Then
                    Me.RowLastModDateField = value
                    Me.RaisePropertyChanged("RowLastModDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserID() As String
            Get
                Return Me.UserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserIDField, value) <> true) Then
                    Me.UserIDField = value
                    Me.RaisePropertyChanged("UserID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserLoginID() As String
            Get
                Return Me.UserLoginIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserLoginIDField, value) <> true) Then
                    Me.UserLoginIDField = value
                    Me.RaisePropertyChanged("UserLoginID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserName() As String
            Get
                Return Me.UserNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserNameField, value) <> true) Then
                    Me.UserNameField = value
                    Me.RaisePropertyChanged("UserName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property isActive() As String
            Get
                Return Me.isActiveField
            End Get
            Set
                If (Object.ReferenceEquals(Me.isActiveField, value) <> true) Then
                    Me.isActiveField = value
                    Me.RaisePropertyChanged("isActive")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="DS_USERSEARCHSTATE", [Namespace]:="http://schemas.datacontract.org/2004/07/EcmCloudWcf.Web"),  _
     System.SerializableAttribute()>  _
    Partial Public Class DS_USERSEARCHSTATE
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private HiveActiveField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private HiveConnectionNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ParmDataTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ParmNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ParmValField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RepoSvrNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RowCreationDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RowLastModDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RowNbrField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ScreenNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SearchIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserIDField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property HiveActive() As Boolean
            Get
                Return Me.HiveActiveField
            End Get
            Set
                If (Me.HiveActiveField.Equals(value) <> true) Then
                    Me.HiveActiveField = value
                    Me.RaisePropertyChanged("HiveActive")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property HiveConnectionName() As String
            Get
                Return Me.HiveConnectionNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.HiveConnectionNameField, value) <> true) Then
                    Me.HiveConnectionNameField = value
                    Me.RaisePropertyChanged("HiveConnectionName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ParmDataType() As String
            Get
                Return Me.ParmDataTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ParmDataTypeField, value) <> true) Then
                    Me.ParmDataTypeField = value
                    Me.RaisePropertyChanged("ParmDataType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ParmName() As String
            Get
                Return Me.ParmNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ParmNameField, value) <> true) Then
                    Me.ParmNameField = value
                    Me.RaisePropertyChanged("ParmName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ParmVal() As String
            Get
                Return Me.ParmValField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ParmValField, value) <> true) Then
                    Me.ParmValField = value
                    Me.RaisePropertyChanged("ParmVal")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RepoSvrName() As String
            Get
                Return Me.RepoSvrNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RepoSvrNameField, value) <> true) Then
                    Me.RepoSvrNameField = value
                    Me.RaisePropertyChanged("RepoSvrName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RowCreationDate() As Date
            Get
                Return Me.RowCreationDateField
            End Get
            Set
                If (Me.RowCreationDateField.Equals(value) <> true) Then
                    Me.RowCreationDateField = value
                    Me.RaisePropertyChanged("RowCreationDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RowLastModDate() As Date
            Get
                Return Me.RowLastModDateField
            End Get
            Set
                If (Me.RowLastModDateField.Equals(value) <> true) Then
                    Me.RowLastModDateField = value
                    Me.RaisePropertyChanged("RowLastModDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RowNbr() As Integer
            Get
                Return Me.RowNbrField
            End Get
            Set
                If (Me.RowNbrField.Equals(value) <> true) Then
                    Me.RowNbrField = value
                    Me.RaisePropertyChanged("RowNbr")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ScreenName() As String
            Get
                Return Me.ScreenNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ScreenNameField, value) <> true) Then
                    Me.ScreenNameField = value
                    Me.RaisePropertyChanged("ScreenName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SearchID() As Integer
            Get
                Return Me.SearchIDField
            End Get
            Set
                If (Me.SearchIDField.Equals(value) <> true) Then
                    Me.SearchIDField = value
                    Me.RaisePropertyChanged("SearchID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserID() As String
            Get
                Return Me.UserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserIDField, value) <> true) Then
                    Me.UserIDField = value
                    Me.RaisePropertyChanged("UserID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="DS_SearchTerms", [Namespace]:="http://schemas.datacontract.org/2004/07/EcmCloudWcf.Web"),  _
     System.SerializableAttribute()>  _
    Partial Public Class DS_SearchTerms
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SearchTypeCodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TermField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TermDatatypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TermValField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SearchTypeCode() As String
            Get
                Return Me.SearchTypeCodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SearchTypeCodeField, value) <> true) Then
                    Me.SearchTypeCodeField = value
                    Me.RaisePropertyChanged("SearchTypeCode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Term() As String
            Get
                Return Me.TermField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TermField, value) <> true) Then
                    Me.TermField = value
                    Me.RaisePropertyChanged("Term")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TermDatatype() As String
            Get
                Return Me.TermDatatypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TermDatatypeField, value) <> true) Then
                    Me.TermDatatypeField = value
                    Me.RaisePropertyChanged("TermDatatype")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TermVal() As String
            Get
                Return Me.TermValField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TermValField, value) <> true) Then
                    Me.TermValField = value
                    Me.RaisePropertyChanged("TermVal")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="DS_ListOfStrings02", [Namespace]:="http://schemas.datacontract.org/2004/07/EcmCloudWcf.Web"),  _
     System.SerializableAttribute()>  _
    Partial Public Class DS_ListOfStrings02
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private strItemField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property strItem() As String
            Get
                Return Me.strItemField
            End Get
            Set
                If (Object.ReferenceEquals(Me.strItemField, value) <> true) Then
                    Me.strItemField = value
                    Me.RaisePropertyChanged("strItem")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="DS_ListOfStrings03", [Namespace]:="http://schemas.datacontract.org/2004/07/EcmCloudWcf.Web"),  _
     System.SerializableAttribute()>  _
    Partial Public Class DS_ListOfStrings03
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private strItemField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property strItem() As String
            Get
                Return Me.strItemField
            End Get
            Set
                If (Object.ReferenceEquals(Me.strItemField, value) <> true) Then
                    Me.strItemField = value
                    Me.RaisePropertyChanged("strItem")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="DS_ListOfStrings04", [Namespace]:="http://schemas.datacontract.org/2004/07/EcmCloudWcf.Web"),  _
     System.SerializableAttribute()>  _
    Partial Public Class DS_ListOfStrings04
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private strItemField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property strItem() As String
            Get
                Return Me.strItemField
            End Get
            Set
                If (Object.ReferenceEquals(Me.strItemField, value) <> true) Then
                    Me.strItemField = value
                    Me.RaisePropertyChanged("strItem")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="SVCSearch.IService1")>  _
    Public Interface IService1
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/saveSearchState", ReplyAction:="http://tempuri.org/IService1/saveSearchStateResponse")>  _
        Function saveSearchState(ByVal request As SVCSearch.saveSearchStateRequest) As SVCSearch.saveSearchStateResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/saveSearchState", ReplyAction:="http://tempuri.org/IService1/saveSearchStateResponse")>  _
        Function saveSearchStateAsync(ByVal request As SVCSearch.saveSearchStateRequest) As System.Threading.Tasks.Task(Of SVCSearch.saveSearchStateResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getScreenState", ReplyAction:="http://tempuri.org/IService1/getScreenStateResponse")>  _
        Function getScreenState(ByVal request As SVCSearch.getScreenStateRequest) As SVCSearch.getScreenStateResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getScreenState", ReplyAction:="http://tempuri.org/IService1/getScreenStateResponse")>  _
        Function getScreenStateAsync(ByVal request As SVCSearch.getScreenStateRequest) As System.Threading.Tasks.Task(Of SVCSearch.getScreenStateResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getGridLayout", ReplyAction:="http://tempuri.org/IService1/getGridLayoutResponse")>  _
        Function getGridLayout(ByVal request As SVCSearch.getGridLayoutRequest) As SVCSearch.getGridLayoutResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getGridLayout", ReplyAction:="http://tempuri.org/IService1/getGridLayoutResponse")>  _
        Function getGridLayoutAsync(ByVal request As SVCSearch.getGridLayoutRequest) As System.Threading.Tasks.Task(Of SVCSearch.getGridLayoutResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/saveGridLayout", ReplyAction:="http://tempuri.org/IService1/saveGridLayoutResponse")>  _
        Function saveGridLayout(ByVal request As SVCSearch.saveGridLayoutRequest) As SVCSearch.saveGridLayoutResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/saveGridLayout", ReplyAction:="http://tempuri.org/IService1/saveGridLayoutResponse")>  _
        Function saveGridLayoutAsync(ByVal request As SVCSearch.saveGridLayoutRequest) As System.Threading.Tasks.Task(Of SVCSearch.saveGridLayoutResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/saveScreenState", ReplyAction:="http://tempuri.org/IService1/saveScreenStateResponse")>  _
        Function saveScreenState(ByVal request As SVCSearch.saveScreenStateRequest) As SVCSearch.saveScreenStateResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/saveScreenState", ReplyAction:="http://tempuri.org/IService1/saveScreenStateResponse")>  _
        Function saveScreenStateAsync(ByVal request As SVCSearch.saveScreenStateRequest) As System.Threading.Tasks.Task(Of SVCSearch.saveScreenStateResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getUserParms", ReplyAction:="http://tempuri.org/IService1/getUserParmsResponse")>  _
        Function getUserParms(ByVal request As SVCSearch.getUserParmsRequest) As SVCSearch.getUserParmsResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getUserParms", ReplyAction:="http://tempuri.org/IService1/getUserParmsResponse")>  _
        Function getUserParmsAsync(ByVal request As SVCSearch.getUserParmsRequest) As System.Threading.Tasks.Task(Of SVCSearch.getUserParmsResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ParseLicDictionary", ReplyAction:="http://tempuri.org/IService1/ParseLicDictionaryResponse")>  _
        Function ParseLicDictionary(ByVal request As SVCSearch.ParseLicDictionaryRequest) As SVCSearch.ParseLicDictionaryResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ParseLicDictionary", ReplyAction:="http://tempuri.org/IService1/ParseLicDictionaryResponse")>  _
        Function ParseLicDictionaryAsync(ByVal request As SVCSearch.ParseLicDictionaryRequest) As System.Threading.Tasks.Task(Of SVCSearch.ParseLicDictionaryResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/LicenseType", ReplyAction:="http://tempuri.org/IService1/LicenseTypeResponse")>  _
        Function LicenseType(ByVal request As SVCSearch.LicenseTypeRequest) As SVCSearch.LicenseTypeResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/LicenseType", ReplyAction:="http://tempuri.org/IService1/LicenseTypeResponse")>  _
        Function LicenseTypeAsync(ByVal request As SVCSearch.LicenseTypeRequest) As System.Threading.Tasks.Task(Of SVCSearch.LicenseTypeResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetNbrUsers", ReplyAction:="http://tempuri.org/IService1/GetNbrUsersResponse")>  _
        Function GetNbrUsers(ByVal request As SVCSearch.GetNbrUsersRequest) As SVCSearch.GetNbrUsersResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetNbrUsers", ReplyAction:="http://tempuri.org/IService1/GetNbrUsersResponse")>  _
        Function GetNbrUsersAsync(ByVal request As SVCSearch.GetNbrUsersRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetNbrUsersResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/isLease", ReplyAction:="http://tempuri.org/IService1/isLeaseResponse")>  _
        Function isLease(ByVal request As SVCSearch.isLeaseRequest) As SVCSearch.isLeaseResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/isLease", ReplyAction:="http://tempuri.org/IService1/isLeaseResponse")>  _
        Function isLeaseAsync(ByVal request As SVCSearch.isLeaseRequest) As System.Threading.Tasks.Task(Of SVCSearch.isLeaseResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getMaxClients", ReplyAction:="http://tempuri.org/IService1/getMaxClientsResponse")>  _
        Function getMaxClients(ByVal request As SVCSearch.getMaxClientsRequest) As SVCSearch.getMaxClientsResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getMaxClients", ReplyAction:="http://tempuri.org/IService1/getMaxClientsResponse")>  _
        Function getMaxClientsAsync(ByVal request As SVCSearch.getMaxClientsRequest) As System.Threading.Tasks.Task(Of SVCSearch.getMaxClientsResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetUserHostName", ReplyAction:="http://tempuri.org/IService1/GetUserHostNameResponse")>  _
        Function GetUserHostName(ByVal request As SVCSearch.GetUserHostNameRequest) As SVCSearch.GetUserHostNameResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetUserHostName", ReplyAction:="http://tempuri.org/IService1/GetUserHostNameResponse")>  _
        Function GetUserHostNameAsync(ByVal request As SVCSearch.GetUserHostNameRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetUserHostNameResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetUserHostAddress", ReplyAction:="http://tempuri.org/IService1/GetUserHostAddressResponse")>  _
        Function GetUserHostAddress(ByVal request As SVCSearch.GetUserHostAddressRequest) As SVCSearch.GetUserHostAddressResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetUserHostAddress", ReplyAction:="http://tempuri.org/IService1/GetUserHostAddressResponse")>  _
        Function GetUserHostAddressAsync(ByVal request As SVCSearch.GetUserHostAddressRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetUserHostAddressResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getUserGuidID", ReplyAction:="http://tempuri.org/IService1/getUserGuidIDResponse")>  _
        Function getUserGuidID(ByVal request As SVCSearch.getUserGuidIDRequest) As SVCSearch.getUserGuidIDResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getUserGuidID", ReplyAction:="http://tempuri.org/IService1/getUserGuidIDResponse")>  _
        Function getUserGuidIDAsync(ByVal request As SVCSearch.getUserGuidIDRequest) As System.Threading.Tasks.Task(Of SVCSearch.getUserGuidIDResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ProcessDates", ReplyAction:="http://tempuri.org/IService1/ProcessDatesResponse")>  _
        Function ProcessDates(ByVal request As SVCSearch.ProcessDatesRequest) As SVCSearch.ProcessDatesResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ProcessDates", ReplyAction:="http://tempuri.org/IService1/ProcessDatesResponse")>  _
        Function ProcessDatesAsync(ByVal request As SVCSearch.ProcessDatesRequest) As System.Threading.Tasks.Task(Of SVCSearch.ProcessDatesResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetNbrMachineAll", ReplyAction:="http://tempuri.org/IService1/GetNbrMachineAllResponse")>  _
        Function GetNbrMachineAll(ByVal request As SVCSearch.GetNbrMachineAllRequest) As SVCSearch.GetNbrMachineAllResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetNbrMachineAll", ReplyAction:="http://tempuri.org/IService1/GetNbrMachineAllResponse")>  _
        Function GetNbrMachineAllAsync(ByVal request As SVCSearch.GetNbrMachineAllRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetNbrMachineAllResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetNbrMachine", ReplyAction:="http://tempuri.org/IService1/GetNbrMachineResponse")>  _
        Function GetNbrMachine(ByVal request As SVCSearch.GetNbrMachineRequest) As SVCSearch.GetNbrMachineResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetNbrMachine", ReplyAction:="http://tempuri.org/IService1/GetNbrMachineResponse")>  _
        Function GetNbrMachineAsync(ByVal request As SVCSearch.GetNbrMachineRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetNbrMachineResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/isLicenseLocatedOnAssignedMachine", ReplyAction:="http://tempuri.org/IService1/isLicenseLocatedOnAssignedMachineResponse")>  _
        Function isLicenseLocatedOnAssignedMachine(ByVal request As SVCSearch.isLicenseLocatedOnAssignedMachineRequest) As SVCSearch.isLicenseLocatedOnAssignedMachineResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/isLicenseLocatedOnAssignedMachine", ReplyAction:="http://tempuri.org/IService1/isLicenseLocatedOnAssignedMachineResponse")>  _
        Function isLicenseLocatedOnAssignedMachineAsync(ByVal request As SVCSearch.isLicenseLocatedOnAssignedMachineRequest) As System.Threading.Tasks.Task(Of SVCSearch.isLicenseLocatedOnAssignedMachineResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetXrt", ReplyAction:="http://tempuri.org/IService1/GetXrtResponse")>  _
        Function GetXrt(ByVal request As SVCSearch.GetXrtRequest) As SVCSearch.GetXrtResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetXrt", ReplyAction:="http://tempuri.org/IService1/GetXrtResponse")>  _
        Function GetXrtAsync(ByVal request As SVCSearch.GetXrtRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetXrtResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSqlServerVersion", ReplyAction:="http://tempuri.org/IService1/getSqlServerVersionResponse")>  _
        Function getSqlServerVersion(ByVal request As SVCSearch.getSqlServerVersionRequest) As SVCSearch.getSqlServerVersionResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSqlServerVersion", ReplyAction:="http://tempuri.org/IService1/getSqlServerVersionResponse")>  _
        Function getSqlServerVersionAsync(ByVal request As SVCSearch.getSqlServerVersionRequest) As System.Threading.Tasks.Task(Of SVCSearch.getSqlServerVersionResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/RecordGrowth", ReplyAction:="http://tempuri.org/IService1/RecordGrowthResponse")>  _
        Function RecordGrowth(ByVal request As SVCSearch.RecordGrowthRequest) As SVCSearch.RecordGrowthResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/RecordGrowth", ReplyAction:="http://tempuri.org/IService1/RecordGrowthResponse")>  _
        Function RecordGrowthAsync(ByVal request As SVCSearch.RecordGrowthRequest) As System.Threading.Tasks.Task(Of SVCSearch.RecordGrowthResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ParseLic", ReplyAction:="http://tempuri.org/IService1/ParseLicResponse")>  _
        Function ParseLic(ByVal request As SVCSearch.ParseLicRequest) As SVCSearch.ParseLicResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ParseLic", ReplyAction:="http://tempuri.org/IService1/ParseLicResponse")>  _
        Function ParseLicAsync(ByVal request As SVCSearch.ParseLicRequest) As System.Threading.Tasks.Task(Of SVCSearch.ParseLicResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetLoggedinUserName", ReplyAction:="http://tempuri.org/IService1/GetLoggedinUserNameResponse")>  _
        Function GetLoggedinUserName(ByVal request As SVCSearch.GetLoggedinUserNameRequest) As SVCSearch.GetLoggedinUserNameResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetLoggedinUserName", ReplyAction:="http://tempuri.org/IService1/GetLoggedinUserNameResponse")>  _
        Function GetLoggedinUserNameAsync(ByVal request As SVCSearch.GetLoggedinUserNameRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetLoggedinUserNameResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getDBSIZEMB", ReplyAction:="http://tempuri.org/IService1/getDBSIZEMBResponse")>  _
        Function getDBSIZEMB(ByVal request As SVCSearch.getDBSIZEMBRequest) As SVCSearch.getDBSIZEMBResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getDBSIZEMB", ReplyAction:="http://tempuri.org/IService1/getDBSIZEMBResponse")>  _
        Function getDBSIZEMBAsync(ByVal request As SVCSearch.getDBSIZEMBRequest) As System.Threading.Tasks.Task(Of SVCSearch.getDBSIZEMBResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/resetMissingEmailIds", ReplyAction:="http://tempuri.org/IService1/resetMissingEmailIdsResponse")>  _
        Function resetMissingEmailIds(ByVal request As SVCSearch.resetMissingEmailIdsRequest) As SVCSearch.resetMissingEmailIdsResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/resetMissingEmailIds", ReplyAction:="http://tempuri.org/IService1/resetMissingEmailIdsResponse")>  _
        Function resetMissingEmailIdsAsync(ByVal request As SVCSearch.resetMissingEmailIdsRequest) As System.Threading.Tasks.Task(Of SVCSearch.resetMissingEmailIdsResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/UserParmInsertUpdate", ReplyAction:="http://tempuri.org/IService1/UserParmInsertUpdateResponse")>  _
        Function UserParmInsertUpdate(ByVal request As SVCSearch.UserParmInsertUpdateRequest) As SVCSearch.UserParmInsertUpdateResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/UserParmInsertUpdate", ReplyAction:="http://tempuri.org/IService1/UserParmInsertUpdateResponse")>  _
        Function UserParmInsertUpdateAsync(ByVal request As SVCSearch.UserParmInsertUpdateRequest) As System.Threading.Tasks.Task(Of SVCSearch.UserParmInsertUpdateResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/validateLogin", ReplyAction:="http://tempuri.org/IService1/validateLoginResponse")>  _
        Function validateLogin(ByVal request As SVCSearch.validateLoginRequest) As SVCSearch.validateLoginResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/validateLogin", ReplyAction:="http://tempuri.org/IService1/validateLoginResponse")>  _
        Function validateLoginAsync(ByVal request As SVCSearch.validateLoginRequest) As System.Threading.Tasks.Task(Of SVCSearch.validateLoginResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getLoggedInUser", ReplyAction:="http://tempuri.org/IService1/getLoggedInUserResponse")>  _
        Function getLoggedInUser(ByVal request As SVCSearch.getLoggedInUserRequest) As SVCSearch.getLoggedInUserResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getLoggedInUser", ReplyAction:="http://tempuri.org/IService1/getLoggedInUserResponse")>  _
        Function getLoggedInUserAsync(ByVal request As SVCSearch.getLoggedInUserRequest) As System.Threading.Tasks.Task(Of SVCSearch.getLoggedInUserResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getAttachedMachineName", ReplyAction:="http://tempuri.org/IService1/getAttachedMachineNameResponse")>  _
        Function getAttachedMachineName(ByVal request As SVCSearch.getAttachedMachineNameRequest) As SVCSearch.getAttachedMachineNameResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getAttachedMachineName", ReplyAction:="http://tempuri.org/IService1/getAttachedMachineNameResponse")>  _
        Function getAttachedMachineNameAsync(ByVal request As SVCSearch.getAttachedMachineNameRequest) As System.Threading.Tasks.Task(Of SVCSearch.getAttachedMachineNameResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getServerInstanceName", ReplyAction:="http://tempuri.org/IService1/getServerInstanceNameResponse")>  _
        Function getServerInstanceName(ByVal request As SVCSearch.getServerInstanceNameRequest) As SVCSearch.getServerInstanceNameResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getServerInstanceName", ReplyAction:="http://tempuri.org/IService1/getServerInstanceNameResponse")>  _
        Function getServerInstanceNameAsync(ByVal request As SVCSearch.getServerInstanceNameRequest) As System.Threading.Tasks.Task(Of SVCSearch.getServerInstanceNameResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getServerMachineName", ReplyAction:="http://tempuri.org/IService1/getServerMachineNameResponse")>  _
        Function getServerMachineName(ByVal request As SVCSearch.getServerMachineNameRequest) As SVCSearch.getServerMachineNameResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getServerMachineName", ReplyAction:="http://tempuri.org/IService1/getServerMachineNameResponse")>  _
        Function getServerMachineNameAsync(ByVal request As SVCSearch.getServerMachineNameRequest) As System.Threading.Tasks.Task(Of SVCSearch.getServerMachineNameResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSystemParm", ReplyAction:="http://tempuri.org/IService1/getSystemParmResponse")>  _
        Function getSystemParm(ByVal request As SVCSearch.getSystemParmRequest) As SVCSearch.getSystemParmResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSystemParm", ReplyAction:="http://tempuri.org/IService1/getSystemParmResponse")>  _
        Function getSystemParmAsync(ByVal request As SVCSearch.getSystemParmRequest) As System.Threading.Tasks.Task(Of SVCSearch.getSystemParmResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSynonyms", ReplyAction:="http://tempuri.org/IService1/getSynonymsResponse")>  _
        Function getSynonyms(ByVal request As SVCSearch.getSynonymsRequest) As SVCSearch.getSynonymsResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSynonyms", ReplyAction:="http://tempuri.org/IService1/getSynonymsResponse")>  _
        Function getSynonymsAsync(ByVal request As SVCSearch.getSynonymsRequest) As System.Threading.Tasks.Task(Of SVCSearch.getSynonymsResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getThesaurusID", ReplyAction:="http://tempuri.org/IService1/getThesaurusIDResponse")>  _
        Function getThesaurusID(ByVal request As SVCSearch.getThesaurusIDRequest) As SVCSearch.getThesaurusIDResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getThesaurusID", ReplyAction:="http://tempuri.org/IService1/getThesaurusIDResponse")>  _
        Function getThesaurusIDAsync(ByVal request As SVCSearch.getThesaurusIDRequest) As System.Threading.Tasks.Task(Of SVCSearch.getThesaurusIDResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/iCountContent", ReplyAction:="http://tempuri.org/IService1/iCountContentResponse")>  _
        Function iCountContent(ByVal request As SVCSearch.iCountContentRequest) As SVCSearch.iCountContentResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/iCountContent", ReplyAction:="http://tempuri.org/IService1/iCountContentResponse")>  _
        Function iCountContentAsync(ByVal request As SVCSearch.iCountContentRequest) As System.Threading.Tasks.Task(Of SVCSearch.iCountContentResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getDatasourceParm", ReplyAction:="http://tempuri.org/IService1/getDatasourceParmResponse")>  _
        Function getDatasourceParm(ByVal request As SVCSearch.getDatasourceParmRequest) As SVCSearch.getDatasourceParmResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getDatasourceParm", ReplyAction:="http://tempuri.org/IService1/getDatasourceParmResponse")>  _
        Function getDatasourceParmAsync(ByVal request As SVCSearch.getDatasourceParmRequest) As System.Threading.Tasks.Task(Of SVCSearch.getDatasourceParmResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/SaveRunParm", ReplyAction:="http://tempuri.org/IService1/SaveRunParmResponse")>  _
        Function SaveRunParm(ByVal request As SVCSearch.SaveRunParmRequest) As SVCSearch.SaveRunParmResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/SaveRunParm", ReplyAction:="http://tempuri.org/IService1/SaveRunParmResponse")>  _
        Function SaveRunParmAsync(ByVal request As SVCSearch.SaveRunParmRequest) As System.Threading.Tasks.Task(Of SVCSearch.SaveRunParmResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/iGetRowCount", ReplyAction:="http://tempuri.org/IService1/iGetRowCountResponse")>  _
        Function iGetRowCount(ByVal request As SVCSearch.iGetRowCountRequest) As SVCSearch.iGetRowCountResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/iGetRowCount", ReplyAction:="http://tempuri.org/IService1/iGetRowCountResponse")>  _
        Function iGetRowCountAsync(ByVal request As SVCSearch.iGetRowCountRequest) As System.Threading.Tasks.Task(Of SVCSearch.iGetRowCountResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ZeroizeGlobalSearch", ReplyAction:="http://tempuri.org/IService1/ZeroizeGlobalSearchResponse")>  _
        Function ZeroizeGlobalSearch(ByVal request As SVCSearch.ZeroizeGlobalSearchRequest) As SVCSearch.ZeroizeGlobalSearchResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ZeroizeGlobalSearch", ReplyAction:="http://tempuri.org/IService1/ZeroizeGlobalSearchResponse")>  _
        Function ZeroizeGlobalSearchAsync(ByVal request As SVCSearch.ZeroizeGlobalSearchRequest) As System.Threading.Tasks.Task(Of SVCSearch.ZeroizeGlobalSearchResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/updateIp", ReplyAction:="http://tempuri.org/IService1/updateIpResponse")>  _
        Function updateIp(ByVal request As SVCSearch.updateIpRequest) As SVCSearch.updateIpResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/updateIp", ReplyAction:="http://tempuri.org/IService1/updateIpResponse")>  _
        Function updateIpAsync(ByVal request As SVCSearch.updateIpRequest) As System.Threading.Tasks.Task(Of SVCSearch.updateIpResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateSourceGridWithWeights", ReplyAction:="http://tempuri.org/IService1/PopulateSourceGridWithWeightsResponse")>  _
        Function PopulateSourceGridWithWeights(ByVal request As SVCSearch.PopulateSourceGridWithWeightsRequest) As SVCSearch.PopulateSourceGridWithWeightsResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateSourceGridWithWeights", ReplyAction:="http://tempuri.org/IService1/PopulateSourceGridWithWeightsResponse")>  _
        Function PopulateSourceGridWithWeightsAsync(ByVal request As SVCSearch.PopulateSourceGridWithWeightsRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateSourceGridWithWeightsResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateSourceGridNoWeights", ReplyAction:="http://tempuri.org/IService1/PopulateSourceGridNoWeightsResponse")>  _
        Function PopulateSourceGridNoWeights(ByVal request As SVCSearch.PopulateSourceGridNoWeightsRequest) As SVCSearch.PopulateSourceGridNoWeightsResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateSourceGridNoWeights", ReplyAction:="http://tempuri.org/IService1/PopulateSourceGridNoWeightsResponse")>  _
        Function PopulateSourceGridNoWeightsAsync(ByVal request As SVCSearch.PopulateSourceGridNoWeightsRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateSourceGridNoWeightsResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateEmailGridWithNoWeights", ReplyAction:="http://tempuri.org/IService1/PopulateEmailGridWithNoWeightsResponse")>  _
        Function PopulateEmailGridWithNoWeights(ByVal request As SVCSearch.PopulateEmailGridWithNoWeightsRequest) As SVCSearch.PopulateEmailGridWithNoWeightsResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateEmailGridWithNoWeights", ReplyAction:="http://tempuri.org/IService1/PopulateEmailGridWithNoWeightsResponse")>  _
        Function PopulateEmailGridWithNoWeightsAsync(ByVal request As SVCSearch.PopulateEmailGridWithNoWeightsRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateEmailGridWithNoWeightsResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateEmailGridWithWeights", ReplyAction:="http://tempuri.org/IService1/PopulateEmailGridWithWeightsResponse")>  _
        Function PopulateEmailGridWithWeights(ByVal request As SVCSearch.PopulateEmailGridWithWeightsRequest) As SVCSearch.PopulateEmailGridWithWeightsResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateEmailGridWithWeights", ReplyAction:="http://tempuri.org/IService1/PopulateEmailGridWithWeightsResponse")>  _
        Function PopulateEmailGridWithWeightsAsync(ByVal request As SVCSearch.PopulateEmailGridWithWeightsRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateEmailGridWithWeightsResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/LoadUserSearchHistory", ReplyAction:="http://tempuri.org/IService1/LoadUserSearchHistoryResponse")>  _
        Function LoadUserSearchHistory(ByVal request As SVCSearch.LoadUserSearchHistoryRequest) As SVCSearch.LoadUserSearchHistoryResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/LoadUserSearchHistory", ReplyAction:="http://tempuri.org/IService1/LoadUserSearchHistoryResponse")>  _
        Function LoadUserSearchHistoryAsync(ByVal request As SVCSearch.LoadUserSearchHistoryRequest) As System.Threading.Tasks.Task(Of SVCSearch.LoadUserSearchHistoryResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getAttachmentWeights", ReplyAction:="http://tempuri.org/IService1/getAttachmentWeightsResponse")>  _
        Function getAttachmentWeights(ByVal request As SVCSearch.getAttachmentWeightsRequest) As SVCSearch.getAttachmentWeightsResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getAttachmentWeights", ReplyAction:="http://tempuri.org/IService1/getAttachmentWeightsResponse")>  _
        Function getAttachmentWeightsAsync(ByVal request As SVCSearch.getAttachmentWeightsRequest) As System.Threading.Tasks.Task(Of SVCSearch.getAttachmentWeightsResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExecuteSqlNewConn1", ReplyAction:="http://tempuri.org/IService1/ExecuteSqlNewConn1Response")>  _
        Function ExecuteSqlNewConn1(ByVal request As SVCSearch.ExecuteSqlNewConn1Request) As SVCSearch.ExecuteSqlNewConn1Response
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExecuteSqlNewConn1", ReplyAction:="http://tempuri.org/IService1/ExecuteSqlNewConn1Response")>  _
        Function ExecuteSqlNewConn1Async(ByVal request As SVCSearch.ExecuteSqlNewConn1Request) As System.Threading.Tasks.Task(Of SVCSearch.ExecuteSqlNewConn1Response)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExecuteSqlNewConn2", ReplyAction:="http://tempuri.org/IService1/ExecuteSqlNewConn2Response")>  _
        Function ExecuteSqlNewConn2(ByVal request As SVCSearch.ExecuteSqlNewConn2Request) As SVCSearch.ExecuteSqlNewConn2Response
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExecuteSqlNewConn2", ReplyAction:="http://tempuri.org/IService1/ExecuteSqlNewConn2Response")>  _
        Function ExecuteSqlNewConn2Async(ByVal request As SVCSearch.ExecuteSqlNewConn2Request) As System.Threading.Tasks.Task(Of SVCSearch.ExecuteSqlNewConn2Response)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExecuteSqlNewConn3", ReplyAction:="http://tempuri.org/IService1/ExecuteSqlNewConn3Response")>  _
        Function ExecuteSqlNewConn3(ByVal request As SVCSearch.ExecuteSqlNewConn3Request) As SVCSearch.ExecuteSqlNewConn3Response
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExecuteSqlNewConn3", ReplyAction:="http://tempuri.org/IService1/ExecuteSqlNewConn3Response")>  _
        Function ExecuteSqlNewConn3Async(ByVal request As SVCSearch.ExecuteSqlNewConn3Request) As System.Threading.Tasks.Task(Of SVCSearch.ExecuteSqlNewConn3Response)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExecuteSqlNewConn4", ReplyAction:="http://tempuri.org/IService1/ExecuteSqlNewConn4Response")>  _
        Function ExecuteSqlNewConn4(ByVal request As SVCSearch.ExecuteSqlNewConn4Request) As SVCSearch.ExecuteSqlNewConn4Response
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExecuteSqlNewConn4", ReplyAction:="http://tempuri.org/IService1/ExecuteSqlNewConn4Response")>  _
        Function ExecuteSqlNewConn4Async(ByVal request As SVCSearch.ExecuteSqlNewConn4Request) As System.Threading.Tasks.Task(Of SVCSearch.ExecuteSqlNewConn4Response)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExecuteSqlNewConn5", ReplyAction:="http://tempuri.org/IService1/ExecuteSqlNewConn5Response")>  _
        Function ExecuteSqlNewConn5(ByVal request As SVCSearch.ExecuteSqlNewConn5Request) As SVCSearch.ExecuteSqlNewConn5Response
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExecuteSqlNewConn5", ReplyAction:="http://tempuri.org/IService1/ExecuteSqlNewConn5Response")>  _
        Function ExecuteSqlNewConn5Async(ByVal request As SVCSearch.ExecuteSqlNewConn5Request) As System.Threading.Tasks.Task(Of SVCSearch.ExecuteSqlNewConn5Response)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExecuteSqlNewConnSecure", ReplyAction:="http://tempuri.org/IService1/ExecuteSqlNewConnSecureResponse")>  _
        Function ExecuteSqlNewConnSecure(ByVal request As SVCSearch.ExecuteSqlNewConnSecureRequest) As SVCSearch.ExecuteSqlNewConnSecureResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExecuteSqlNewConnSecure", ReplyAction:="http://tempuri.org/IService1/ExecuteSqlNewConnSecureResponse")>  _
        Function ExecuteSqlNewConnSecureAsync(ByVal request As SVCSearch.ExecuteSqlNewConnSecureRequest) As System.Threading.Tasks.Task(Of SVCSearch.ExecuteSqlNewConnSecureResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetParmValue", ReplyAction:="http://tempuri.org/IService1/GetParmValueResponse")>  _
        Function GetParmValue(ByVal request As SVCSearch.GetParmValueRequest) As SVCSearch.GetParmValueResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetParmValue", ReplyAction:="http://tempuri.org/IService1/GetParmValueResponse")>  _
        Function GetParmValueAsync(ByVal request As SVCSearch.GetParmValueRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetParmValueResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/DBisGlobalSearcher", ReplyAction:="http://tempuri.org/IService1/DBisGlobalSearcherResponse")>  _
        Function DBisGlobalSearcher(ByVal request As SVCSearch.DBisGlobalSearcherRequest) As SVCSearch.DBisGlobalSearcherResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/DBisGlobalSearcher", ReplyAction:="http://tempuri.org/IService1/DBisGlobalSearcherResponse")>  _
        Function DBisGlobalSearcherAsync(ByVal request As SVCSearch.DBisGlobalSearcherRequest) As System.Threading.Tasks.Task(Of SVCSearch.DBisGlobalSearcherResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/DBisAdmin", ReplyAction:="http://tempuri.org/IService1/DBisAdminResponse")>  _
        Function DBisAdmin(ByVal request As SVCSearch.DBisAdminRequest) As SVCSearch.DBisAdminResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/DBisAdmin", ReplyAction:="http://tempuri.org/IService1/DBisAdminResponse")>  _
        Function DBisAdminAsync(ByVal request As SVCSearch.DBisAdminRequest) As System.Threading.Tasks.Task(Of SVCSearch.DBisAdminResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getUserParm", ReplyAction:="http://tempuri.org/IService1/getUserParmResponse")>  _
        Function getUserParm(ByVal request As SVCSearch.getUserParmRequest) As SVCSearch.getUserParmResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getUserParm", ReplyAction:="http://tempuri.org/IService1/getUserParmResponse")>  _
        Function getUserParmAsync(ByVal request As SVCSearch.getUserParmRequest) As System.Threading.Tasks.Task(Of SVCSearch.getUserParmResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/RemoveUnwantedCharacters", ReplyAction:="http://tempuri.org/IService1/RemoveUnwantedCharactersResponse")>  _
        Function RemoveUnwantedCharacters(ByVal request As SVCSearch.RemoveUnwantedCharactersRequest) As SVCSearch.RemoveUnwantedCharactersResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/RemoveUnwantedCharacters", ReplyAction:="http://tempuri.org/IService1/RemoveUnwantedCharactersResponse")>  _
        Function RemoveUnwantedCharactersAsync(ByVal request As SVCSearch.RemoveUnwantedCharactersRequest) As System.Threading.Tasks.Task(Of SVCSearch.RemoveUnwantedCharactersResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetMachineIP", ReplyAction:="http://tempuri.org/IService1/GetMachineIPResponse")>  _
        Function GetMachineIP(ByVal request As SVCSearch.GetMachineIPRequest) As SVCSearch.GetMachineIPResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetMachineIP", ReplyAction:="http://tempuri.org/IService1/GetMachineIPResponse")>  _
        Function GetMachineIPAsync(ByVal request As SVCSearch.GetMachineIPRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetMachineIPResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getClientLicenses", ReplyAction:="http://tempuri.org/IService1/getClientLicensesResponse")>  _
        Function getClientLicenses(ByVal request As SVCSearch.getClientLicensesRequest) As SVCSearch.getClientLicensesResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getClientLicenses", ReplyAction:="http://tempuri.org/IService1/getClientLicensesResponse")>  _
        Function getClientLicensesAsync(ByVal request As SVCSearch.getClientLicensesRequest) As System.Threading.Tasks.Task(Of SVCSearch.getClientLicensesResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateUserGrid", ReplyAction:="http://tempuri.org/IService1/PopulateUserGridResponse")>  _
        Function PopulateUserGrid(ByVal request As SVCSearch.PopulateUserGridRequest) As SVCSearch.PopulateUserGridResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateUserGrid", ReplyAction:="http://tempuri.org/IService1/PopulateUserGridResponse")>  _
        Function PopulateUserGridAsync(ByVal request As SVCSearch.PopulateUserGridRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateUserGridResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getGroupUsers", ReplyAction:="http://tempuri.org/IService1/getGroupUsersResponse"),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, String))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, Date))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(String())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, Integer))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(Object())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of Integer, String))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSCREENSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSCREENSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_clsUSERGRIDSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_clsUSERGRIDSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_CONTENT())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_CONTENT)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_EMAIL())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_EMAIL)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_License())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_License)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_VUserGrid())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_VUserGrid)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSEARCHSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSEARCHSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_SearchTerms())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_SearchTerms)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings02())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings02)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings03())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings03)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings04())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings04))>  _
        Function getGroupUsers(ByVal request As SVCSearch.getGroupUsersRequest) As SVCSearch.getGroupUsersResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getGroupUsers", ReplyAction:="http://tempuri.org/IService1/getGroupUsersResponse")>  _
        Function getGroupUsersAsync(ByVal request As SVCSearch.getGroupUsersRequest) As System.Threading.Tasks.Task(Of SVCSearch.getGroupUsersResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateDgGroupUsers", ReplyAction:="http://tempuri.org/IService1/PopulateDgGroupUsersResponse")>  _
        Function PopulateDgGroupUsers(ByVal request As SVCSearch.PopulateDgGroupUsersRequest) As SVCSearch.PopulateDgGroupUsersResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateDgGroupUsers", ReplyAction:="http://tempuri.org/IService1/PopulateDgGroupUsersResponse")>  _
        Function PopulateDgGroupUsersAsync(ByVal request As SVCSearch.PopulateDgGroupUsersRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateDgGroupUsersResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/DeleteGroupUsers", ReplyAction:="http://tempuri.org/IService1/DeleteGroupUsersResponse")>  _
        Function DeleteGroupUsers(ByVal request As SVCSearch.DeleteGroupUsersRequest) As SVCSearch.DeleteGroupUsersResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/DeleteGroupUsers", ReplyAction:="http://tempuri.org/IService1/DeleteGroupUsersResponse")>  _
        Function DeleteGroupUsersAsync(ByVal request As SVCSearch.DeleteGroupUsersRequest) As System.Threading.Tasks.Task(Of SVCSearch.DeleteGroupUsersResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getGroupOwnerGuidByGroupName", ReplyAction:="http://tempuri.org/IService1/getGroupOwnerGuidByGroupNameResponse")>  _
        Function getGroupOwnerGuidByGroupName(ByVal request As SVCSearch.getGroupOwnerGuidByGroupNameRequest) As SVCSearch.getGroupOwnerGuidByGroupNameResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getGroupOwnerGuidByGroupName", ReplyAction:="http://tempuri.org/IService1/getGroupOwnerGuidByGroupNameResponse")>  _
        Function getGroupOwnerGuidByGroupNameAsync(ByVal request As SVCSearch.getGroupOwnerGuidByGroupNameRequest) As System.Threading.Tasks.Task(Of SVCSearch.getGroupOwnerGuidByGroupNameResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/AddLibraryGroupUser", ReplyAction:="http://tempuri.org/IService1/AddLibraryGroupUserResponse")>  _
        Function AddLibraryGroupUser(ByVal request As SVCSearch.AddLibraryGroupUserRequest) As SVCSearch.AddLibraryGroupUserResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/AddLibraryGroupUser", ReplyAction:="http://tempuri.org/IService1/AddLibraryGroupUserResponse")>  _
        Function AddLibraryGroupUserAsync(ByVal request As SVCSearch.AddLibraryGroupUserRequest) As System.Threading.Tasks.Task(Of SVCSearch.AddLibraryGroupUserResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateGroupUserGrid", ReplyAction:="http://tempuri.org/IService1/PopulateGroupUserGridResponse")>  _
        Function PopulateGroupUserGrid(ByVal request As SVCSearch.PopulateGroupUserGridRequest) As SVCSearch.PopulateGroupUserGridResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateGroupUserGrid", ReplyAction:="http://tempuri.org/IService1/PopulateGroupUserGridResponse")>  _
        Function PopulateGroupUserGridAsync(ByVal request As SVCSearch.PopulateGroupUserGridRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateGroupUserGridResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateLibItemsGrid", ReplyAction:="http://tempuri.org/IService1/PopulateLibItemsGridResponse")>  _
        Function PopulateLibItemsGrid(ByVal request As SVCSearch.PopulateLibItemsGridRequest) As SVCSearch.PopulateLibItemsGridResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateLibItemsGrid", ReplyAction:="http://tempuri.org/IService1/PopulateLibItemsGridResponse")>  _
        Function PopulateLibItemsGridAsync(ByVal request As SVCSearch.PopulateLibItemsGridRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateLibItemsGridResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateDgAssigned", ReplyAction:="http://tempuri.org/IService1/PopulateDgAssignedResponse")>  _
        Function PopulateDgAssigned(ByVal request As SVCSearch.PopulateDgAssignedRequest) As SVCSearch.PopulateDgAssignedResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateDgAssigned", ReplyAction:="http://tempuri.org/IService1/PopulateDgAssignedResponse")>  _
        Function PopulateDgAssignedAsync(ByVal request As SVCSearch.PopulateDgAssignedRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateDgAssignedResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ResetLibraryUsersCount", ReplyAction:="http://tempuri.org/IService1/ResetLibraryUsersCountResponse")>  _
        Function ResetLibraryUsersCount(ByVal request As SVCSearch.ResetLibraryUsersCountRequest) As SVCSearch.ResetLibraryUsersCountResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ResetLibraryUsersCount", ReplyAction:="http://tempuri.org/IService1/ResetLibraryUsersCountResponse")>  _
        Function ResetLibraryUsersCountAsync(ByVal request As SVCSearch.ResetLibraryUsersCountRequest) As System.Threading.Tasks.Task(Of SVCSearch.ResetLibraryUsersCountResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/DeleteLibraryGroupUser", ReplyAction:="http://tempuri.org/IService1/DeleteLibraryGroupUserResponse")>  _
        Function DeleteLibraryGroupUser(ByVal request As SVCSearch.DeleteLibraryGroupUserRequest) As SVCSearch.DeleteLibraryGroupUserResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/DeleteLibraryGroupUser", ReplyAction:="http://tempuri.org/IService1/DeleteLibraryGroupUserResponse")>  _
        Function DeleteLibraryGroupUserAsync(ByVal request As SVCSearch.DeleteLibraryGroupUserRequest) As System.Threading.Tasks.Task(Of SVCSearch.DeleteLibraryGroupUserResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ChangeUserPassword", ReplyAction:="http://tempuri.org/IService1/ChangeUserPasswordResponse")>  _
        Function ChangeUserPassword(ByVal request As SVCSearch.ChangeUserPasswordRequest) As SVCSearch.ChangeUserPasswordResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ChangeUserPassword", ReplyAction:="http://tempuri.org/IService1/ChangeUserPasswordResponse")>  _
        Function ChangeUserPasswordAsync(ByVal request As SVCSearch.ChangeUserPasswordRequest) As System.Threading.Tasks.Task(Of SVCSearch.ChangeUserPasswordResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/SaveClickStats", ReplyAction:="http://tempuri.org/IService1/SaveClickStatsResponse")>  _
        Function SaveClickStats(ByVal request As SVCSearch.SaveClickStatsRequest) As SVCSearch.SaveClickStatsResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/SaveClickStats", ReplyAction:="http://tempuri.org/IService1/SaveClickStatsResponse")>  _
        Function SaveClickStatsAsync(ByVal request As SVCSearch.SaveClickStatsRequest) As System.Threading.Tasks.Task(Of SVCSearch.SaveClickStatsResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/cleanUpLibraryItems", ReplyAction:="http://tempuri.org/IService1/cleanUpLibraryItemsResponse")>  _
        Function cleanUpLibraryItems(ByVal request As SVCSearch.cleanUpLibraryItemsRequest) As SVCSearch.cleanUpLibraryItemsResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/cleanUpLibraryItems", ReplyAction:="http://tempuri.org/IService1/cleanUpLibraryItemsResponse")>  _
        Function cleanUpLibraryItemsAsync(ByVal request As SVCSearch.cleanUpLibraryItemsRequest) As System.Threading.Tasks.Task(Of SVCSearch.cleanUpLibraryItemsResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/RemoveLibraryDirectories", ReplyAction:="http://tempuri.org/IService1/RemoveLibraryDirectoriesResponse")>  _
        Function RemoveLibraryDirectories(ByVal request As SVCSearch.RemoveLibraryDirectoriesRequest) As SVCSearch.RemoveLibraryDirectoriesResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/RemoveLibraryDirectories", ReplyAction:="http://tempuri.org/IService1/RemoveLibraryDirectoriesResponse")>  _
        Function RemoveLibraryDirectoriesAsync(ByVal request As SVCSearch.RemoveLibraryDirectoriesRequest) As System.Threading.Tasks.Task(Of SVCSearch.RemoveLibraryDirectoriesResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/RemoveLibraryEmails", ReplyAction:="http://tempuri.org/IService1/RemoveLibraryEmailsResponse")>  _
        Function RemoveLibraryEmails(ByVal request As SVCSearch.RemoveLibraryEmailsRequest) As SVCSearch.RemoveLibraryEmailsResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/RemoveLibraryEmails", ReplyAction:="http://tempuri.org/IService1/RemoveLibraryEmailsResponse")>  _
        Function RemoveLibraryEmailsAsync(ByVal request As SVCSearch.RemoveLibraryEmailsRequest) As System.Threading.Tasks.Task(Of SVCSearch.RemoveLibraryEmailsResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/AddSysMsg", ReplyAction:="http://tempuri.org/IService1/AddSysMsgResponse")>  _
        Function AddSysMsg(ByVal request As SVCSearch.AddSysMsgRequest) As SVCSearch.AddSysMsgResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/AddSysMsg", ReplyAction:="http://tempuri.org/IService1/AddSysMsgResponse")>  _
        Function AddSysMsgAsync(ByVal request As SVCSearch.AddSysMsgRequest) As System.Threading.Tasks.Task(Of SVCSearch.AddSysMsgResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/AddLibraryDirectory", ReplyAction:="http://tempuri.org/IService1/AddLibraryDirectoryResponse")>  _
        Function AddLibraryDirectory(ByVal request As SVCSearch.AddLibraryDirectoryRequest) As SVCSearch.AddLibraryDirectoryResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/AddLibraryDirectory", ReplyAction:="http://tempuri.org/IService1/AddLibraryDirectoryResponse")>  _
        Function AddLibraryDirectoryAsync(ByVal request As SVCSearch.AddLibraryDirectoryRequest) As System.Threading.Tasks.Task(Of SVCSearch.AddLibraryDirectoryResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/AddLibraryEmail", ReplyAction:="http://tempuri.org/IService1/AddLibraryEmailResponse")>  _
        Function AddLibraryEmail(ByVal request As SVCSearch.AddLibraryEmailRequest) As SVCSearch.AddLibraryEmailResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/AddLibraryEmail", ReplyAction:="http://tempuri.org/IService1/AddLibraryEmailResponse")>  _
        Function AddLibraryEmailAsync(ByVal request As SVCSearch.AddLibraryEmailRequest) As System.Threading.Tasks.Task(Of SVCSearch.AddLibraryEmailResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateLibraryGrid", ReplyAction:="http://tempuri.org/IService1/PopulateLibraryGridResponse")>  _
        Function PopulateLibraryGrid(ByVal request As SVCSearch.PopulateLibraryGridRequest) As SVCSearch.PopulateLibraryGridResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateLibraryGrid", ReplyAction:="http://tempuri.org/IService1/PopulateLibraryGridResponse")>  _
        Function PopulateLibraryGridAsync(ByVal request As SVCSearch.PopulateLibraryGridRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateLibraryGridResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getListOfStrings", ReplyAction:="http://tempuri.org/IService1/getListOfStringsResponse")>  _
        Function getListOfStrings(ByVal request As SVCSearch.getListOfStringsRequest) As SVCSearch.getListOfStringsResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getListOfStrings", ReplyAction:="http://tempuri.org/IService1/getListOfStringsResponse")>  _
        Function getListOfStringsAsync(ByVal request As SVCSearch.getListOfStringsRequest) As System.Threading.Tasks.Task(Of SVCSearch.getListOfStringsResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getListOfStrings1", ReplyAction:="http://tempuri.org/IService1/getListOfStrings1Response")>  _
        Function getListOfStrings1(ByVal request As SVCSearch.getListOfStrings1Request) As SVCSearch.getListOfStrings1Response
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getListOfStrings1", ReplyAction:="http://tempuri.org/IService1/getListOfStrings1Response")>  _
        Function getListOfStrings1Async(ByVal request As SVCSearch.getListOfStrings1Request) As System.Threading.Tasks.Task(Of SVCSearch.getListOfStrings1Response)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getListOfStrings2", ReplyAction:="http://tempuri.org/IService1/getListOfStrings2Response")>  _
        Function getListOfStrings2(ByVal request As SVCSearch.getListOfStrings2Request) As SVCSearch.getListOfStrings2Response
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getListOfStrings2", ReplyAction:="http://tempuri.org/IService1/getListOfStrings2Response")>  _
        Function getListOfStrings2Async(ByVal request As SVCSearch.getListOfStrings2Request) As System.Threading.Tasks.Task(Of SVCSearch.getListOfStrings2Response)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getListOfStrings3", ReplyAction:="http://tempuri.org/IService1/getListOfStrings3Response")>  _
        Function getListOfStrings3(ByVal request As SVCSearch.getListOfStrings3Request) As SVCSearch.getListOfStrings3Response
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getListOfStrings3", ReplyAction:="http://tempuri.org/IService1/getListOfStrings3Response")>  _
        Function getListOfStrings3Async(ByVal request As SVCSearch.getListOfStrings3Request) As System.Threading.Tasks.Task(Of SVCSearch.getListOfStrings3Response)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getListOfStrings4", ReplyAction:="http://tempuri.org/IService1/getListOfStrings4Response")>  _
        Function getListOfStrings4(ByVal request As SVCSearch.getListOfStrings4Request) As SVCSearch.getListOfStrings4Response
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getListOfStrings4", ReplyAction:="http://tempuri.org/IService1/getListOfStrings4Response")>  _
        Function getListOfStrings4Async(ByVal request As SVCSearch.getListOfStrings4Request) As System.Threading.Tasks.Task(Of SVCSearch.getListOfStrings4Response)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/iCount", ReplyAction:="http://tempuri.org/IService1/iCountResponse")>  _
        Function iCount(ByVal request As SVCSearch.iCountRequest) As SVCSearch.iCountResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/iCount", ReplyAction:="http://tempuri.org/IService1/iCountResponse")>  _
        Function iCountAsync(ByVal request As SVCSearch.iCountRequest) As System.Threading.Tasks.Task(Of SVCSearch.iCountResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetLogPath", ReplyAction:="http://tempuri.org/IService1/GetLogPathResponse")>  _
        Function GetLogPath(ByVal request As SVCSearch.GetLogPathRequest) As SVCSearch.GetLogPathResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetLogPath", ReplyAction:="http://tempuri.org/IService1/GetLogPathResponse")>  _
        Function GetLogPathAsync(ByVal request As SVCSearch.GetLogPathRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetLogPathResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ActiveSessionGetVal", ReplyAction:="http://tempuri.org/IService1/ActiveSessionGetValResponse")>  _
        Function ActiveSessionGetVal(ByVal request As SVCSearch.ActiveSessionGetValRequest) As SVCSearch.ActiveSessionGetValResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ActiveSessionGetVal", ReplyAction:="http://tempuri.org/IService1/ActiveSessionGetValResponse")>  _
        Function ActiveSessionGetValAsync(ByVal request As SVCSearch.ActiveSessionGetValRequest) As System.Threading.Tasks.Task(Of SVCSearch.ActiveSessionGetValResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ActiveSession", ReplyAction:="http://tempuri.org/IService1/ActiveSessionResponse")>  _
        Function ActiveSession(ByVal request As SVCSearch.ActiveSessionRequest) As SVCSearch.ActiveSessionResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ActiveSession", ReplyAction:="http://tempuri.org/IService1/ActiveSessionResponse")>  _
        Function ActiveSessionAsync(ByVal request As SVCSearch.ActiveSessionRequest) As System.Threading.Tasks.Task(Of SVCSearch.ActiveSessionResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/setSecureLoginParms", ReplyAction:="http://tempuri.org/IService1/setSecureLoginParmsResponse")>  _
        Function setSecureLoginParms(ByVal request As SVCSearch.setSecureLoginParmsRequest) As SVCSearch.setSecureLoginParmsResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/setSecureLoginParms", ReplyAction:="http://tempuri.org/IService1/setSecureLoginParmsResponse")>  _
        Function setSecureLoginParmsAsync(ByVal request As SVCSearch.setSecureLoginParmsRequest) As System.Threading.Tasks.Task(Of SVCSearch.setSecureLoginParmsResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateSecureLoginCB_V2", ReplyAction:="http://tempuri.org/IService1/PopulateSecureLoginCB_V2Response")>  _
        Function PopulateSecureLoginCB_V2(ByVal request As SVCSearch.PopulateSecureLoginCB_V2Request) As SVCSearch.PopulateSecureLoginCB_V2Response
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateSecureLoginCB_V2", ReplyAction:="http://tempuri.org/IService1/PopulateSecureLoginCB_V2Response")>  _
        Function PopulateSecureLoginCB_V2Async(ByVal request As SVCSearch.PopulateSecureLoginCB_V2Request) As System.Threading.Tasks.Task(Of SVCSearch.PopulateSecureLoginCB_V2Response)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateSecureLoginCB", ReplyAction:="http://tempuri.org/IService1/PopulateSecureLoginCBResponse")>  _
        Function PopulateSecureLoginCB(ByVal request As SVCSearch.PopulateSecureLoginCBRequest) As SVCSearch.PopulateSecureLoginCBResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateSecureLoginCB", ReplyAction:="http://tempuri.org/IService1/PopulateSecureLoginCBResponse")>  _
        Function PopulateSecureLoginCBAsync(ByVal request As SVCSearch.PopulateSecureLoginCBRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateSecureLoginCBResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getLoginPW", ReplyAction:="http://tempuri.org/IService1/getLoginPWResponse"),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, String))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, Date))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(String())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, Integer))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(Object())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of Integer, String))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSCREENSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSCREENSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_clsUSERGRIDSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_clsUSERGRIDSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_CONTENT())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_CONTENT)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_EMAIL())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_EMAIL)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_License())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_License)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_VUserGrid())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_VUserGrid)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSEARCHSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSEARCHSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_SearchTerms())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_SearchTerms)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings02())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings02)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings03())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings03)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings04())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings04))>  _
        Function getLoginPW(ByVal request As SVCSearch.getLoginPWRequest) As SVCSearch.getLoginPWResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getLoginPW", ReplyAction:="http://tempuri.org/IService1/getLoginPWResponse")>  _
        Function getLoginPWAsync(ByVal request As SVCSearch.getLoginPWRequest) As System.Threading.Tasks.Task(Of SVCSearch.getLoginPWResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/setLoginPW", ReplyAction:="http://tempuri.org/IService1/setLoginPWResponse")>  _
        Function setLoginPW(ByVal request As SVCSearch.setLoginPWRequest) As SVCSearch.setLoginPWResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/setLoginPW", ReplyAction:="http://tempuri.org/IService1/setLoginPWResponse")>  _
        Function setLoginPWAsync(ByVal request As SVCSearch.setLoginPWRequest) As System.Threading.Tasks.Task(Of SVCSearch.setLoginPWResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSessionEncCs", ReplyAction:="http://tempuri.org/IService1/getSessionEncCsResponse"),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, String))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, Date))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(String())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, Integer))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(Object())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of Integer, String))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSCREENSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSCREENSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_clsUSERGRIDSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_clsUSERGRIDSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_CONTENT())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_CONTENT)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_EMAIL())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_EMAIL)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_License())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_License)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_VUserGrid())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_VUserGrid)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSEARCHSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSEARCHSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_SearchTerms())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_SearchTerms)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings02())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings02)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings03())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings03)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings04())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings04))>  _
        Function getSessionEncCs(ByVal request As SVCSearch.getSessionEncCsRequest) As SVCSearch.getSessionEncCsResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSessionEncCs", ReplyAction:="http://tempuri.org/IService1/getSessionEncCsResponse")>  _
        Function getSessionEncCsAsync(ByVal request As SVCSearch.getSessionEncCsRequest) As System.Threading.Tasks.Task(Of SVCSearch.getSessionEncCsResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/setSessionEncCs", ReplyAction:="http://tempuri.org/IService1/setSessionEncCsResponse")>  _
        Function setSessionEncCs(ByVal request As SVCSearch.setSessionEncCsRequest) As SVCSearch.setSessionEncCsResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/setSessionEncCs", ReplyAction:="http://tempuri.org/IService1/setSessionEncCsResponse")>  _
        Function setSessionEncCsAsync(ByVal request As SVCSearch.setSessionEncCsRequest) As System.Threading.Tasks.Task(Of SVCSearch.setSessionEncCsResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/setSessionRepoID", ReplyAction:="http://tempuri.org/IService1/setSessionRepoIDResponse")>  _
        Function setSessionRepoID(ByVal request As SVCSearch.setSessionRepoIDRequest) As SVCSearch.setSessionRepoIDResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/setSessionRepoID", ReplyAction:="http://tempuri.org/IService1/setSessionRepoIDResponse")>  _
        Function setSessionRepoIDAsync(ByVal request As SVCSearch.setSessionRepoIDRequest) As System.Threading.Tasks.Task(Of SVCSearch.setSessionRepoIDResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSessionRepoID", ReplyAction:="http://tempuri.org/IService1/getSessionRepoIDResponse"),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, String))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, Date))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(String())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, Integer))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(Object())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of Integer, String))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSCREENSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSCREENSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_clsUSERGRIDSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_clsUSERGRIDSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_CONTENT())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_CONTENT)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_EMAIL())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_EMAIL)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_License())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_License)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_VUserGrid())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_VUserGrid)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSEARCHSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSEARCHSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_SearchTerms())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_SearchTerms)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings02())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings02)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings03())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings03)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings04())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings04))>  _
        Function getSessionRepoID(ByVal request As SVCSearch.getSessionRepoIDRequest) As SVCSearch.getSessionRepoIDResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSessionRepoID", ReplyAction:="http://tempuri.org/IService1/getSessionRepoIDResponse")>  _
        Function getSessionRepoIDAsync(ByVal request As SVCSearch.getSessionRepoIDRequest) As System.Threading.Tasks.Task(Of SVCSearch.getSessionRepoIDResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/setSessionCompanyID", ReplyAction:="http://tempuri.org/IService1/setSessionCompanyIDResponse")>  _
        Function setSessionCompanyID(ByVal request As SVCSearch.setSessionCompanyIDRequest) As SVCSearch.setSessionCompanyIDResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/setSessionCompanyID", ReplyAction:="http://tempuri.org/IService1/setSessionCompanyIDResponse")>  _
        Function setSessionCompanyIDAsync(ByVal request As SVCSearch.setSessionCompanyIDRequest) As System.Threading.Tasks.Task(Of SVCSearch.setSessionCompanyIDResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSessionCompanyID", ReplyAction:="http://tempuri.org/IService1/getSessionCompanyIDResponse"),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, String))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, Date))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(String())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, Integer))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(Object())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of Integer, String))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSCREENSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSCREENSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_clsUSERGRIDSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_clsUSERGRIDSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_CONTENT())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_CONTENT)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_EMAIL())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_EMAIL)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_License())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_License)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_VUserGrid())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_VUserGrid)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSEARCHSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSEARCHSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_SearchTerms())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_SearchTerms)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings02())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings02)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings03())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings03)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings04())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings04))>  _
        Function getSessionCompanyID(ByVal request As SVCSearch.getSessionCompanyIDRequest) As SVCSearch.getSessionCompanyIDResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSessionCompanyID", ReplyAction:="http://tempuri.org/IService1/getSessionCompanyIDResponse")>  _
        Function getSessionCompanyIDAsync(ByVal request As SVCSearch.getSessionCompanyIDRequest) As System.Threading.Tasks.Task(Of SVCSearch.getSessionCompanyIDResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/setLoginGuid", ReplyAction:="http://tempuri.org/IService1/setLoginGuidResponse")>  _
        Function setLoginGuid(ByVal request As SVCSearch.setLoginGuidRequest) As SVCSearch.setLoginGuidResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/setLoginGuid", ReplyAction:="http://tempuri.org/IService1/setLoginGuidResponse")>  _
        Function setLoginGuidAsync(ByVal request As SVCSearch.setLoginGuidRequest) As System.Threading.Tasks.Task(Of SVCSearch.setLoginGuidResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getLoginGuid", ReplyAction:="http://tempuri.org/IService1/getLoginGuidResponse"),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, String))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, Date))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(String())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, Integer))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(Object())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of Integer, String))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSCREENSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSCREENSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_clsUSERGRIDSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_clsUSERGRIDSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_CONTENT())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_CONTENT)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_EMAIL())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_EMAIL)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_License())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_License)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_VUserGrid())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_VUserGrid)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSEARCHSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSEARCHSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_SearchTerms())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_SearchTerms)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings02())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings02)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings03())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings03)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings04())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings04))>  _
        Function getLoginGuid(ByVal request As SVCSearch.getLoginGuidRequest) As SVCSearch.getLoginGuidResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getLoginGuid", ReplyAction:="http://tempuri.org/IService1/getLoginGuidResponse")>  _
        Function getLoginGuidAsync(ByVal request As SVCSearch.getLoginGuidRequest) As System.Threading.Tasks.Task(Of SVCSearch.getLoginGuidResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getHttpSessionID", ReplyAction:="http://tempuri.org/IService1/getHttpSessionIDResponse"),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, String))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, Date))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(String())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, Integer))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(Object())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of Integer, String))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSCREENSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSCREENSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_clsUSERGRIDSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_clsUSERGRIDSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_CONTENT())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_CONTENT)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_EMAIL())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_EMAIL)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_License())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_License)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_VUserGrid())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_VUserGrid)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSEARCHSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSEARCHSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_SearchTerms())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_SearchTerms)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings02())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings02)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings03())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings03)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings04())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings04))>  _
        Function getHttpSessionID(ByVal request As SVCSearch.getHttpSessionIDRequest) As SVCSearch.getHttpSessionIDResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getHttpSessionID", ReplyAction:="http://tempuri.org/IService1/getHttpSessionIDResponse")>  _
        Function getHttpSessionIDAsync(ByVal request As SVCSearch.getHttpSessionIDRequest) As System.Threading.Tasks.Task(Of SVCSearch.getHttpSessionIDResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/setSessionID", ReplyAction:="http://tempuri.org/IService1/setSessionIDResponse")>  _
        Function setSessionID(ByVal request As SVCSearch.setSessionIDRequest) As SVCSearch.setSessionIDResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/setSessionID", ReplyAction:="http://tempuri.org/IService1/setSessionIDResponse")>  _
        Function setSessionIDAsync(ByVal request As SVCSearch.setSessionIDRequest) As System.Threading.Tasks.Task(Of SVCSearch.setSessionIDResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExpandInflectionTerms", ReplyAction:="http://tempuri.org/IService1/ExpandInflectionTermsResponse")>  _
        Function ExpandInflectionTerms(ByVal request As SVCSearch.ExpandInflectionTermsRequest) As SVCSearch.ExpandInflectionTermsResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExpandInflectionTerms", ReplyAction:="http://tempuri.org/IService1/ExpandInflectionTermsResponse")>  _
        Function ExpandInflectionTermsAsync(ByVal request As SVCSearch.ExpandInflectionTermsRequest) As System.Threading.Tasks.Task(Of SVCSearch.ExpandInflectionTermsResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getServerDatabaseName", ReplyAction:="http://tempuri.org/IService1/getServerDatabaseNameResponse")>  _
        Function getServerDatabaseName(ByVal request As SVCSearch.getServerDatabaseNameRequest) As SVCSearch.getServerDatabaseNameResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getServerDatabaseName", ReplyAction:="http://tempuri.org/IService1/getServerDatabaseNameResponse")>  _
        Function getServerDatabaseNameAsync(ByVal request As SVCSearch.getServerDatabaseNameRequest) As System.Threading.Tasks.Task(Of SVCSearch.getServerDatabaseNameResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/CleanLog", ReplyAction:="http://tempuri.org/IService1/CleanLogResponse")>  _
        Function CleanLog(ByVal request As SVCSearch.CleanLogRequest) As SVCSearch.CleanLogResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/CleanLog", ReplyAction:="http://tempuri.org/IService1/CleanLogResponse")>  _
        Function CleanLogAsync(ByVal request As SVCSearch.CleanLogRequest) As System.Threading.Tasks.Task(Of SVCSearch.CleanLogResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateComboBox", ReplyAction:="http://tempuri.org/IService1/PopulateComboBoxResponse")>  _
        Function PopulateComboBox(ByVal request As SVCSearch.PopulateComboBoxRequest) As SVCSearch.PopulateComboBoxResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateComboBox", ReplyAction:="http://tempuri.org/IService1/PopulateComboBoxResponse")>  _
        Function PopulateComboBoxAsync(ByVal request As SVCSearch.PopulateComboBoxRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateComboBoxResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetEmailAttachments", ReplyAction:="http://tempuri.org/IService1/GetEmailAttachmentsResponse")>  _
        Function GetEmailAttachments(ByVal request As SVCSearch.GetEmailAttachmentsRequest) As SVCSearch.GetEmailAttachmentsResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetEmailAttachments", ReplyAction:="http://tempuri.org/IService1/GetEmailAttachmentsResponse")>  _
        Function GetEmailAttachmentsAsync(ByVal request As SVCSearch.GetEmailAttachmentsRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetEmailAttachmentsResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/DbWriteToFile", ReplyAction:="http://tempuri.org/IService1/DbWriteToFileResponse")>  _
        Function DbWriteToFile(ByVal request As SVCSearch.DbWriteToFileRequest) As SVCSearch.DbWriteToFileResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/DbWriteToFile", ReplyAction:="http://tempuri.org/IService1/DbWriteToFileResponse")>  _
        Function DbWriteToFileAsync(ByVal request As SVCSearch.DbWriteToFileRequest) As System.Threading.Tasks.Task(Of SVCSearch.DbWriteToFileResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/SetSessionVariable", ReplyAction:="http://tempuri.org/IService1/SetSessionVariableResponse")>  _
        Function SetSessionVariable(ByVal request As SVCSearch.SetSessionVariableRequest) As SVCSearch.SetSessionVariableResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/SetSessionVariable", ReplyAction:="http://tempuri.org/IService1/SetSessionVariableResponse")>  _
        Function SetSessionVariableAsync(ByVal request As SVCSearch.SetSessionVariableRequest) As System.Threading.Tasks.Task(Of SVCSearch.SetSessionVariableResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetSessionVariable", ReplyAction:="http://tempuri.org/IService1/GetSessionVariableResponse"),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, String))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, Date))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(String())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, Integer))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(Object())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of Integer, String))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSCREENSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSCREENSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_clsUSERGRIDSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_clsUSERGRIDSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_CONTENT())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_CONTENT)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_EMAIL())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_EMAIL)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_License())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_License)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_VUserGrid())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_VUserGrid)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSEARCHSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSEARCHSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_SearchTerms())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_SearchTerms)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings02())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings02)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings03())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings03)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings04())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings04))>  _
        Function GetSessionVariable(ByVal request As SVCSearch.GetSessionVariableRequest) As SVCSearch.GetSessionVariableResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetSessionVariable", ReplyAction:="http://tempuri.org/IService1/GetSessionVariableResponse")>  _
        Function GetSessionVariableAsync(ByVal request As SVCSearch.GetSessionVariableRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetSessionVariableResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/UpdateSourceImageCompressed", ReplyAction:="http://tempuri.org/IService1/UpdateSourceImageCompressedResponse")>  _
        Function UpdateSourceImageCompressed(ByVal request As SVCSearch.UpdateSourceImageCompressedRequest) As SVCSearch.UpdateSourceImageCompressedResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/UpdateSourceImageCompressed", ReplyAction:="http://tempuri.org/IService1/UpdateSourceImageCompressedResponse")>  _
        Function UpdateSourceImageCompressedAsync(ByVal request As SVCSearch.UpdateSourceImageCompressedRequest) As System.Threading.Tasks.Task(Of SVCSearch.UpdateSourceImageCompressedResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/writeEmailFromDbToFile", ReplyAction:="http://tempuri.org/IService1/writeEmailFromDbToFileResponse")>  _
        Function writeEmailFromDbToFile(ByVal request As SVCSearch.writeEmailFromDbToFileRequest) As SVCSearch.writeEmailFromDbToFileResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/writeEmailFromDbToFile", ReplyAction:="http://tempuri.org/IService1/writeEmailFromDbToFileResponse")>  _
        Function writeEmailFromDbToFileAsync(ByVal request As SVCSearch.writeEmailFromDbToFileRequest) As System.Threading.Tasks.Task(Of SVCSearch.writeEmailFromDbToFileResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/writeAttachmentFromDbWriteToFile", ReplyAction:="http://tempuri.org/IService1/writeAttachmentFromDbWriteToFileResponse")>  _
        Function writeAttachmentFromDbWriteToFile(ByVal request As SVCSearch.writeAttachmentFromDbWriteToFileRequest) As SVCSearch.writeAttachmentFromDbWriteToFileResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/writeAttachmentFromDbWriteToFile", ReplyAction:="http://tempuri.org/IService1/writeAttachmentFromDbWriteToFileResponse")>  _
        Function writeAttachmentFromDbWriteToFileAsync(ByVal request As SVCSearch.writeAttachmentFromDbWriteToFileRequest) As System.Threading.Tasks.Task(Of SVCSearch.writeAttachmentFromDbWriteToFileResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/writeImageSourceDataFromDbWriteToFile", ReplyAction:="http://tempuri.org/IService1/writeImageSourceDataFromDbWriteToFileResponse")>  _
        Function writeImageSourceDataFromDbWriteToFile(ByVal request As SVCSearch.writeImageSourceDataFromDbWriteToFileRequest) As SVCSearch.writeImageSourceDataFromDbWriteToFileResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/writeImageSourceDataFromDbWriteToFile", ReplyAction:="http://tempuri.org/IService1/writeImageSourceDataFromDbWriteToFileResponse")>  _
        Function writeImageSourceDataFromDbWriteToFileAsync(ByVal request As SVCSearch.writeImageSourceDataFromDbWriteToFileRequest) As System.Threading.Tasks.Task(Of SVCSearch.writeImageSourceDataFromDbWriteToFileResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/AddLibraryItems", ReplyAction:="http://tempuri.org/IService1/AddLibraryItemsResponse")>  _
        Function AddLibraryItems(ByVal request As SVCSearch.AddLibraryItemsRequest) As SVCSearch.AddLibraryItemsResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/AddLibraryItems", ReplyAction:="http://tempuri.org/IService1/AddLibraryItemsResponse")>  _
        Function AddLibraryItemsAsync(ByVal request As SVCSearch.AddLibraryItemsRequest) As System.Threading.Tasks.Task(Of SVCSearch.AddLibraryItemsResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateGroupUserLibCombo", ReplyAction:="http://tempuri.org/IService1/PopulateGroupUserLibComboResponse")>  _
        Function PopulateGroupUserLibCombo(ByVal request As SVCSearch.PopulateGroupUserLibComboRequest) As SVCSearch.PopulateGroupUserLibComboResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateGroupUserLibCombo", ReplyAction:="http://tempuri.org/IService1/PopulateGroupUserLibComboResponse")>  _
        Function PopulateGroupUserLibComboAsync(ByVal request As SVCSearch.PopulateGroupUserLibComboRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateGroupUserLibComboResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetLibOwnerByName", ReplyAction:="http://tempuri.org/IService1/GetLibOwnerByNameResponse")>  _
        Function GetLibOwnerByName(ByVal request As SVCSearch.GetLibOwnerByNameRequest) As SVCSearch.GetLibOwnerByNameResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetLibOwnerByName", ReplyAction:="http://tempuri.org/IService1/GetLibOwnerByNameResponse")>  _
        Function GetLibOwnerByNameAsync(ByVal request As SVCSearch.GetLibOwnerByNameRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetLibOwnerByNameResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GenerateSQL", ReplyAction:="http://tempuri.org/IService1/GenerateSQLResponse")>  _
        Function GenerateSQL(ByVal request As SVCSearch.GenerateSQLRequest) As SVCSearch.GenerateSQLResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GenerateSQL", ReplyAction:="http://tempuri.org/IService1/GenerateSQLResponse")>  _
        Function GenerateSQLAsync(ByVal request As SVCSearch.GenerateSQLRequest) As System.Threading.Tasks.Task(Of SVCSearch.GenerateSQLResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getJsonData", ReplyAction:="http://tempuri.org/IService1/getJsonDataResponse")>  _
        Function getJsonData(ByVal I As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getJsonData", ReplyAction:="http://tempuri.org/IService1/getJsonDataResponse")>  _
        Function getJsonDataAsync(ByVal I As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExecuteSearchEmail", ReplyAction:="http://tempuri.org/IService1/ExecuteSearchEmailResponse")>  _
        Function ExecuteSearchEmail(ByVal request As SVCSearch.ExecuteSearchEmailRequest) As SVCSearch.ExecuteSearchEmailResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExecuteSearchEmail", ReplyAction:="http://tempuri.org/IService1/ExecuteSearchEmailResponse")>  _
        Function ExecuteSearchEmailAsync(ByVal request As SVCSearch.ExecuteSearchEmailRequest) As System.Threading.Tasks.Task(Of SVCSearch.ExecuteSearchEmailResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExecuteSearchContent", ReplyAction:="http://tempuri.org/IService1/ExecuteSearchContentResponse")>  _
        Function ExecuteSearchContent(ByVal request As SVCSearch.ExecuteSearchContentRequest) As SVCSearch.ExecuteSearchContentResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExecuteSearchContent", ReplyAction:="http://tempuri.org/IService1/ExecuteSearchContentResponse")>  _
        Function ExecuteSearchContentAsync(ByVal request As SVCSearch.ExecuteSearchContentRequest) As System.Threading.Tasks.Task(Of SVCSearch.ExecuteSearchContentResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSearchState", ReplyAction:="http://tempuri.org/IService1/getSearchStateResponse")>  _
        Function getSearchState(ByVal request As SVCSearch.getSearchStateRequest) As SVCSearch.getSearchStateResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSearchState", ReplyAction:="http://tempuri.org/IService1/getSearchStateResponse")>  _
        Function getSearchStateAsync(ByVal request As SVCSearch.getSearchStateRequest) As System.Threading.Tasks.Task(Of SVCSearch.getSearchStateResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSourceLength", ReplyAction:="http://tempuri.org/IService1/getSourceLengthResponse")>  _
        Function getSourceLength(ByVal SourceGuid As String, ByVal SourceType As String) As Long
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSourceLength", ReplyAction:="http://tempuri.org/IService1/getSourceLengthResponse")>  _
        Function getSourceLengthAsync(ByVal SourceGuid As String, ByVal SourceType As String) As System.Threading.Tasks.Task(Of Long)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSourceName", ReplyAction:="http://tempuri.org/IService1/getSourceNameResponse")>  _
        Function getSourceName(ByVal SourceGuid As String, ByVal SourceType As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSourceName", ReplyAction:="http://tempuri.org/IService1/getSourceNameResponse")>  _
        Function getSourceNameAsync(ByVal SourceGuid As String, ByVal SourceType As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/DownLoadDocument", ReplyAction:="http://tempuri.org/IService1/DownLoadDocumentResponse")>  _
        Function DownLoadDocument(ByVal request As SVCSearch.DownLoadDocumentRequest) As SVCSearch.DownLoadDocumentResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/DownLoadDocument", ReplyAction:="http://tempuri.org/IService1/DownLoadDocumentResponse")>  _
        Function DownLoadDocumentAsync(ByVal request As SVCSearch.DownLoadDocumentRequest) As System.Threading.Tasks.Task(Of SVCSearch.DownLoadDocumentResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetAttachmentFromDB", ReplyAction:="http://tempuri.org/IService1/GetAttachmentFromDBResponse")>  _
        Function GetAttachmentFromDB(ByVal request As SVCSearch.GetAttachmentFromDBRequest) As SVCSearch.GetAttachmentFromDBResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetAttachmentFromDB", ReplyAction:="http://tempuri.org/IService1/GetAttachmentFromDBResponse")>  _
        Function GetAttachmentFromDBAsync(ByVal request As SVCSearch.GetAttachmentFromDBRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetAttachmentFromDBResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getContentDT", ReplyAction:="http://tempuri.org/IService1/getContentDTResponse")>  _
        Function getContentDT(ByVal sourceguid As String) As System.Data.DataTable
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getContentDT", ReplyAction:="http://tempuri.org/IService1/getContentDTResponse")>  _
        Function getContentDTAsync(ByVal sourceguid As String) As System.Threading.Tasks.Task(Of System.Data.DataTable)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/TestIISConnection", ReplyAction:="http://tempuri.org/IService1/TestIISConnectionResponse")>  _
        Function TestIISConnection() As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/TestIISConnection", ReplyAction:="http://tempuri.org/IService1/TestIISConnectionResponse")>  _
        Function TestIISConnectionAsync() As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/TestConnection", ReplyAction:="http://tempuri.org/IService1/TestConnectionResponse")>  _
        Function TestConnection() As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/TestConnection", ReplyAction:="http://tempuri.org/IService1/TestConnectionResponse")>  _
        Function TestConnectionAsync() As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getWordInflections", ReplyAction:="http://tempuri.org/IService1/getWordInflectionsResponse")>  _
        Function getWordInflections(ByVal QRY As String, ByVal CS As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getWordInflections", ReplyAction:="http://tempuri.org/IService1/getWordInflectionsResponse")>  _
        Function getWordInflectionsAsync(ByVal QRY As String, ByVal CS As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/removeExpiredAlerts", ReplyAction:="http://tempuri.org/IService1/removeExpiredAlertsResponse")>  _
        Function removeExpiredAlerts() As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/removeExpiredAlerts", ReplyAction:="http://tempuri.org/IService1/removeExpiredAlertsResponse")>  _
        Function removeExpiredAlertsAsync() As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ChangeUserPasswordAdmin", ReplyAction:="http://tempuri.org/IService1/ChangeUserPasswordAdminResponse")>  _
        Function ChangeUserPasswordAdmin(ByVal AdminUserID As String, ByVal UserLogin As String, ByVal NewPw1 As String, ByVal NewPw2 As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ChangeUserPasswordAdmin", ReplyAction:="http://tempuri.org/IService1/ChangeUserPasswordAdminResponse")>  _
        Function ChangeUserPasswordAdminAsync(ByVal AdminUserID As String, ByVal UserLogin As String, ByVal NewPw1 As String, ByVal NewPw2 As String) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/AddUserGroup", ReplyAction:="http://tempuri.org/IService1/AddUserGroupResponse")>  _
        Function AddUserGroup(ByVal GroupName As String, ByVal GroupOwnerUserID As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/AddUserGroup", ReplyAction:="http://tempuri.org/IService1/AddUserGroupResponse")>  _
        Function AddUserGroupAsync(ByVal GroupName As String, ByVal GroupOwnerUserID As String) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getErrorLogs", ReplyAction:="http://tempuri.org/IService1/getErrorLogsResponse")>  _
        Function getErrorLogs(ByVal MaxNbr As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getErrorLogs", ReplyAction:="http://tempuri.org/IService1/getErrorLogsResponse")>  _
        Function getErrorLogsAsync(ByVal MaxNbr As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/SetEmailPublicFlag", ReplyAction:="http://tempuri.org/IService1/SetEmailPublicFlagResponse")>  _
        Function SetEmailPublicFlag(ByVal request As SVCSearch.SetEmailPublicFlagRequest) As SVCSearch.SetEmailPublicFlagResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/SetEmailPublicFlag", ReplyAction:="http://tempuri.org/IService1/SetEmailPublicFlagResponse")>  _
        Function SetEmailPublicFlagAsync(ByVal request As SVCSearch.SetEmailPublicFlagRequest) As System.Threading.Tasks.Task(Of SVCSearch.SetEmailPublicFlagResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/SetDocumentToMaster", ReplyAction:="http://tempuri.org/IService1/SetDocumentToMasterResponse")>  _
        Function SetDocumentToMaster(ByVal request As SVCSearch.SetDocumentToMasterRequest) As SVCSearch.SetDocumentToMasterResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/SetDocumentToMaster", ReplyAction:="http://tempuri.org/IService1/SetDocumentToMasterResponse")>  _
        Function SetDocumentToMasterAsync(ByVal request As SVCSearch.SetDocumentToMasterRequest) As System.Threading.Tasks.Task(Of SVCSearch.SetDocumentToMasterResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/SetDocumentPublicFlag", ReplyAction:="http://tempuri.org/IService1/SetDocumentPublicFlagResponse")>  _
        Function SetDocumentPublicFlag(ByVal request As SVCSearch.SetDocumentPublicFlagRequest) As SVCSearch.SetDocumentPublicFlagResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/SetDocumentPublicFlag", ReplyAction:="http://tempuri.org/IService1/SetDocumentPublicFlagResponse")>  _
        Function SetDocumentPublicFlagAsync(ByVal request As SVCSearch.SetDocumentPublicFlagRequest) As System.Threading.Tasks.Task(Of SVCSearch.SetDocumentPublicFlagResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExecuteSearchJson", ReplyAction:="http://tempuri.org/IService1/ExecuteSearchJsonResponse")>  _
        Function ExecuteSearchJson(ByVal request As SVCSearch.ExecuteSearchJsonRequest) As SVCSearch.ExecuteSearchJsonResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExecuteSearchJson", ReplyAction:="http://tempuri.org/IService1/ExecuteSearchJsonResponse")>  _
        Function ExecuteSearchJsonAsync(ByVal request As SVCSearch.ExecuteSearchJsonRequest) As System.Threading.Tasks.Task(Of SVCSearch.ExecuteSearchJsonResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/testServiceAvail", ReplyAction:="http://tempuri.org/IService1/testServiceAvailResponse")>  _
        Function testServiceAvail() As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/testServiceAvail", ReplyAction:="http://tempuri.org/IService1/testServiceAvailResponse")>  _
        Function testServiceAvailAsync() As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GenerateSearchSQL", ReplyAction:="http://tempuri.org/IService1/GenerateSearchSQLResponse")>  _
        Function GenerateSearchSQL(ByVal TypeSearch As String, ByVal SearchParmList As System.Collections.Generic.Dictionary(Of String, String)) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GenerateSearchSQL", ReplyAction:="http://tempuri.org/IService1/GenerateSearchSQLResponse")>  _
        Function GenerateSearchSQLAsync(ByVal TypeSearch As String, ByVal SearchParmList As System.Collections.Generic.Dictionary(Of String, String)) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExecuteSearchDT", ReplyAction:="http://tempuri.org/IService1/ExecuteSearchDTResponse")>  _
        Function ExecuteSearchDT(ByVal request As SVCSearch.ExecuteSearchDTRequest) As SVCSearch.ExecuteSearchDTResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExecuteSearchDT", ReplyAction:="http://tempuri.org/IService1/ExecuteSearchDTResponse")>  _
        Function ExecuteSearchDTAsync(ByVal request As SVCSearch.ExecuteSearchDTRequest) As System.Threading.Tasks.Task(Of SVCSearch.ExecuteSearchDTResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetFilesInZipDetail", ReplyAction:="http://tempuri.org/IService1/GetFilesInZipDetailResponse")>  _
        Function GetFilesInZipDetail(ByVal request As SVCSearch.GetFilesInZipDetailRequest) As SVCSearch.GetFilesInZipDetailResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetFilesInZipDetail", ReplyAction:="http://tempuri.org/IService1/GetFilesInZipDetailResponse")>  _
        Function GetFilesInZipDetailAsync(ByVal request As SVCSearch.GetFilesInZipDetailRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetFilesInZipDetailResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/xGetXrtID", ReplyAction:="http://tempuri.org/IService1/xGetXrtIDResponse")>  _
        Function xGetXrtID(ByVal CustomerID As String, ByVal ServerName As String, ByVal DBName As String, ByVal InstanceName As String) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/xGetXrtID", ReplyAction:="http://tempuri.org/IService1/xGetXrtIDResponse")>  _
        Function xGetXrtIDAsync(ByVal CustomerID As String, ByVal ServerName As String, ByVal DBName As String, ByVal InstanceName As String) As System.Threading.Tasks.Task(Of Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSecEndPoint", ReplyAction:="http://tempuri.org/IService1/getSecEndPointResponse")>  _
        Function getSecEndPoint() As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSecEndPoint", ReplyAction:="http://tempuri.org/IService1/getSecEndPointResponse")>  _
        Function getSecEndPointAsync() As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getContractID", ReplyAction:="http://tempuri.org/IService1/getContractIDResponse")>  _
        Function getContractID(ByVal SecureID As Integer, ByVal UserID As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getContractID", ReplyAction:="http://tempuri.org/IService1/getContractIDResponse")>  _
        Function getContractIDAsync(ByVal SecureID As Integer, ByVal UserID As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/AddGroupLibraryAccess", ReplyAction:="http://tempuri.org/IService1/AddGroupLibraryAccessResponse")>  _
        Function AddGroupLibraryAccess(ByVal request As SVCSearch.AddGroupLibraryAccessRequest) As SVCSearch.AddGroupLibraryAccessResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/AddGroupLibraryAccess", ReplyAction:="http://tempuri.org/IService1/AddGroupLibraryAccessResponse")>  _
        Function AddGroupLibraryAccessAsync(ByVal request As SVCSearch.AddGroupLibraryAccessRequest) As System.Threading.Tasks.Task(Of SVCSearch.AddGroupLibraryAccessResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/AddGroupUser", ReplyAction:="http://tempuri.org/IService1/AddGroupUserResponse")>  _
        Function AddGroupUser(ByVal SecureID As Integer, ByVal SessionID As String, ByVal CurrUserID As String, ByVal UserID As String, ByVal FullAccess As String, ByVal ReadOnlyAccess As String, ByVal DeleteAccess As String, ByVal Searchable As String, ByVal GroupOwnerUserID As String, ByVal GroupName As String, ByVal ControlSection As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/AddGroupUser", ReplyAction:="http://tempuri.org/IService1/AddGroupUserResponse")>  _
        Function AddGroupUserAsync(ByVal SecureID As Integer, ByVal SessionID As String, ByVal CurrUserID As String, ByVal UserID As String, ByVal FullAccess As String, ByVal ReadOnlyAccess As String, ByVal DeleteAccess As String, ByVal Searchable As String, ByVal GroupOwnerUserID As String, ByVal GroupName As String, ByVal ControlSection As String) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/DBExecuteEncryptedSql", ReplyAction:="http://tempuri.org/IService1/DBExecuteEncryptedSqlResponse")>  _
        Function DBExecuteEncryptedSql(ByVal request As SVCSearch.DBExecuteEncryptedSqlRequest) As SVCSearch.DBExecuteEncryptedSqlResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/DBExecuteEncryptedSql", ReplyAction:="http://tempuri.org/IService1/DBExecuteEncryptedSqlResponse")>  _
        Function DBExecuteEncryptedSqlAsync(ByVal request As SVCSearch.DBExecuteEncryptedSqlRequest) As System.Threading.Tasks.Task(Of SVCSearch.DBExecuteEncryptedSqlResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/validateAttachSecureLogin", ReplyAction:="http://tempuri.org/IService1/validateAttachSecureLoginResponse")>  _
        Function validateAttachSecureLogin(ByVal request As SVCSearch.validateAttachSecureLoginRequest) As SVCSearch.validateAttachSecureLoginResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/validateAttachSecureLogin", ReplyAction:="http://tempuri.org/IService1/validateAttachSecureLoginResponse")>  _
        Function validateAttachSecureLoginAsync(ByVal request As SVCSearch.validateAttachSecureLoginRequest) As System.Threading.Tasks.Task(Of SVCSearch.validateAttachSecureLoginResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetXrtTest", ReplyAction:="http://tempuri.org/IService1/GetXrtTestResponse")>  _
        Function GetXrtTest(ByVal dt As Date) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetXrtTest", ReplyAction:="http://tempuri.org/IService1/GetXrtTestResponse")>  _
        Function GetXrtTestAsync(ByVal dt As Date) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ckContentFlags", ReplyAction:="http://tempuri.org/IService1/ckContentFlagsResponse")>  _
        Function ckContentFlags(ByVal request As SVCSearch.ckContentFlagsRequest) As SVCSearch.ckContentFlagsResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ckContentFlags", ReplyAction:="http://tempuri.org/IService1/ckContentFlagsResponse")>  _
        Function ckContentFlagsAsync(ByVal request As SVCSearch.ckContentFlagsRequest) As System.Threading.Tasks.Task(Of SVCSearch.ckContentFlagsResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getCustomerLogoTitle", ReplyAction:="http://tempuri.org/IService1/getCustomerLogoTitleResponse")>  _
        Function getCustomerLogoTitle() As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getCustomerLogoTitle", ReplyAction:="http://tempuri.org/IService1/getCustomerLogoTitleResponse")>  _
        Function getCustomerLogoTitleAsync() As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getExplodeEmailZip", ReplyAction:="http://tempuri.org/IService1/getExplodeEmailZipResponse")>  _
        Function getExplodeEmailZip() As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getExplodeEmailZip", ReplyAction:="http://tempuri.org/IService1/getExplodeEmailZipResponse")>  _
        Function getExplodeEmailZipAsync() As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getFacilityName", ReplyAction:="http://tempuri.org/IService1/getFacilityNameResponse")>  _
        Function getFacilityName() As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getFacilityName", ReplyAction:="http://tempuri.org/IService1/getFacilityNameResponse")>  _
        Function getFacilityNameAsync() As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getAffinitydelay", ReplyAction:="http://tempuri.org/IService1/getAffinitydelayResponse")>  _
        Function getAffinitydelay() As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getAffinitydelay", ReplyAction:="http://tempuri.org/IService1/getAffinitydelayResponse")>  _
        Function getAffinitydelayAsync() As System.Threading.Tasks.Task(Of Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getClcURL", ReplyAction:="http://tempuri.org/IService1/getClcURLResponse")>  _
        Function getClcURL() As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getClcURL", ReplyAction:="http://tempuri.org/IService1/getClcURLResponse")>  _
        Function getClcURLAsync() As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getArchiverURL", ReplyAction:="http://tempuri.org/IService1/getArchiverURLResponse")>  _
        Function getArchiverURL() As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getArchiverURL", ReplyAction:="http://tempuri.org/IService1/getArchiverURLResponse")>  _
        Function getArchiverURLAsync() As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExecuteSqlStack", ReplyAction:="http://tempuri.org/IService1/ExecuteSqlStackResponse")>  _
        Function ExecuteSqlStack(ByVal request As SVCSearch.ExecuteSqlStackRequest) As SVCSearch.ExecuteSqlStackResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ExecuteSqlStack", ReplyAction:="http://tempuri.org/IService1/ExecuteSqlStackResponse")>  _
        Function ExecuteSqlStackAsync(ByVal request As SVCSearch.ExecuteSqlStackRequest) As System.Threading.Tasks.Task(Of SVCSearch.ExecuteSqlStackResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getDefaultScreen", ReplyAction:="http://tempuri.org/IService1/getDefaultScreenResponse")>  _
        Function getDefaultScreen(ByVal SecureID As Integer, ByVal UserID As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getDefaultScreen", ReplyAction:="http://tempuri.org/IService1/getDefaultScreenResponse")>  _
        Function getDefaultScreenAsync(ByVal SecureID As Integer, ByVal UserID As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/RecallUserSearch", ReplyAction:="http://tempuri.org/IService1/RecallUserSearchResponse")>  _
        Function RecallUserSearch(ByVal request As SVCSearch.RecallUserSearchRequest) As SVCSearch.RecallUserSearchResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/RecallUserSearch", ReplyAction:="http://tempuri.org/IService1/RecallUserSearchResponse")>  _
        Function RecallUserSearchAsync(ByVal request As SVCSearch.RecallUserSearchRequest) As System.Threading.Tasks.Task(Of SVCSearch.RecallUserSearchResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/SaveUserSearch", ReplyAction:="http://tempuri.org/IService1/SaveUserSearchResponse")>  _
        Function SaveUserSearch(ByVal SecureID As Integer, ByVal SearchName As String, ByVal UID As String, ByVal strSearches As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/SaveUserSearch", ReplyAction:="http://tempuri.org/IService1/SaveUserSearchResponse")>  _
        Function SaveUserSearchAsync(ByVal SecureID As Integer, ByVal SearchName As String, ByVal UID As String, ByVal strSearches As String) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/scheduleFileDownLoad", ReplyAction:="http://tempuri.org/IService1/scheduleFileDownLoadResponse")>  _
        Function scheduleFileDownLoad(ByVal SecureID As Integer, ByVal ContentGuid As String, ByVal UserID As String, ByVal ContentType As String, ByVal Preview As Integer, ByVal Restore As Integer) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/scheduleFileDownLoad", ReplyAction:="http://tempuri.org/IService1/scheduleFileDownLoadResponse")>  _
        Function scheduleFileDownLoadAsync(ByVal SecureID As Integer, ByVal ContentGuid As String, ByVal UserID As String, ByVal ContentType As String, ByVal Preview As Integer, ByVal Restore As Integer) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetContentMetaData", ReplyAction:="http://tempuri.org/IService1/GetContentMetaDataResponse")>  _
        Function GetContentMetaData(ByVal SecureID As Integer, ByVal SourceGuid As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetContentMetaData", ReplyAction:="http://tempuri.org/IService1/GetContentMetaDataResponse")>  _
        Function GetContentMetaDataAsync(ByVal SecureID As Integer, ByVal SourceGuid As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/removeRestoreFileByGuid", ReplyAction:="http://tempuri.org/IService1/removeRestoreFileByGuidResponse")>  _
        Function removeRestoreFileByGuid(ByVal SecureID As Integer, ByVal RowGuid As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/removeRestoreFileByGuid", ReplyAction:="http://tempuri.org/IService1/removeRestoreFileByGuidResponse")>  _
        Function removeRestoreFileByGuidAsync(ByVal SecureID As Integer, ByVal RowGuid As String) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/removeRestoreFiles", ReplyAction:="http://tempuri.org/IService1/removeRestoreFilesResponse")>  _
        Function removeRestoreFiles(ByVal request As SVCSearch.removeRestoreFilesRequest) As SVCSearch.removeRestoreFilesResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/removeRestoreFiles", ReplyAction:="http://tempuri.org/IService1/removeRestoreFilesResponse")>  _
        Function removeRestoreFilesAsync(ByVal request As SVCSearch.removeRestoreFilesRequest) As System.Threading.Tasks.Task(Of SVCSearch.removeRestoreFilesResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getRestoreFileCount", ReplyAction:="http://tempuri.org/IService1/getRestoreFileCountResponse")>  _
        Function getRestoreFileCount(ByVal request As SVCSearch.getRestoreFileCountRequest) As SVCSearch.getRestoreFileCountResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getRestoreFileCount", ReplyAction:="http://tempuri.org/IService1/getRestoreFileCountResponse")>  _
        Function getRestoreFileCountAsync(ByVal request As SVCSearch.getRestoreFileCountRequest) As System.Threading.Tasks.Task(Of SVCSearch.getRestoreFileCountResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/saveRestoreFile", ReplyAction:="http://tempuri.org/IService1/saveRestoreFileResponse")>  _
        Function saveRestoreFile(ByVal request As SVCSearch.saveRestoreFileRequest) As SVCSearch.saveRestoreFileResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/saveRestoreFile", ReplyAction:="http://tempuri.org/IService1/saveRestoreFileResponse")>  _
        Function saveRestoreFileAsync(ByVal request As SVCSearch.saveRestoreFileRequest) As System.Threading.Tasks.Task(Of SVCSearch.saveRestoreFileResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GenEmailAttachmentsSQL", ReplyAction:="http://tempuri.org/IService1/GenEmailAttachmentsSQLResponse"),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, String))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, Date))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(String())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of String, Integer))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(Object())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(System.Collections.Generic.Dictionary(Of Integer, String))),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSCREENSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSCREENSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_clsUSERGRIDSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_clsUSERGRIDSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_CONTENT())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_CONTENT)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_EMAIL())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_EMAIL)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_License())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_License)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_VUserGrid())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_VUserGrid)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSEARCHSTATE())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_USERSEARCHSTATE)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_SearchTerms())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_SearchTerms)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings02())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings02)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings03())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings03)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings04())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(SVCSearch.DS_ListOfStrings04))>  _
        Function GenEmailAttachmentsSQL(ByVal request As SVCSearch.GenEmailAttachmentsSQLRequest) As SVCSearch.GenEmailAttachmentsSQLResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GenEmailAttachmentsSQL", ReplyAction:="http://tempuri.org/IService1/GenEmailAttachmentsSQLResponse")>  _
        Function GenEmailAttachmentsSQLAsync(ByVal request As SVCSearch.GenEmailAttachmentsSQLRequest) As System.Threading.Tasks.Task(Of SVCSearch.GenEmailAttachmentsSQLResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GenEmailGeneratedSQL", ReplyAction:="http://tempuri.org/IService1/GenEmailGeneratedSQLResponse")>  _
        Function GenEmailGeneratedSQL(ByVal request As SVCSearch.GenEmailGeneratedSQLRequest) As SVCSearch.GenEmailGeneratedSQLResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GenEmailGeneratedSQL", ReplyAction:="http://tempuri.org/IService1/GenEmailGeneratedSQLResponse")>  _
        Function GenEmailGeneratedSQLAsync(ByVal request As SVCSearch.GenEmailGeneratedSQLRequest) As System.Threading.Tasks.Task(Of SVCSearch.GenEmailGeneratedSQLResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GenContentSearchSQL", ReplyAction:="http://tempuri.org/IService1/GenContentSearchSQLResponse")>  _
        Function GenContentSearchSQL(ByVal request As SVCSearch.GenContentSearchSQLRequest) As SVCSearch.GenContentSearchSQLResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GenContentSearchSQL", ReplyAction:="http://tempuri.org/IService1/GenContentSearchSQLResponse")>  _
        Function GenContentSearchSQLAsync(ByVal request As SVCSearch.GenContentSearchSQLRequest) As System.Threading.Tasks.Task(Of SVCSearch.GenContentSearchSQLResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ChangeUserContentPublic", ReplyAction:="http://tempuri.org/IService1/ChangeUserContentPublicResponse")>  _
        Function ChangeUserContentPublic(ByVal request As SVCSearch.ChangeUserContentPublicRequest) As SVCSearch.ChangeUserContentPublicResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/ChangeUserContentPublic", ReplyAction:="http://tempuri.org/IService1/ChangeUserContentPublicResponse")>  _
        Function ChangeUserContentPublicAsync(ByVal request As SVCSearch.ChangeUserContentPublicRequest) As System.Threading.Tasks.Task(Of SVCSearch.ChangeUserContentPublicResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/Refactor", ReplyAction:="http://tempuri.org/IService1/RefactorResponse")>  _
        Function Refactor(ByVal request As SVCSearch.RefactorRequest) As SVCSearch.RefactorResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/Refactor", ReplyAction:="http://tempuri.org/IService1/RefactorResponse")>  _
        Function RefactorAsync(ByVal request As SVCSearch.RefactorRequest) As System.Threading.Tasks.Task(Of SVCSearch.RefactorResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSAASState", ReplyAction:="http://tempuri.org/IService1/getSAASStateResponse")>  _
        Function getSAASState(ByVal request As SVCSearch.getSAASStateRequest) As SVCSearch.getSAASStateResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSAASState", ReplyAction:="http://tempuri.org/IService1/getSAASStateResponse")>  _
        Function getSAASStateAsync(ByVal request As SVCSearch.getSAASStateRequest) As System.Threading.Tasks.Task(Of SVCSearch.getSAASStateResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/SetSAASState", ReplyAction:="http://tempuri.org/IService1/SetSAASStateResponse")>  _
        Function SetSAASState(ByVal SecureID As Integer, ByVal UserID As String, ByVal DirName As String, ByVal FullPath As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/SetSAASState", ReplyAction:="http://tempuri.org/IService1/SetSAASStateResponse")>  _
        Function SetSAASStateAsync(ByVal SecureID As Integer, ByVal UserID As String, ByVal DirName As String, ByVal FullPath As String) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getListOfStrings01", ReplyAction:="http://tempuri.org/IService1/getListOfStrings01Response")>  _
        Function getListOfStrings01(ByVal request As SVCSearch.getListOfStrings01Request) As SVCSearch.getListOfStrings01Response
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getListOfStrings01", ReplyAction:="http://tempuri.org/IService1/getListOfStrings01Response")>  _
        Function getListOfStrings01Async(ByVal request As SVCSearch.getListOfStrings01Request) As System.Threading.Tasks.Task(Of SVCSearch.getListOfStrings01Response)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getListOfStrings02", ReplyAction:="http://tempuri.org/IService1/getListOfStrings02Response")>  _
        Function getListOfStrings02(ByVal request As SVCSearch.getListOfStrings02Request) As SVCSearch.getListOfStrings02Response
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getListOfStrings02", ReplyAction:="http://tempuri.org/IService1/getListOfStrings02Response")>  _
        Function getListOfStrings02Async(ByVal request As SVCSearch.getListOfStrings02Request) As System.Threading.Tasks.Task(Of SVCSearch.getListOfStrings02Response)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getListOfStrings03", ReplyAction:="http://tempuri.org/IService1/getListOfStrings03Response")>  _
        Function getListOfStrings03(ByVal request As SVCSearch.getListOfStrings03Request) As SVCSearch.getListOfStrings03Response
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getListOfStrings03", ReplyAction:="http://tempuri.org/IService1/getListOfStrings03Response")>  _
        Function getListOfStrings03Async(ByVal request As SVCSearch.getListOfStrings03Request) As System.Threading.Tasks.Task(Of SVCSearch.getListOfStrings03Response)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getListOfStrings04", ReplyAction:="http://tempuri.org/IService1/getListOfStrings04Response")>  _
        Function getListOfStrings04(ByVal request As SVCSearch.getListOfStrings04Request) As SVCSearch.getListOfStrings04Response
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getListOfStrings04", ReplyAction:="http://tempuri.org/IService1/getListOfStrings04Response")>  _
        Function getListOfStrings04Async(ByVal request As SVCSearch.getListOfStrings04Request) As System.Threading.Tasks.Task(Of SVCSearch.getListOfStrings04Response)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateLibraryUsersGrid", ReplyAction:="http://tempuri.org/IService1/PopulateLibraryUsersGridResponse")>  _
        Function PopulateLibraryUsersGrid(ByVal request As SVCSearch.PopulateLibraryUsersGridRequest) As SVCSearch.PopulateLibraryUsersGridResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateLibraryUsersGrid", ReplyAction:="http://tempuri.org/IService1/PopulateLibraryUsersGridResponse")>  _
        Function PopulateLibraryUsersGridAsync(ByVal request As SVCSearch.PopulateLibraryUsersGridRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateLibraryUsersGridResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getUserAuth", ReplyAction:="http://tempuri.org/IService1/getUserAuthResponse")>  _
        Function getUserAuth(ByVal request As SVCSearch.getUserAuthRequest) As SVCSearch.getUserAuthResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getUserAuth", ReplyAction:="http://tempuri.org/IService1/getUserAuthResponse")>  _
        Function getUserAuthAsync(ByVal request As SVCSearch.getUserAuthRequest) As System.Threading.Tasks.Task(Of SVCSearch.getUserAuthResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/DeleteUser", ReplyAction:="http://tempuri.org/IService1/DeleteUserResponse")>  _
        Function DeleteUser(ByVal request As SVCSearch.DeleteUserRequest) As SVCSearch.DeleteUserResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/DeleteUser", ReplyAction:="http://tempuri.org/IService1/DeleteUserResponse")>  _
        Function DeleteUserAsync(ByVal request As SVCSearch.DeleteUserRequest) As System.Threading.Tasks.Task(Of SVCSearch.DeleteUserResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/SaveUSer", ReplyAction:="http://tempuri.org/IService1/SaveUSerResponse")>  _
        Function SaveUSer(ByVal request As SVCSearch.SaveUSerRequest) As SVCSearch.SaveUSerResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/SaveUSer", ReplyAction:="http://tempuri.org/IService1/SaveUSerResponse")>  _
        Function SaveUSerAsync(ByVal request As SVCSearch.SaveUSerRequest) As System.Threading.Tasks.Task(Of SVCSearch.SaveUSerResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/saveSearchSchedule", ReplyAction:="http://tempuri.org/IService1/saveSearchScheduleResponse")>  _
        Function saveSearchSchedule(ByVal request As SVCSearch.saveSearchScheduleRequest) As SVCSearch.saveSearchScheduleResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/saveSearchSchedule", ReplyAction:="http://tempuri.org/IService1/saveSearchScheduleResponse")>  _
        Function saveSearchScheduleAsync(ByVal request As SVCSearch.saveSearchScheduleRequest) As System.Threading.Tasks.Task(Of SVCSearch.saveSearchScheduleResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSearchSchedule", ReplyAction:="http://tempuri.org/IService1/getSearchScheduleResponse")>  _
        Function getSearchSchedule(ByVal request As SVCSearch.getSearchScheduleRequest) As SVCSearch.getSearchScheduleResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/getSearchSchedule", ReplyAction:="http://tempuri.org/IService1/getSearchScheduleResponse")>  _
        Function getSearchScheduleAsync(ByVal request As SVCSearch.getSearchScheduleRequest) As System.Threading.Tasks.Task(Of SVCSearch.getSearchScheduleResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/InsertCoOwner", ReplyAction:="http://tempuri.org/IService1/InsertCoOwnerResponse")>  _
        Function InsertCoOwner(ByVal SecureID As Integer, ByVal CurrentOwner As String, ByVal CoOwner As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/InsertCoOwner", ReplyAction:="http://tempuri.org/IService1/InsertCoOwnerResponse")>  _
        Function InsertCoOwnerAsync(ByVal SecureID As Integer, ByVal CurrentOwner As String, ByVal CoOwner As String) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateCoOwnerGrid", ReplyAction:="http://tempuri.org/IService1/PopulateCoOwnerGridResponse")>  _
        Function PopulateCoOwnerGrid(ByVal SecureID As Integer, ByVal UID As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/PopulateCoOwnerGrid", ReplyAction:="http://tempuri.org/IService1/PopulateCoOwnerGridResponse")>  _
        Function PopulateCoOwnerGridAsync(ByVal SecureID As Integer, ByVal UID As String) As System.Threading.Tasks.Task(Of String)
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="saveSearchState", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class saveSearchStateRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SearchID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public UID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public ScreenName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public DICT As System.Collections.Generic.Dictionary(Of String, String)
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public rMsg As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public HiveConnectionName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public HiveActive As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=9)>  _
        Public RepoSvrName As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal SearchID As Integer, ByVal UID As String, ByVal ScreenName As String, ByVal DICT As System.Collections.Generic.Dictionary(Of String, String), ByVal rMsg As String, ByVal RC As Boolean, ByVal HiveConnectionName As String, ByVal HiveActive As Boolean, ByVal RepoSvrName As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.SearchID = SearchID
            Me.UID = UID
            Me.ScreenName = ScreenName
            Me.DICT = DICT
            Me.rMsg = rMsg
            Me.RC = RC
            Me.HiveConnectionName = HiveConnectionName
            Me.HiveActive = HiveActive
            Me.RepoSvrName = RepoSvrName
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="saveSearchStateResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class saveSearchStateResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public rMsg As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal rMsg As String, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.rMsg = rMsg
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getScreenState", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getScreenStateRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public ScreenName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public DICT As System.Collections.Generic.Dictionary(Of String, String)
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public rMsg As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public HiveConnectionName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public HiveActive As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public RepoSvrName As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal UID As String, ByVal ScreenName As String, ByVal DICT As System.Collections.Generic.Dictionary(Of String, String), ByVal rMsg As String, ByVal RC As Boolean, ByVal HiveConnectionName As String, ByVal HiveActive As Boolean, ByVal RepoSvrName As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.UID = UID
            Me.ScreenName = ScreenName
            Me.DICT = DICT
            Me.rMsg = rMsg
            Me.RC = RC
            Me.HiveConnectionName = HiveConnectionName
            Me.HiveActive = HiveActive
            Me.RepoSvrName = RepoSvrName
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getScreenStateResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getScreenStateResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getScreenStateResult() As SVCSearch.DS_USERSCREENSTATE
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public DICT As System.Collections.Generic.Dictionary(Of String, String)
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public rMsg As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getScreenStateResult() As SVCSearch.DS_USERSCREENSTATE, ByVal SecureID As Integer, ByVal DICT As System.Collections.Generic.Dictionary(Of String, String), ByVal rMsg As String, ByVal RC As Boolean)
            MyBase.New
            Me.getScreenStateResult = getScreenStateResult
            Me.SecureID = SecureID
            Me.DICT = DICT
            Me.rMsg = rMsg
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getGridLayout", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getGridLayoutRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public ScreenName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public GridName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public DICT As System.Collections.Generic.Dictionary(Of String, String)
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public rMsg As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public HiveConnectionName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public HiveActive As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=9)>  _
        Public RepoSvrName As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal UID As String, ByVal ScreenName As String, ByVal GridName As String, ByVal DICT As System.Collections.Generic.Dictionary(Of String, String), ByVal rMsg As String, ByVal RC As Boolean, ByVal HiveConnectionName As String, ByVal HiveActive As Boolean, ByVal RepoSvrName As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.UID = UID
            Me.ScreenName = ScreenName
            Me.GridName = GridName
            Me.DICT = DICT
            Me.rMsg = rMsg
            Me.RC = RC
            Me.HiveConnectionName = HiveConnectionName
            Me.HiveActive = HiveActive
            Me.RepoSvrName = RepoSvrName
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getGridLayoutResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getGridLayoutResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getGridLayoutResult() As SVCSearch.DS_clsUSERGRIDSTATE
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public rMsg As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getGridLayoutResult() As SVCSearch.DS_clsUSERGRIDSTATE, ByVal SecureID As Integer, ByVal rMsg As String, ByVal RC As Boolean)
            MyBase.New
            Me.getGridLayoutResult = getGridLayoutResult
            Me.SecureID = SecureID
            Me.rMsg = rMsg
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="saveGridLayout", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class saveGridLayoutRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public ScreenName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public GridName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public ColName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public ColOrder As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public ColWidth As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public ColVisible As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public ColReadOnly As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=9)>  _
        Public ColSortOrder As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=10)>  _
        Public ColSortAsc As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=11)>  _
        Public HiveConnectionName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=12)>  _
        Public HiveActive As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=13)>  _
        Public RepoSvrName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=14)>  _
        Public RowCreationDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=15)>  _
        Public RowLastModDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=16)>  _
        Public RowNbr As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=17)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=18)>  _
        Public rMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New( _
                    ByVal SecureID As Integer,  _
                    ByVal UserID As String,  _
                    ByVal ScreenName As String,  _
                    ByVal GridName As String,  _
                    ByVal ColName As String,  _
                    ByVal ColOrder As Integer,  _
                    ByVal ColWidth As Integer,  _
                    ByVal ColVisible As Boolean,  _
                    ByVal ColReadOnly As Boolean,  _
                    ByVal ColSortOrder As Integer,  _
                    ByVal ColSortAsc As Boolean,  _
                    ByVal HiveConnectionName As String,  _
                    ByVal HiveActive As Boolean,  _
                    ByVal RepoSvrName As String,  _
                    ByVal RowCreationDate As Date,  _
                    ByVal RowLastModDate As Date,  _
                    ByVal RowNbr As Integer,  _
                    ByVal RC As Boolean,  _
                    ByVal rMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.UserID = UserID
            Me.ScreenName = ScreenName
            Me.GridName = GridName
            Me.ColName = ColName
            Me.ColOrder = ColOrder
            Me.ColWidth = ColWidth
            Me.ColVisible = ColVisible
            Me.ColReadOnly = ColReadOnly
            Me.ColSortOrder = ColSortOrder
            Me.ColSortAsc = ColSortAsc
            Me.HiveConnectionName = HiveConnectionName
            Me.HiveActive = HiveActive
            Me.RepoSvrName = RepoSvrName
            Me.RowCreationDate = RowCreationDate
            Me.RowLastModDate = RowLastModDate
            Me.RowNbr = RowNbr
            Me.RC = RC
            Me.rMsg = rMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="saveGridLayoutResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class saveGridLayoutResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public ScreenName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public GridName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public ColName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public ColOrder As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public ColWidth As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public ColVisible As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public ColReadOnly As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=9)>  _
        Public ColSortOrder As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=10)>  _
        Public ColSortAsc As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=11)>  _
        Public HiveConnectionName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=12)>  _
        Public HiveActive As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=13)>  _
        Public RepoSvrName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=14)>  _
        Public RowCreationDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=15)>  _
        Public RowLastModDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=16)>  _
        Public RowNbr As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=17)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=18)>  _
        Public rMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New( _
                    ByVal SecureID As Integer,  _
                    ByVal UserID As String,  _
                    ByVal ScreenName As String,  _
                    ByVal GridName As String,  _
                    ByVal ColName As String,  _
                    ByVal ColOrder As Integer,  _
                    ByVal ColWidth As Integer,  _
                    ByVal ColVisible As Boolean,  _
                    ByVal ColReadOnly As Boolean,  _
                    ByVal ColSortOrder As Integer,  _
                    ByVal ColSortAsc As Boolean,  _
                    ByVal HiveConnectionName As String,  _
                    ByVal HiveActive As Boolean,  _
                    ByVal RepoSvrName As String,  _
                    ByVal RowCreationDate As Date,  _
                    ByVal RowLastModDate As Date,  _
                    ByVal RowNbr As Integer,  _
                    ByVal RC As Boolean,  _
                    ByVal rMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.UserID = UserID
            Me.ScreenName = ScreenName
            Me.GridName = GridName
            Me.ColName = ColName
            Me.ColOrder = ColOrder
            Me.ColWidth = ColWidth
            Me.ColVisible = ColVisible
            Me.ColReadOnly = ColReadOnly
            Me.ColSortOrder = ColSortOrder
            Me.ColSortAsc = ColSortAsc
            Me.HiveConnectionName = HiveConnectionName
            Me.HiveActive = HiveActive
            Me.RepoSvrName = RepoSvrName
            Me.RowCreationDate = RowCreationDate
            Me.RowLastModDate = RowLastModDate
            Me.RowNbr = RowNbr
            Me.RC = RC
            Me.rMsg = rMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="saveScreenState", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class saveScreenStateRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public ScreenName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public DICT As System.Collections.Generic.Dictionary(Of String, String)
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public rMsg As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public HiveConnectionName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public HiveActive As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public RepoSvrName As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal UID As String, ByVal ScreenName As String, ByVal DICT As System.Collections.Generic.Dictionary(Of String, String), ByVal rMsg As String, ByVal RC As Boolean, ByVal HiveConnectionName As String, ByVal HiveActive As Boolean, ByVal RepoSvrName As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.UID = UID
            Me.ScreenName = ScreenName
            Me.DICT = DICT
            Me.rMsg = rMsg
            Me.RC = RC
            Me.HiveConnectionName = HiveConnectionName
            Me.HiveActive = HiveActive
            Me.RepoSvrName = RepoSvrName
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="saveScreenStateResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class saveScreenStateResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public rMsg As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal rMsg As String, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.rMsg = rMsg
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getUserParms", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getUserParmsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public UserParms As System.Collections.Generic.Dictionary(Of String, String)
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal UserID As String, ByVal UserParms As System.Collections.Generic.Dictionary(Of String, String))
            MyBase.New
            Me.SecureID = SecureID
            Me.UserID = UserID
            Me.UserParms = UserParms
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getUserParmsResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getUserParmsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UserParms As System.Collections.Generic.Dictionary(Of String, String)
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal UserParms As System.Collections.Generic.Dictionary(Of String, String))
            MyBase.New
            Me.SecureID = SecureID
            Me.UserParms = UserParms
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ParseLicDictionary", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ParseLicDictionaryRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public S As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public D As System.Collections.Generic.Dictionary(Of String, String)
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal S As String, ByVal D As System.Collections.Generic.Dictionary(Of String, String))
            MyBase.New
            Me.SecureID = SecureID
            Me.S = S
            Me.D = D
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ParseLicDictionaryResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ParseLicDictionaryResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public D As System.Collections.Generic.Dictionary(Of String, String)
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal D As System.Collections.Generic.Dictionary(Of String, String))
            MyBase.New
            Me.SecureID = SecureID
            Me.D = D
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="LicenseType", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class LicenseTypeRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="LicenseTypeResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class LicenseTypeResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public LicenseTypeResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal LicenseTypeResult As String, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.LicenseTypeResult = LicenseTypeResult
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetNbrUsers", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetNbrUsersRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetNbrUsersResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetNbrUsersResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public GetNbrUsersResult As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetNbrUsersResult As Integer, ByVal SecureID As Integer)
            MyBase.New
            Me.GetNbrUsersResult = GetNbrUsersResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="isLease", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class isLeaseRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="isLeaseResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class isLeaseResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public isLeaseResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal isLeaseResult As Boolean, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.isLeaseResult = isLeaseResult
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getMaxClients", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getMaxClientsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getMaxClientsResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getMaxClientsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getMaxClientsResult As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getMaxClientsResult As Integer, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.getMaxClientsResult = getMaxClientsResult
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetUserHostName", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetUserHostNameRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetUserHostNameResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetUserHostNameResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public GetUserHostNameResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetUserHostNameResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.GetUserHostNameResult = GetUserHostNameResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetUserHostAddress", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetUserHostAddressRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetUserHostAddressResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetUserHostAddressResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public GetUserHostAddressResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetUserHostAddressResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.GetUserHostAddressResult = GetUserHostAddressResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getUserGuidID", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getUserGuidIDRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UserLoginId As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal UserLoginId As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.UserLoginId = UserLoginId
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getUserGuidIDResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getUserGuidIDResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getUserGuidIDResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getUserGuidIDResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.getUserGuidIDResult = getUserGuidIDResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ProcessDates", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ProcessDatesRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ProcessDatesResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ProcessDatesResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public ProcessDatesResult As System.Collections.Generic.Dictionary(Of String, Date)
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ProcessDatesResult As System.Collections.Generic.Dictionary(Of String, Date), ByVal SecureID As Integer)
            MyBase.New
            Me.ProcessDatesResult = ProcessDatesResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetNbrMachineAll", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetNbrMachineAllRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetNbrMachineAllResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetNbrMachineAllResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public GetNbrMachineAllResult As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetNbrMachineAllResult As Integer, ByVal SecureID As Integer)
            MyBase.New
            Me.GetNbrMachineAllResult = GetNbrMachineAllResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetNbrMachine", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetNbrMachineRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public MachineName As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal MachineName As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.MachineName = MachineName
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetNbrMachineResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetNbrMachineResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public GetNbrMachineResult As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetNbrMachineResult As Integer, ByVal SecureID As Integer)
            MyBase.New
            Me.GetNbrMachineResult = GetNbrMachineResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="isLicenseLocatedOnAssignedMachine", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class isLicenseLocatedOnAssignedMachineRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public ServerValText As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public InstanceValText As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal ServerValText As String, ByVal InstanceValText As String, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.ServerValText = ServerValText
            Me.InstanceValText = InstanceValText
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="isLicenseLocatedOnAssignedMachineResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class isLicenseLocatedOnAssignedMachineResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public isLicenseLocatedOnAssignedMachineResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public ServerValText As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public InstanceValText As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal isLicenseLocatedOnAssignedMachineResult As Boolean, ByVal SecureID As Integer, ByVal ServerValText As String, ByVal InstanceValText As String, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.isLicenseLocatedOnAssignedMachineResult = isLicenseLocatedOnAssignedMachineResult
            Me.SecureID = SecureID
            Me.ServerValText = ServerValText
            Me.InstanceValText = InstanceValText
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetXrt", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetXrtRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetXrtResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetXrtResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public GetXrtResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetXrtResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.GetXrtResult = GetXrtResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSqlServerVersion", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getSqlServerVersionRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSqlServerVersionResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getSqlServerVersionResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getSqlServerVersionResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getSqlServerVersionResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.getSqlServerVersionResult = getSqlServerVersionResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="RecordGrowth", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class RecordGrowthRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="RecordGrowthResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class RecordGrowthResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ParseLic", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ParseLicRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public LT As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public tgtKey As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal LT As String, ByVal tgtKey As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.LT = LT
            Me.tgtKey = tgtKey
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ParseLicResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ParseLicResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public ParseLicResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ParseLicResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.ParseLicResult = ParseLicResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetLoggedinUserName", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetLoggedinUserNameRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetLoggedinUserNameResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetLoggedinUserNameResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public GetLoggedinUserNameResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetLoggedinUserNameResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.GetLoggedinUserNameResult = GetLoggedinUserNameResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getDBSIZEMB", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getDBSIZEMBRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getDBSIZEMBResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getDBSIZEMBResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getDBSIZEMBResult As Double
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getDBSIZEMBResult As Double, ByVal SecureID As Integer)
            MyBase.New
            Me.getDBSIZEMBResult = getDBSIZEMBResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="resetMissingEmailIds", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class resetMissingEmailIdsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public CurrUserGuidID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal CurrUserGuidID As String, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.CurrUserGuidID = CurrUserGuidID
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="resetMissingEmailIdsResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class resetMissingEmailIdsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="UserParmInsertUpdate", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class UserParmInsertUpdateRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public ParmName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public ParmVal As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal ParmName As String, ByVal UserID As String, ByVal ParmVal As String, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.ParmName = ParmName
            Me.UserID = UserID
            Me.ParmVal = ParmVal
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="UserParmInsertUpdateResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class UserParmInsertUpdateResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="validateLogin", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class validateLoginRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UserLogin As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public PW As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public UserGuidID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal UserLogin As String, ByVal PW As String, ByVal UserGuidID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.UserLogin = UserLogin
            Me.PW = PW
            Me.UserGuidID = UserGuidID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="validateLoginResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class validateLoginResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public validateLoginResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public UserGuidID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal validateLoginResult As Boolean, ByVal SecureID As Integer, ByVal UserGuidID As String)
            MyBase.New
            Me.validateLoginResult = validateLoginResult
            Me.SecureID = SecureID
            Me.UserGuidID = UserGuidID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getLoggedInUser", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getLoggedInUserRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getLoggedInUserResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getLoggedInUserResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getLoggedInUserResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getLoggedInUserResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.getLoggedInUserResult = getLoggedInUserResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getAttachedMachineName", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getAttachedMachineNameRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getAttachedMachineNameResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getAttachedMachineNameResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getAttachedMachineNameResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getAttachedMachineNameResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.getAttachedMachineNameResult = getAttachedMachineNameResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getServerInstanceName", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getServerInstanceNameRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getServerInstanceNameResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getServerInstanceNameResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getServerInstanceNameResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getServerInstanceNameResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.getServerInstanceNameResult = getServerInstanceNameResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getServerMachineName", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getServerMachineNameRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getServerMachineNameResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getServerMachineNameResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getServerMachineNameResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getServerMachineNameResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.getServerMachineNameResult = getServerMachineNameResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSystemParm", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getSystemParmRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SystemParms As System.Collections.Generic.Dictionary(Of String, String)
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal SystemParms As System.Collections.Generic.Dictionary(Of String, String))
            MyBase.New
            Me.SecureID = SecureID
            Me.SystemParms = SystemParms
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSystemParmResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getSystemParmResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SystemParms As System.Collections.Generic.Dictionary(Of String, String)
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal SystemParms As System.Collections.Generic.Dictionary(Of String, String))
            MyBase.New
            Me.SecureID = SecureID
            Me.SystemParms = SystemParms
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSynonyms", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getSynonymsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public ThesaurusID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public Token As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public lbSynonyms As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal ThesaurusID As String, ByVal Token As String, ByVal lbSynonyms As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.ThesaurusID = ThesaurusID
            Me.Token = Token
            Me.lbSynonyms = lbSynonyms
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSynonymsResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getSynonymsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getSynonymsResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public lbSynonyms As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getSynonymsResult As String, ByVal SecureID As Integer, ByVal lbSynonyms As String)
            MyBase.New
            Me.getSynonymsResult = getSynonymsResult
            Me.SecureID = SecureID
            Me.lbSynonyms = lbSynonyms
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getThesaurusID", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getThesaurusIDRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public ThesaurusName As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal ThesaurusName As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.ThesaurusName = ThesaurusName
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getThesaurusIDResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getThesaurusIDResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getThesaurusIDResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getThesaurusIDResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.getThesaurusIDResult = getThesaurusIDResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="iCountContent", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class iCountContentRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public S As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal S As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.S = S
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="iCountContentResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class iCountContentResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public iCountContentResult As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal iCountContentResult As Integer, ByVal SecureID As Integer)
            MyBase.New
            Me.iCountContentResult = iCountContentResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getDatasourceParm", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getDatasourceParmRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public AttributeName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public SourceGuid As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal AttributeName As String, ByVal SourceGuid As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.AttributeName = AttributeName
            Me.SourceGuid = SourceGuid
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getDatasourceParmResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getDatasourceParmResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getDatasourceParmResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getDatasourceParmResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.getDatasourceParmResult = getDatasourceParmResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="SaveRunParm", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class SaveRunParmRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public ParmID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public ParmVal As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal UserID As String, ByVal ParmID As String, ByVal ParmVal As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.UserID = UserID
            Me.ParmID = ParmID
            Me.ParmVal = ParmVal
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="SaveRunParmResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class SaveRunParmResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SaveRunParmResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public ParmID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public ParmVal As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SaveRunParmResult As Boolean, ByVal SecureID As Integer, ByVal ParmID As String, ByVal ParmVal As String)
            MyBase.New
            Me.SaveRunParmResult = SaveRunParmResult
            Me.SecureID = SecureID
            Me.ParmID = ParmID
            Me.ParmVal = ParmVal
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="iGetRowCount", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class iGetRowCountRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public TBL As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public WhereClause As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal TBL As String, ByVal WhereClause As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.TBL = TBL
            Me.WhereClause = WhereClause
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="iGetRowCountResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class iGetRowCountResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public iGetRowCountResult As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal iGetRowCountResult As Integer, ByVal SecureID As Integer)
            MyBase.New
            Me.iGetRowCountResult = iGetRowCountResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ZeroizeGlobalSearch", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ZeroizeGlobalSearchRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ZeroizeGlobalSearchResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ZeroizeGlobalSearchResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public ZeroizeGlobalSearchResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ZeroizeGlobalSearchResult As Boolean, ByVal SecureID As Integer)
            MyBase.New
            Me.ZeroizeGlobalSearchResult = ZeroizeGlobalSearchResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="updateIp", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class updateIpRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public HostName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public IP As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public checkCode As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal HostName As String, ByVal IP As String, ByVal checkCode As Integer, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.HostName = HostName
            Me.IP = IP
            Me.checkCode = checkCode
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="updateIpResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class updateIpResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateSourceGridWithWeights", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateSourceGridWithWeightsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public StartingRow As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public EndingRow As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public CallerName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public MySql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public bNewRows As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public SourceRowCnt As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal StartingRow As Integer, ByVal EndingRow As Integer, ByVal CallerName As String, ByVal MySql As String, ByVal bNewRows As Boolean, ByVal SourceRowCnt As Integer)
            MyBase.New
            Me.SecureID = SecureID
            Me.StartingRow = StartingRow
            Me.EndingRow = EndingRow
            Me.CallerName = CallerName
            Me.MySql = MySql
            Me.bNewRows = bNewRows
            Me.SourceRowCnt = SourceRowCnt
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateSourceGridWithWeightsResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateSourceGridWithWeightsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public PopulateSourceGridWithWeightsResult() As SVCSearch.DS_CONTENT
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public bNewRows As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public SourceRowCnt As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal PopulateSourceGridWithWeightsResult() As SVCSearch.DS_CONTENT, ByVal SecureID As Integer, ByVal bNewRows As Boolean, ByVal SourceRowCnt As Integer)
            MyBase.New
            Me.PopulateSourceGridWithWeightsResult = PopulateSourceGridWithWeightsResult
            Me.SecureID = SecureID
            Me.bNewRows = bNewRows
            Me.SourceRowCnt = SourceRowCnt
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateSourceGridNoWeights", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateSourceGridNoWeightsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public StartingRow As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public EndingRow As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public CallerName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public MySql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public bNewRows As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public SourceRowCnt As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal StartingRow As Integer, ByVal EndingRow As Integer, ByVal CallerName As String, ByVal MySql As String, ByVal bNewRows As Boolean, ByVal SourceRowCnt As Integer)
            MyBase.New
            Me.SecureID = SecureID
            Me.StartingRow = StartingRow
            Me.EndingRow = EndingRow
            Me.CallerName = CallerName
            Me.MySql = MySql
            Me.bNewRows = bNewRows
            Me.SourceRowCnt = SourceRowCnt
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateSourceGridNoWeightsResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateSourceGridNoWeightsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public PopulateSourceGridNoWeightsResult() As SVCSearch.DS_CONTENT
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public bNewRows As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public SourceRowCnt As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal PopulateSourceGridNoWeightsResult() As SVCSearch.DS_CONTENT, ByVal SecureID As Integer, ByVal bNewRows As Boolean, ByVal SourceRowCnt As Integer)
            MyBase.New
            Me.PopulateSourceGridNoWeightsResult = PopulateSourceGridNoWeightsResult
            Me.SecureID = SecureID
            Me.bNewRows = bNewRows
            Me.SourceRowCnt = SourceRowCnt
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateEmailGridWithNoWeights", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateEmailGridWithNoWeightsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public CallerName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public MySql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public nbrWeightMin As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public StartingRow As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public EndingRow As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public bNewRows As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public EmailRowCnt As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal UID As String, ByVal CallerName As String, ByVal MySql As String, ByVal nbrWeightMin As String, ByVal StartingRow As Integer, ByVal EndingRow As Integer, ByVal bNewRows As Boolean, ByVal EmailRowCnt As Integer)
            MyBase.New
            Me.SecureID = SecureID
            Me.UID = UID
            Me.CallerName = CallerName
            Me.MySql = MySql
            Me.nbrWeightMin = nbrWeightMin
            Me.StartingRow = StartingRow
            Me.EndingRow = EndingRow
            Me.bNewRows = bNewRows
            Me.EmailRowCnt = EmailRowCnt
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateEmailGridWithNoWeightsResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateEmailGridWithNoWeightsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public PopulateEmailGridWithNoWeightsResult() As SVCSearch.DS_EMAIL
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public bNewRows As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public EmailRowCnt As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal PopulateEmailGridWithNoWeightsResult() As SVCSearch.DS_EMAIL, ByVal SecureID As Integer, ByVal bNewRows As Boolean, ByVal EmailRowCnt As Integer)
            MyBase.New
            Me.PopulateEmailGridWithNoWeightsResult = PopulateEmailGridWithNoWeightsResult
            Me.SecureID = SecureID
            Me.bNewRows = bNewRows
            Me.EmailRowCnt = EmailRowCnt
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateEmailGridWithWeights", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateEmailGridWithWeightsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public Userid As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public CallerName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public MySql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public nbrWeightMin As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public StartingRow As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public EndingRow As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public bNewRows As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public EmailRowCnt As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal Userid As String, ByVal CallerName As String, ByVal MySql As String, ByVal nbrWeightMin As String, ByVal StartingRow As Integer, ByVal EndingRow As Integer, ByVal bNewRows As Boolean, ByVal EmailRowCnt As Integer)
            MyBase.New
            Me.SecureID = SecureID
            Me.Userid = Userid
            Me.CallerName = CallerName
            Me.MySql = MySql
            Me.nbrWeightMin = nbrWeightMin
            Me.StartingRow = StartingRow
            Me.EndingRow = EndingRow
            Me.bNewRows = bNewRows
            Me.EmailRowCnt = EmailRowCnt
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateEmailGridWithWeightsResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateEmailGridWithWeightsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public PopulateEmailGridWithWeightsResult() As SVCSearch.DS_EMAIL
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public bNewRows As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public EmailRowCnt As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal PopulateEmailGridWithWeightsResult() As SVCSearch.DS_EMAIL, ByVal SecureID As Integer, ByVal bNewRows As Boolean, ByVal EmailRowCnt As Integer)
            MyBase.New
            Me.PopulateEmailGridWithWeightsResult = PopulateEmailGridWithWeightsResult
            Me.SecureID = SecureID
            Me.bNewRows = bNewRows
            Me.EmailRowCnt = EmailRowCnt
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="LoadUserSearchHistory", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class LoadUserSearchHistoryRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public MaxNbrSearches As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public Uid As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public Screen As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public SearchHistoryArrayList() As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public NbrReturned As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal MaxNbrSearches As Integer, ByVal Uid As String, ByVal Screen As String, ByVal SearchHistoryArrayList() As String, ByVal NbrReturned As Integer)
            MyBase.New
            Me.SecureID = SecureID
            Me.MaxNbrSearches = MaxNbrSearches
            Me.Uid = Uid
            Me.Screen = Screen
            Me.SearchHistoryArrayList = SearchHistoryArrayList
            Me.NbrReturned = NbrReturned
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="LoadUserSearchHistoryResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class LoadUserSearchHistoryResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SearchHistoryArrayList() As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public NbrReturned As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal SearchHistoryArrayList() As String, ByVal NbrReturned As Integer)
            MyBase.New
            Me.SecureID = SecureID
            Me.SearchHistoryArrayList = SearchHistoryArrayList
            Me.NbrReturned = NbrReturned
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getAttachmentWeights", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getAttachmentWeightsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SL As System.Collections.Generic.Dictionary(Of String, Integer)
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public UserID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal SL As System.Collections.Generic.Dictionary(Of String, Integer), ByVal UserID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.SL = SL
            Me.UserID = UserID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getAttachmentWeightsResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getAttachmentWeightsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SL As System.Collections.Generic.Dictionary(Of String, Integer)
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal SL As System.Collections.Generic.Dictionary(Of String, Integer))
            MyBase.New
            Me.SecureID = SecureID
            Me.SL = SL
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExecuteSqlNewConn1", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExecuteSqlNewConn1Request
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public EncryptedMySql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public ContractID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal EncryptedMySql As String, ByVal UserID As String, ByVal ContractID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.EncryptedMySql = EncryptedMySql
            Me.UserID = UserID
            Me.ContractID = ContractID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExecuteSqlNewConn1Response", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExecuteSqlNewConn1Response
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public ExecuteSqlNewConn1Result As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public EncryptedMySql As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ExecuteSqlNewConn1Result As Boolean, ByVal SecureID As Integer, ByVal EncryptedMySql As String)
            MyBase.New
            Me.ExecuteSqlNewConn1Result = ExecuteSqlNewConn1Result
            Me.SecureID = SecureID
            Me.EncryptedMySql = EncryptedMySql
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExecuteSqlNewConn2", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExecuteSqlNewConn2Request
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public EncryptedMySql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public ContractID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal EncryptedMySql As String, ByVal UserID As String, ByVal ContractID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.EncryptedMySql = EncryptedMySql
            Me.UserID = UserID
            Me.ContractID = ContractID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExecuteSqlNewConn2Response", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExecuteSqlNewConn2Response
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public ExecuteSqlNewConn2Result As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public EncryptedMySql As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ExecuteSqlNewConn2Result As Boolean, ByVal SecureID As Integer, ByVal EncryptedMySql As String)
            MyBase.New
            Me.ExecuteSqlNewConn2Result = ExecuteSqlNewConn2Result
            Me.SecureID = SecureID
            Me.EncryptedMySql = EncryptedMySql
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExecuteSqlNewConn3", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExecuteSqlNewConn3Request
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public EncryptedMySql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public ContractID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal EncryptedMySql As String, ByVal UserID As String, ByVal ContractID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.EncryptedMySql = EncryptedMySql
            Me.UserID = UserID
            Me.ContractID = ContractID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExecuteSqlNewConn3Response", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExecuteSqlNewConn3Response
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public ExecuteSqlNewConn3Result As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public EncryptedMySql As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ExecuteSqlNewConn3Result As Boolean, ByVal SecureID As Integer, ByVal EncryptedMySql As String)
            MyBase.New
            Me.ExecuteSqlNewConn3Result = ExecuteSqlNewConn3Result
            Me.SecureID = SecureID
            Me.EncryptedMySql = EncryptedMySql
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExecuteSqlNewConn4", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExecuteSqlNewConn4Request
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public EncryptedMySql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public ContractID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal EncryptedMySql As String, ByVal UserID As String, ByVal ContractID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.EncryptedMySql = EncryptedMySql
            Me.UserID = UserID
            Me.ContractID = ContractID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExecuteSqlNewConn4Response", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExecuteSqlNewConn4Response
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public ExecuteSqlNewConn4Result As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public EncryptedMySql As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ExecuteSqlNewConn4Result As Boolean, ByVal SecureID As Integer, ByVal EncryptedMySql As String)
            MyBase.New
            Me.ExecuteSqlNewConn4Result = ExecuteSqlNewConn4Result
            Me.SecureID = SecureID
            Me.EncryptedMySql = EncryptedMySql
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExecuteSqlNewConn5", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExecuteSqlNewConn5Request
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public EncryptedMySql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public ContractID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal EncryptedMySql As String, ByVal UserID As String, ByVal ContractID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.EncryptedMySql = EncryptedMySql
            Me.UserID = UserID
            Me.ContractID = ContractID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExecuteSqlNewConn5Response", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExecuteSqlNewConn5Response
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public ExecuteSqlNewConn5Result As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public EncryptedMySql As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ExecuteSqlNewConn5Result As Boolean, ByVal SecureID As Integer, ByVal EncryptedMySql As String)
            MyBase.New
            Me.ExecuteSqlNewConn5Result = ExecuteSqlNewConn5Result
            Me.SecureID = SecureID
            Me.EncryptedMySql = EncryptedMySql
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExecuteSqlNewConnSecure", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExecuteSqlNewConnSecureRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public MySql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public ContractID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal MySql As String, ByVal UserID As String, ByVal ContractID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.MySql = MySql
            Me.UserID = UserID
            Me.ContractID = ContractID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExecuteSqlNewConnSecureResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExecuteSqlNewConnSecureResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public ExecuteSqlNewConnSecureResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public MySql As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ExecuteSqlNewConnSecureResult As Boolean, ByVal SecureID As Integer, ByVal MySql As String)
            MyBase.New
            Me.ExecuteSqlNewConnSecureResult = ExecuteSqlNewConnSecureResult
            Me.SecureID = SecureID
            Me.MySql = MySql
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetParmValue", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetParmValueRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public Parms() As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal UID As String, ByVal Parms() As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.UID = UID
            Me.Parms = Parms
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetParmValueResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetParmValueResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public Parms() As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal Parms() As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.Parms = Parms
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="DBisGlobalSearcher", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class DBisGlobalSearcherRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public Userid As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal Userid As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.Userid = Userid
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="DBisGlobalSearcherResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class DBisGlobalSearcherResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public DBisGlobalSearcherResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal DBisGlobalSearcherResult As Boolean, ByVal SecureID As Integer)
            MyBase.New
            Me.DBisGlobalSearcherResult = DBisGlobalSearcherResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="DBisAdmin", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class DBisAdminRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public Userid As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal Userid As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.Userid = Userid
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="DBisAdminResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class DBisAdminResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public DBisAdminResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal DBisAdminResult As Boolean, ByVal SecureID As Integer)
            MyBase.New
            Me.DBisAdminResult = DBisAdminResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getUserParm", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getUserParmRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public sVariable As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public UserParm As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal sVariable As String, ByVal UserParm As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.sVariable = sVariable
            Me.UserParm = UserParm
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getUserParmResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getUserParmResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public sVariable As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal sVariable As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.sVariable = sVariable
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="RemoveUnwantedCharacters", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class RemoveUnwantedCharactersRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public tgtString As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal tgtString As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.tgtString = tgtString
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="RemoveUnwantedCharactersResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class RemoveUnwantedCharactersResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public tgtString As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal tgtString As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.tgtString = tgtString
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetMachineIP", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetMachineIPRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetMachineIPResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetMachineIPResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public GetMachineIPResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetMachineIPResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.GetMachineIPResult = GetMachineIPResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getClientLicenses", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getClientLicensesRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public CompanyID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public ErrorMessage As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal CompanyID As String, ByVal ErrorMessage As String, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.CompanyID = CompanyID
            Me.ErrorMessage = ErrorMessage
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getClientLicensesResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getClientLicensesResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getClientLicensesResult() As SVCSearch.DS_License
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public ErrorMessage As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getClientLicensesResult() As SVCSearch.DS_License, ByVal SecureID As Integer, ByVal ErrorMessage As String, ByVal RC As Boolean)
            MyBase.New
            Me.getClientLicensesResult = getClientLicensesResult
            Me.SecureID = SecureID
            Me.ErrorMessage = ErrorMessage
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateUserGrid", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateUserGridRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public DBisAdmin As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal UserID As String, ByVal DBisAdmin As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.UserID = UserID
            Me.DBisAdmin = DBisAdmin
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateUserGridResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateUserGridResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public PopulateUserGridResult() As SVCSearch.DS_VUserGrid
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal PopulateUserGridResult() As SVCSearch.DS_VUserGrid, ByVal SecureID As Integer)
            MyBase.New
            Me.PopulateUserGridResult = PopulateUserGridResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getGroupUsers", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getGroupUsersRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public GroupName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public GroupList() As Object
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal GroupName As String, ByVal GroupList() As Object, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.GroupName = GroupName
            Me.GroupList = GroupList
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getGroupUsersResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getGroupUsersResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public GroupList() As Object
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal GroupList() As Object, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.GroupList = GroupList
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateDgGroupUsers", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateDgGroupUsersRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public OwnerUserGuidID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public GroupName As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal OwnerUserGuidID As String, ByVal GroupName As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.OwnerUserGuidID = OwnerUserGuidID
            Me.GroupName = GroupName
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateDgGroupUsersResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateDgGroupUsersResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public PopulateDgGroupUsersResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal PopulateDgGroupUsersResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.PopulateDgGroupUsersResult = PopulateDgGroupUsersResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="DeleteGroupUsers", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class DeleteGroupUsersRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public CurrSelectedGroupName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public GroupOwnerGuid As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public iDeleted As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal CurrSelectedGroupName As String, ByVal GroupOwnerGuid As String, ByVal UserID As String, ByVal iDeleted As Integer, ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.CurrSelectedGroupName = CurrSelectedGroupName
            Me.GroupOwnerGuid = GroupOwnerGuid
            Me.UserID = UserID
            Me.iDeleted = iDeleted
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="DeleteGroupUsersResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class DeleteGroupUsersResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public DeleteGroupUsersResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public iDeleted As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal DeleteGroupUsersResult As Boolean, ByVal iDeleted As Integer, ByVal RetMsg As String)
            MyBase.New
            Me.DeleteGroupUsersResult = DeleteGroupUsersResult
            Me.iDeleted = iDeleted
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getGroupOwnerGuidByGroupName", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getGroupOwnerGuidByGroupNameRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public GroupName As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal GroupName As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.GroupName = GroupName
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getGroupOwnerGuidByGroupNameResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getGroupOwnerGuidByGroupNameResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getGroupOwnerGuidByGroupNameResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getGroupOwnerGuidByGroupNameResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.getGroupOwnerGuidByGroupNameResult = getGroupOwnerGuidByGroupNameResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="AddLibraryGroupUser", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class AddLibraryGroupUserRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public GroupName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public CurrUserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public SessionID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public ControlSection As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal GroupName As String, ByVal RC As Boolean, ByVal CurrUserID As String, ByVal SessionID As String, ByVal ControlSection As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.GroupName = GroupName
            Me.RC = RC
            Me.CurrUserID = CurrUserID
            Me.SessionID = SessionID
            Me.ControlSection = ControlSection
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="AddLibraryGroupUserResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class AddLibraryGroupUserResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateGroupUserGrid", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateGroupUserGridRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public GroupName As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal GroupName As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.GroupName = GroupName
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateGroupUserGridResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateGroupUserGridResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public PopulateGroupUserGridResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal PopulateGroupUserGridResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.PopulateGroupUserGridResult = PopulateGroupUserGridResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateLibItemsGrid", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateLibItemsGridRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public LibraryName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public UserID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal LibraryName As String, ByVal UserID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.LibraryName = LibraryName
            Me.UserID = UserID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateLibItemsGridResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateLibItemsGridResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public PopulateLibItemsGridResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal PopulateLibItemsGridResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.PopulateLibItemsGridResult = PopulateLibItemsGridResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateDgAssigned", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateDgAssignedRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public LibraryName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public UserID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal LibraryName As String, ByVal UserID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.LibraryName = LibraryName
            Me.UserID = UserID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateDgAssignedResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateDgAssignedResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public PopulateDgAssignedResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal PopulateDgAssignedResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.PopulateDgAssignedResult = PopulateDgAssignedResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ResetLibraryUsersCount", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ResetLibraryUsersCountRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ResetLibraryUsersCountResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ResetLibraryUsersCountResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="DeleteLibraryGroupUser", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class DeleteLibraryGroupUserRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public GroupName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public LibraryName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal GroupName As String, ByVal LibraryName As String, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.GroupName = GroupName
            Me.LibraryName = LibraryName
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="DeleteLibraryGroupUserResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class DeleteLibraryGroupUserResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ChangeUserPassword", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ChangeUserPasswordRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UserLogin As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public OldPW As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public NewPw1 As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public NewPw2 As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal UserLogin As String, ByVal OldPW As String, ByVal NewPw1 As String, ByVal NewPw2 As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.UserLogin = UserLogin
            Me.OldPW = OldPW
            Me.NewPw1 = NewPw1
            Me.NewPw2 = NewPw2
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ChangeUserPasswordResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ChangeUserPasswordResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public ChangeUserPasswordResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ChangeUserPasswordResult As Boolean, ByVal SecureID As Integer)
            MyBase.New
            Me.ChangeUserPasswordResult = ChangeUserPasswordResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="SaveClickStats", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class SaveClickStatsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public IID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal IID As Integer, ByVal UserID As String, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.IID = IID
            Me.UserID = UserID
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="SaveClickStatsResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class SaveClickStatsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal RC As Boolean)
            MyBase.New
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="cleanUpLibraryItems", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class cleanUpLibraryItemsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UserID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal UserID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.UserID = UserID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="cleanUpLibraryItemsResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class cleanUpLibraryItemsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="RemoveLibraryDirectories", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class RemoveLibraryDirectoriesRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public DirectoryName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public LibraryName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal UserID As String, ByVal DirectoryName As String, ByVal LibraryName As String, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.UserID = UserID
            Me.DirectoryName = DirectoryName
            Me.LibraryName = LibraryName
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="RemoveLibraryDirectoriesResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class RemoveLibraryDirectoriesResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="RemoveLibraryEmails", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class RemoveLibraryEmailsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public FolderName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public LibraryName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal FolderName As String, ByVal LibraryName As String, ByVal UserID As String, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.FolderName = FolderName
            Me.LibraryName = LibraryName
            Me.UserID = UserID
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="RemoveLibraryEmailsResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class RemoveLibraryEmailsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="AddSysMsg", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class AddSysMsgRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public tMsg As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal UserID As String, ByVal tMsg As String, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.UserID = UserID
            Me.tMsg = tMsg
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="AddSysMsgResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class AddSysMsgResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="AddLibraryDirectory", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class AddLibraryDirectoryRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public FolderName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public LibraryName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RecordsAdded As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal FolderName As String, ByVal LibraryName As String, ByVal UserID As String, ByVal RecordsAdded As Integer, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.FolderName = FolderName
            Me.LibraryName = LibraryName
            Me.UserID = UserID
            Me.RecordsAdded = RecordsAdded
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="AddLibraryDirectoryResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class AddLibraryDirectoryResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RecordsAdded As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal RecordsAdded As Integer, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.RecordsAdded = RecordsAdded
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="AddLibraryEmail", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class AddLibraryEmailRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public EmailFolder As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public LibraryName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RecordsAdded As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal EmailFolder As String, ByVal LibraryName As String, ByVal UserID As String, ByVal RecordsAdded As Integer, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.EmailFolder = EmailFolder
            Me.LibraryName = LibraryName
            Me.UserID = UserID
            Me.RecordsAdded = RecordsAdded
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="AddLibraryEmailResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class AddLibraryEmailResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RecordsAdded As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal RecordsAdded As Integer)
            MyBase.New
            Me.SecureID = SecureID
            Me.RecordsAdded = RecordsAdded
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateLibraryGrid", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateLibraryGridRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UserID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal UserID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.UserID = UserID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateLibraryGridResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateLibraryGridResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public PopulateLibraryGridResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal PopulateLibraryGridResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.PopulateLibraryGridResult = PopulateLibraryGridResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getListOfStrings", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getListOfStringsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public strListOfItems As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public MySql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal strListOfItems As String, ByVal MySql As String, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.strListOfItems = strListOfItems
            Me.MySql = MySql
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getListOfStringsResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getListOfStringsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getListOfStringsResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public strListOfItems As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getListOfStringsResult As Boolean, ByVal SecureID As Integer, ByVal strListOfItems As String, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.getListOfStringsResult = getListOfStringsResult
            Me.SecureID = SecureID
            Me.strListOfItems = strListOfItems
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getListOfStrings1", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getListOfStrings1Request
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public strListOfItems As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public MySql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RetMsg As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public UserId As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public SessionID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal strListOfItems As String, ByVal MySql As String, ByVal RC As Boolean, ByVal RetMsg As String, ByVal UserId As String, ByVal SessionID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.strListOfItems = strListOfItems
            Me.MySql = MySql
            Me.RC = RC
            Me.RetMsg = RetMsg
            Me.UserId = UserId
            Me.SessionID = SessionID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getListOfStrings1Response", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getListOfStrings1Response
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getListOfStrings1Result As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public strListOfItems As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getListOfStrings1Result As Boolean, ByVal SecureID As Integer, ByVal strListOfItems As String, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.getListOfStrings1Result = getListOfStrings1Result
            Me.SecureID = SecureID
            Me.strListOfItems = strListOfItems
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getListOfStrings2", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getListOfStrings2Request
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public strListOfItems As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public MySql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RetMsg As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public UserId As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public SessionID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal strListOfItems As String, ByVal MySql As String, ByVal RC As Boolean, ByVal RetMsg As String, ByVal UserId As String, ByVal SessionID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.strListOfItems = strListOfItems
            Me.MySql = MySql
            Me.RC = RC
            Me.RetMsg = RetMsg
            Me.UserId = UserId
            Me.SessionID = SessionID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getListOfStrings2Response", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getListOfStrings2Response
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getListOfStrings2Result As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public strListOfItems As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getListOfStrings2Result As Boolean, ByVal SecureID As Integer, ByVal strListOfItems As String, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.getListOfStrings2Result = getListOfStrings2Result
            Me.SecureID = SecureID
            Me.strListOfItems = strListOfItems
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getListOfStrings3", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getListOfStrings3Request
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public strListOfItems As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public MySql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RetMsg As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public UserId As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public SessionID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal strListOfItems As String, ByVal MySql As String, ByVal RC As Boolean, ByVal RetMsg As String, ByVal UserId As String, ByVal SessionID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.strListOfItems = strListOfItems
            Me.MySql = MySql
            Me.RC = RC
            Me.RetMsg = RetMsg
            Me.UserId = UserId
            Me.SessionID = SessionID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getListOfStrings3Response", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getListOfStrings3Response
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getListOfStrings3Result As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public strListOfItems As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getListOfStrings3Result As Boolean, ByVal SecureID As Integer, ByVal strListOfItems As String, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.getListOfStrings3Result = getListOfStrings3Result
            Me.SecureID = SecureID
            Me.strListOfItems = strListOfItems
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getListOfStrings4", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getListOfStrings4Request
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public strListOfItems As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public MySql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RetMsg As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public UserId As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public SessionID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal strListOfItems As String, ByVal MySql As String, ByVal RC As Boolean, ByVal RetMsg As String, ByVal UserId As String, ByVal SessionID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.strListOfItems = strListOfItems
            Me.MySql = MySql
            Me.RC = RC
            Me.RetMsg = RetMsg
            Me.UserId = UserId
            Me.SessionID = SessionID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getListOfStrings4Response", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getListOfStrings4Response
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getListOfStrings4Result As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getListOfStrings4Result As Boolean, ByVal SecureID As Integer, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.getListOfStrings4Result = getListOfStrings4Result
            Me.SecureID = SecureID
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="iCount", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class iCountRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public S As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal S As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.S = S
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="iCountResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class iCountResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public iCountResult As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal iCountResult As Integer, ByVal SecureID As Integer)
            MyBase.New
            Me.iCountResult = iCountResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetLogPath", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetLogPathRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public tPath As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal tPath As String)
            MyBase.New
            Me.tPath = tPath
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetLogPathResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetLogPathResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public tPath As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal tPath As String)
            MyBase.New
            Me.tPath = tPath
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ActiveSessionGetVal", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ActiveSessionGetValRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SessionGuid As System.Guid
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public ParmName As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal SessionGuid As System.Guid, ByVal ParmName As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.SessionGuid = SessionGuid
            Me.ParmName = ParmName
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ActiveSessionGetValResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ActiveSessionGetValResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public ActiveSessionGetValResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public SessionGuid As System.Guid
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public ParmName As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ActiveSessionGetValResult As String, ByVal SecureID As Integer, ByVal SessionGuid As System.Guid, ByVal ParmName As String)
            MyBase.New
            Me.ActiveSessionGetValResult = ActiveSessionGetValResult
            Me.SecureID = SecureID
            Me.SessionGuid = SessionGuid
            Me.ParmName = ParmName
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ActiveSession", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ActiveSessionRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SessionGuid As System.Guid
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public ParmName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public ParmValue As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal SessionGuid As System.Guid, ByVal ParmName As String, ByVal ParmValue As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.SessionGuid = SessionGuid
            Me.ParmName = ParmName
            Me.ParmValue = ParmValue
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ActiveSessionResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ActiveSessionResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public ActiveSessionResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ActiveSessionResult As Boolean, ByVal SecureID As Integer)
            MyBase.New
            Me.ActiveSessionResult = ActiveSessionResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="setSecureLoginParms", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class setSecureLoginParmsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public sCompanyID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public sRepoID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal sCompanyID As String, ByVal sRepoID As String, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.sCompanyID = sCompanyID
            Me.sRepoID = sRepoID
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="setSecureLoginParmsResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class setSecureLoginParmsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateSecureLoginCB_V2", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateSecureLoginCB_V2Request
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public AllRepos As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public CompanyID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal AllRepos As String, ByVal CompanyID As String, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.AllRepos = AllRepos
            Me.CompanyID = CompanyID
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateSecureLoginCB_V2Response", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateSecureLoginCB_V2Response
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public AllRepos As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal AllRepos As String, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.AllRepos = AllRepos
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateSecureLoginCB", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateSecureLoginCBRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public CB As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public CompanyID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal CB As String, ByVal CompanyID As String, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.CB = CB
            Me.CompanyID = CompanyID
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateSecureLoginCBResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateSecureLoginCBResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public CB As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal CB As String, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.CB = CB
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getLoginPW", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getLoginPWRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getLoginPWResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getLoginPWResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getLoginPWResult As Object
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getLoginPWResult As Object, ByVal SecureID As Integer)
            MyBase.New
            Me.getLoginPWResult = getLoginPWResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="setLoginPW", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class setLoginPWRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RepoID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal RepoID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.RepoID = RepoID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="setLoginPWResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class setLoginPWResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSessionEncCs", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getSessionEncCsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSessionEncCsResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getSessionEncCsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getSessionEncCsResult As Object
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getSessionEncCsResult As Object, ByVal SecureID As Integer)
            MyBase.New
            Me.getSessionEncCsResult = getSessionEncCsResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="setSessionEncCs", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class setSessionEncCsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public MySessionID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal MySessionID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.MySessionID = MySessionID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="setSessionEncCsResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class setSessionEncCsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="setSessionRepoID", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class setSessionRepoIDRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RepoID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal RepoID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.RepoID = RepoID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="setSessionRepoIDResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class setSessionRepoIDResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSessionRepoID", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getSessionRepoIDRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSessionRepoIDResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getSessionRepoIDResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getSessionRepoIDResult As Object
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getSessionRepoIDResult As Object, ByVal SecureID As Integer)
            MyBase.New
            Me.getSessionRepoIDResult = getSessionRepoIDResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="setSessionCompanyID", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class setSessionCompanyIDRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public CompanyID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal CompanyID As String, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.CompanyID = CompanyID
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="setSessionCompanyIDResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class setSessionCompanyIDResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSessionCompanyID", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getSessionCompanyIDRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSessionCompanyIDResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getSessionCompanyIDResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getSessionCompanyIDResult As Object
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getSessionCompanyIDResult As Object, ByVal SecureID As Integer)
            MyBase.New
            Me.getSessionCompanyIDResult = getSessionCompanyIDResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="setLoginGuid", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class setLoginGuidRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public MyLoginGuid As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal MyLoginGuid As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.MyLoginGuid = MyLoginGuid
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="setLoginGuidResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class setLoginGuidResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getLoginGuid", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getLoginGuidRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getLoginGuidResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getLoginGuidResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getLoginGuidResult As Object
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getLoginGuidResult As Object, ByVal SecureID As Integer)
            MyBase.New
            Me.getLoginGuidResult = getLoginGuidResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getHttpSessionID", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getHttpSessionIDRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getHttpSessionIDResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getHttpSessionIDResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getHttpSessionIDResult As Object
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getHttpSessionIDResult As Object, ByVal SecureID As Integer)
            MyBase.New
            Me.getHttpSessionIDResult = getHttpSessionIDResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="setSessionID", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class setSessionIDRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public MySessionID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal MySessionID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.MySessionID = MySessionID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="setSessionIDResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class setSessionIDResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExpandInflectionTerms", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExpandInflectionTermsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public S As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal S As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.S = S
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExpandInflectionTermsResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExpandInflectionTermsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public ExpandInflectionTermsResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ExpandInflectionTermsResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.ExpandInflectionTermsResult = ExpandInflectionTermsResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getServerDatabaseName", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getServerDatabaseNameRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getServerDatabaseNameResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getServerDatabaseNameResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getServerDatabaseNameResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getServerDatabaseNameResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.getServerDatabaseNameResult = getServerDatabaseNameResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="CleanLog", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class CleanLogRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="CleanLogResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class CleanLogResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateComboBox", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateComboBoxRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public CB() As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public TblColName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public S As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal CB() As String, ByVal TblColName As String, ByVal S As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.CB = CB
            Me.TblColName = TblColName
            Me.S = S
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateComboBoxResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateComboBoxResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public CB() As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal CB() As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.CB = CB
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetEmailAttachments", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetEmailAttachmentsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public CurrEmailGuid As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal CurrEmailGuid As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.CurrEmailGuid = CurrEmailGuid
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetEmailAttachmentsResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetEmailAttachmentsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public GetEmailAttachmentsResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetEmailAttachmentsResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.GetEmailAttachmentsResult = GetEmailAttachmentsResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="DbWriteToFile", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class DbWriteToFileRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public SourceGuid As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public FileName As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal UID As String, ByVal SourceGuid As String, ByVal FileName As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.UID = UID
            Me.SourceGuid = SourceGuid
            Me.FileName = FileName
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="DbWriteToFileResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class DbWriteToFileResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public DbWriteToFileResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public FileName As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal DbWriteToFileResult As Boolean, ByVal SecureID As Integer, ByVal FileName As String)
            MyBase.New
            Me.DbWriteToFileResult = DbWriteToFileResult
            Me.SecureID = SecureID
            Me.FileName = FileName
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="SetSessionVariable", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class SetSessionVariableRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public key As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public KeyValue As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal key As String, ByVal KeyValue As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.key = key
            Me.KeyValue = KeyValue
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="SetSessionVariableResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class SetSessionVariableResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetSessionVariable", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetSessionVariableRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public key As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal key As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.key = key
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetSessionVariableResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetSessionVariableResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public GetSessionVariableResult As Object
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetSessionVariableResult As Object, ByVal SecureID As Integer)
            MyBase.New
            Me.GetSessionVariableResult = GetSessionVariableResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="UpdateSourceImageCompressed", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class UpdateSourceImageCompressedRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UploadFQN As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public SourceGuid As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public LastAccessDate As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public CreateDate As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public LastWriteTime As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public VersionNbr As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public CompressedDataBuffer() As Byte
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal UploadFQN As String, ByVal SourceGuid As String, ByVal LastAccessDate As String, ByVal CreateDate As String, ByVal LastWriteTime As String, ByVal VersionNbr As Integer, ByVal CompressedDataBuffer() As Byte)
            MyBase.New
            Me.SecureID = SecureID
            Me.UploadFQN = UploadFQN
            Me.SourceGuid = SourceGuid
            Me.LastAccessDate = LastAccessDate
            Me.CreateDate = CreateDate
            Me.LastWriteTime = LastWriteTime
            Me.VersionNbr = VersionNbr
            Me.CompressedDataBuffer = CompressedDataBuffer
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="UpdateSourceImageCompressedResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class UpdateSourceImageCompressedResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public UpdateSourceImageCompressedResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UpdateSourceImageCompressedResult As Boolean, ByVal SecureID As Integer)
            MyBase.New
            Me.UpdateSourceImageCompressedResult = UpdateSourceImageCompressedResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="writeEmailFromDbToFile", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class writeEmailFromDbToFileRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public EmailGuid As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public SourceTypeCode As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public CompressedDataBuffer() As Byte
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public OriginalSize As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public CompressedSize As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal EmailGuid As String, ByVal SourceTypeCode As String, ByVal CompressedDataBuffer() As Byte, ByVal OriginalSize As Integer, ByVal CompressedSize As Integer, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.EmailGuid = EmailGuid
            Me.SourceTypeCode = SourceTypeCode
            Me.CompressedDataBuffer = CompressedDataBuffer
            Me.OriginalSize = OriginalSize
            Me.CompressedSize = CompressedSize
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="writeEmailFromDbToFileResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class writeEmailFromDbToFileResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SourceTypeCode As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public CompressedDataBuffer() As Byte
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public OriginalSize As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public CompressedSize As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal SourceTypeCode As String, ByVal CompressedDataBuffer() As Byte, ByVal OriginalSize As Integer, ByVal CompressedSize As Integer, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.SourceTypeCode = SourceTypeCode
            Me.CompressedDataBuffer = CompressedDataBuffer
            Me.OriginalSize = OriginalSize
            Me.CompressedSize = CompressedSize
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="writeAttachmentFromDbWriteToFile", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class writeAttachmentFromDbWriteToFileRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RowID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public FQN As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public CompressedDataBuffer() As Byte
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public OriginalSize As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public CompressedSize As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal RowID As String, ByVal FQN As String, ByVal CompressedDataBuffer() As Byte, ByVal OriginalSize As Integer, ByVal CompressedSize As Integer, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.RowID = RowID
            Me.FQN = FQN
            Me.CompressedDataBuffer = CompressedDataBuffer
            Me.OriginalSize = OriginalSize
            Me.CompressedSize = CompressedSize
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="writeAttachmentFromDbWriteToFileResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class writeAttachmentFromDbWriteToFileResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public FQN As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public CompressedDataBuffer() As Byte
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public OriginalSize As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public CompressedSize As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal FQN As String, ByVal CompressedDataBuffer() As Byte, ByVal OriginalSize As Integer, ByVal CompressedSize As Integer, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.FQN = FQN
            Me.CompressedDataBuffer = CompressedDataBuffer
            Me.OriginalSize = OriginalSize
            Me.CompressedSize = CompressedSize
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="writeImageSourceDataFromDbWriteToFile", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class writeImageSourceDataFromDbWriteToFileRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SourceGuid As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public FQN As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public CompressedDataBuffer() As Byte
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public OriginalSize As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public CompressedSize As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal SourceGuid As String, ByVal FQN As String, ByVal CompressedDataBuffer() As Byte, ByVal OriginalSize As Integer, ByVal CompressedSize As Integer, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.SourceGuid = SourceGuid
            Me.FQN = FQN
            Me.CompressedDataBuffer = CompressedDataBuffer
            Me.OriginalSize = OriginalSize
            Me.CompressedSize = CompressedSize
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="writeImageSourceDataFromDbWriteToFileResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class writeImageSourceDataFromDbWriteToFileResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public FQN As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public CompressedDataBuffer() As Byte
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public OriginalSize As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public CompressedSize As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal FQN As String, ByVal CompressedDataBuffer() As Byte, ByVal OriginalSize As Integer, ByVal CompressedSize As Integer, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.FQN = FQN
            Me.CompressedDataBuffer = CompressedDataBuffer
            Me.OriginalSize = OriginalSize
            Me.CompressedSize = CompressedSize
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="AddLibraryItems", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class AddLibraryItemsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SourceGuid As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public ItemTitle As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public ItemType As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public LibraryItemGuid As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public DataSourceOwnerUserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public LibraryOwnerUserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public LibraryName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public AddedByUserGuidId As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=9)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=10)>  _
        Public rMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal SourceGuid As String, ByVal ItemTitle As String, ByVal ItemType As String, ByVal LibraryItemGuid As String, ByVal DataSourceOwnerUserID As String, ByVal LibraryOwnerUserID As String, ByVal LibraryName As String, ByVal AddedByUserGuidId As String, ByVal RC As Boolean, ByVal rMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.SourceGuid = SourceGuid
            Me.ItemTitle = ItemTitle
            Me.ItemType = ItemType
            Me.LibraryItemGuid = LibraryItemGuid
            Me.DataSourceOwnerUserID = DataSourceOwnerUserID
            Me.LibraryOwnerUserID = LibraryOwnerUserID
            Me.LibraryName = LibraryName
            Me.AddedByUserGuidId = AddedByUserGuidId
            Me.RC = RC
            Me.rMsg = rMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="AddLibraryItemsResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class AddLibraryItemsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public rMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal RC As Boolean, ByVal rMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.RC = RC
            Me.rMsg = rMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateGroupUserLibCombo", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateGroupUserLibComboRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public cb As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal UID As String, ByVal cb As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.UID = UID
            Me.cb = cb
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateGroupUserLibComboResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateGroupUserLibComboResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public cb As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal cb As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.cb = cb
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetLibOwnerByName", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetLibOwnerByNameRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public LibraryName As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal LibraryName As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.LibraryName = LibraryName
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetLibOwnerByNameResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetLibOwnerByNameResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public GetLibOwnerByNameResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetLibOwnerByNameResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.GetLibOwnerByNameResult = GetLibOwnerByNameResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GenerateSQL", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GenerateSQLRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SearchParmList As System.Collections.Generic.Dictionary(Of String, String)
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public TypeSQL As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SearchParmList As System.Collections.Generic.Dictionary(Of String, String), ByVal SecureID As Integer, ByVal TypeSQL As String)
            MyBase.New
            Me.SearchParmList = SearchParmList
            Me.SecureID = SecureID
            Me.TypeSQL = TypeSQL
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GenerateSQLResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GenerateSQLResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public GenerateSQLResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GenerateSQLResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.GenerateSQLResult = GenerateSQLResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExecuteSearchEmail", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExecuteSearchEmailRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public currSearchCnt As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public bGenSql As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public SearchParmsJson As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public bFirstEmailSearchSubmit As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public EmailRowCnt As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal currSearchCnt As Integer, ByVal bGenSql As Boolean, ByVal SearchParmsJson As String, ByVal bFirstEmailSearchSubmit As Boolean, ByVal EmailRowCnt As Integer)
            MyBase.New
            Me.SecureID = SecureID
            Me.currSearchCnt = currSearchCnt
            Me.bGenSql = bGenSql
            Me.SearchParmsJson = SearchParmsJson
            Me.bFirstEmailSearchSubmit = bFirstEmailSearchSubmit
            Me.EmailRowCnt = EmailRowCnt
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExecuteSearchEmailResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExecuteSearchEmailResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public ExecuteSearchEmailResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public currSearchCnt As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public bFirstEmailSearchSubmit As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public EmailRowCnt As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ExecuteSearchEmailResult As String, ByVal SecureID As Integer, ByVal currSearchCnt As Integer, ByVal bFirstEmailSearchSubmit As Boolean, ByVal EmailRowCnt As Integer)
            MyBase.New
            Me.ExecuteSearchEmailResult = ExecuteSearchEmailResult
            Me.SecureID = SecureID
            Me.currSearchCnt = currSearchCnt
            Me.bFirstEmailSearchSubmit = bFirstEmailSearchSubmit
            Me.EmailRowCnt = EmailRowCnt
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExecuteSearchContent", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExecuteSearchContentRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public currSearchCnt As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public bGenSql As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public SearchParmsJson As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public bFirstContentSearchSubmit As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public ContentRowCnt As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal currSearchCnt As Integer, ByVal bGenSql As Boolean, ByVal SearchParmsJson As String, ByVal bFirstContentSearchSubmit As Boolean, ByVal ContentRowCnt As Integer)
            MyBase.New
            Me.SecureID = SecureID
            Me.currSearchCnt = currSearchCnt
            Me.bGenSql = bGenSql
            Me.SearchParmsJson = SearchParmsJson
            Me.bFirstContentSearchSubmit = bFirstContentSearchSubmit
            Me.ContentRowCnt = ContentRowCnt
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExecuteSearchContentResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExecuteSearchContentResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public ExecuteSearchContentResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public currSearchCnt As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public bFirstContentSearchSubmit As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public ContentRowCnt As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ExecuteSearchContentResult As String, ByVal SecureID As Integer, ByVal currSearchCnt As Integer, ByVal bFirstContentSearchSubmit As Boolean, ByVal ContentRowCnt As Integer)
            MyBase.New
            Me.ExecuteSearchContentResult = ExecuteSearchContentResult
            Me.SecureID = SecureID
            Me.currSearchCnt = currSearchCnt
            Me.bFirstContentSearchSubmit = bFirstContentSearchSubmit
            Me.ContentRowCnt = ContentRowCnt
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSearchState", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getSearchStateRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SearchID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public UID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public ScreenName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public DICT As System.Collections.Generic.Dictionary(Of String, String)
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public rMsg As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public HiveConnectionName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public HiveActive As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=9)>  _
        Public RepoSvrName As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal SearchID As Integer, ByVal UID As String, ByVal ScreenName As String, ByVal DICT As System.Collections.Generic.Dictionary(Of String, String), ByVal rMsg As String, ByVal RC As Boolean, ByVal HiveConnectionName As String, ByVal HiveActive As Boolean, ByVal RepoSvrName As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.SearchID = SearchID
            Me.UID = UID
            Me.ScreenName = ScreenName
            Me.DICT = DICT
            Me.rMsg = rMsg
            Me.RC = RC
            Me.HiveConnectionName = HiveConnectionName
            Me.HiveActive = HiveActive
            Me.RepoSvrName = RepoSvrName
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSearchStateResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getSearchStateResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getSearchStateResult() As SVCSearch.DS_USERSEARCHSTATE
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public DICT As System.Collections.Generic.Dictionary(Of String, String)
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public rMsg As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getSearchStateResult() As SVCSearch.DS_USERSEARCHSTATE, ByVal SecureID As Integer, ByVal DICT As System.Collections.Generic.Dictionary(Of String, String), ByVal rMsg As String, ByVal RC As Boolean)
            MyBase.New
            Me.getSearchStateResult = getSearchStateResult
            Me.SecureID = SecureID
            Me.DICT = DICT
            Me.rMsg = rMsg
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="DownLoadDocument", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class DownLoadDocumentRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public TypeImage As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SourceGuid As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal TypeImage As String, ByVal SourceGuid As String)
            MyBase.New
            Me.TypeImage = TypeImage
            Me.SourceGuid = SourceGuid
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="DownLoadDocumentResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class DownLoadDocumentResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public DownLoadDocumentResult() As Byte
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public TypeImage As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal DownLoadDocumentResult() As Byte, ByVal TypeImage As String)
            MyBase.New
            Me.DownLoadDocumentResult = DownLoadDocumentResult
            Me.TypeImage = TypeImage
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetAttachmentFromDB", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetAttachmentFromDBRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public EmailGuid As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal EmailGuid As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.EmailGuid = EmailGuid
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetAttachmentFromDBResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetAttachmentFromDBResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public GetAttachmentFromDBResult() As Byte
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetAttachmentFromDBResult() As Byte, ByVal SecureID As Integer)
            MyBase.New
            Me.GetAttachmentFromDBResult = GetAttachmentFromDBResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="SetEmailPublicFlag", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class SetEmailPublicFlagRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public EmailGuid As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public isPublic As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal EmailGuid As String, ByVal isPublic As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.EmailGuid = EmailGuid
            Me.isPublic = isPublic
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="SetEmailPublicFlagResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class SetEmailPublicFlagResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="SetDocumentToMaster", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class SetDocumentToMasterRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SourceGuid As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public MasterFlag As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal SourceGuid As String, ByVal MasterFlag As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.SourceGuid = SourceGuid
            Me.MasterFlag = MasterFlag
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="SetDocumentToMasterResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class SetDocumentToMasterResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="SetDocumentPublicFlag", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class SetDocumentPublicFlagRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SourceGuid As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public isPublic As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal SourceGuid As String, ByVal isPublic As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.SourceGuid = SourceGuid
            Me.isPublic = isPublic
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="SetDocumentPublicFlagResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class SetDocumentPublicFlagResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer)
            MyBase.New
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExecuteSearchJson", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExecuteSearchJsonRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public TypeSearch As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public JsonSearchParms As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal TypeSearch As String, ByVal JsonSearchParms As String, ByVal RetMsg As String)
            MyBase.New
            Me.TypeSearch = TypeSearch
            Me.JsonSearchParms = JsonSearchParms
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExecuteSearchJsonResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExecuteSearchJsonResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public ExecuteSearchJsonResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ExecuteSearchJsonResult As String, ByVal RetMsg As String)
            MyBase.New
            Me.ExecuteSearchJsonResult = ExecuteSearchJsonResult
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExecuteSearchDT", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExecuteSearchDTRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SearchType As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public currSearchCnt As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public bGenSql As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public EmailGenSql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public SearchParmsJson As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public ContentGenSql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public strListOEmailRows As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public strListOfContentRows As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public bFirstEmailSearchSubmit As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=9)>  _
        Public bFirstContentSearchSubmit As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=10)>  _
        Public EmailRowCnt As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=11)>  _
        Public ContentRowCnt As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SearchType As String, ByVal currSearchCnt As Integer, ByVal bGenSql As Boolean, ByVal EmailGenSql As String, ByVal SearchParmsJson As String, ByVal ContentGenSql As String, ByVal strListOEmailRows As String, ByVal strListOfContentRows As String, ByVal bFirstEmailSearchSubmit As Boolean, ByVal bFirstContentSearchSubmit As Boolean, ByVal EmailRowCnt As Integer, ByVal ContentRowCnt As Integer)
            MyBase.New
            Me.SearchType = SearchType
            Me.currSearchCnt = currSearchCnt
            Me.bGenSql = bGenSql
            Me.EmailGenSql = EmailGenSql
            Me.SearchParmsJson = SearchParmsJson
            Me.ContentGenSql = ContentGenSql
            Me.strListOEmailRows = strListOEmailRows
            Me.strListOfContentRows = strListOfContentRows
            Me.bFirstEmailSearchSubmit = bFirstEmailSearchSubmit
            Me.bFirstContentSearchSubmit = bFirstContentSearchSubmit
            Me.EmailRowCnt = EmailRowCnt
            Me.ContentRowCnt = ContentRowCnt
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExecuteSearchDTResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExecuteSearchDTResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public ExecuteSearchDTResult As System.Data.DataSet
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public currSearchCnt As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public EmailGenSql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public ContentGenSql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public strListOEmailRows As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public strListOfContentRows As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public bFirstEmailSearchSubmit As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public bFirstContentSearchSubmit As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public EmailRowCnt As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=9)>  _
        Public ContentRowCnt As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ExecuteSearchDTResult As System.Data.DataSet, ByVal currSearchCnt As Integer, ByVal EmailGenSql As String, ByVal ContentGenSql As String, ByVal strListOEmailRows As String, ByVal strListOfContentRows As String, ByVal bFirstEmailSearchSubmit As Boolean, ByVal bFirstContentSearchSubmit As Boolean, ByVal EmailRowCnt As Integer, ByVal ContentRowCnt As Integer)
            MyBase.New
            Me.ExecuteSearchDTResult = ExecuteSearchDTResult
            Me.currSearchCnt = currSearchCnt
            Me.EmailGenSql = EmailGenSql
            Me.ContentGenSql = ContentGenSql
            Me.strListOEmailRows = strListOEmailRows
            Me.strListOfContentRows = strListOfContentRows
            Me.bFirstEmailSearchSubmit = bFirstEmailSearchSubmit
            Me.bFirstContentSearchSubmit = bFirstContentSearchSubmit
            Me.EmailRowCnt = EmailRowCnt
            Me.ContentRowCnt = ContentRowCnt
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetFilesInZipDetail", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetFilesInZipDetailRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public ParentGuid As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal ParentGuid As String, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.ParentGuid = ParentGuid
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetFilesInZipDetailResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetFilesInZipDetailResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public GetFilesInZipDetailResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetFilesInZipDetailResult As String, ByVal SecureID As Integer, ByVal RC As Boolean)
            MyBase.New
            Me.GetFilesInZipDetailResult = GetFilesInZipDetailResult
            Me.SecureID = SecureID
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="AddGroupLibraryAccess", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class AddGroupLibraryAccessRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public LibraryName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public GroupName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public GroupOwnerUserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public CurrUserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public SessionID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public ControlSection As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal UserID As String, ByVal LibraryName As String, ByVal GroupName As String, ByVal GroupOwnerUserID As String, ByVal RC As Boolean, ByVal CurrUserID As String, ByVal SessionID As String, ByVal ControlSection As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.UserID = UserID
            Me.LibraryName = LibraryName
            Me.GroupName = GroupName
            Me.GroupOwnerUserID = GroupOwnerUserID
            Me.RC = RC
            Me.CurrUserID = CurrUserID
            Me.SessionID = SessionID
            Me.ControlSection = ControlSection
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="AddGroupLibraryAccessResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class AddGroupLibraryAccessResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal RC As Boolean)
            MyBase.New
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="DBExecuteEncryptedSql", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class DBExecuteEncryptedSqlRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public MySql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public EKEY As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal MySql As String, ByVal EKEY As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.MySql = MySql
            Me.EKEY = EKEY
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="DBExecuteEncryptedSqlResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class DBExecuteEncryptedSqlResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public DBExecuteEncryptedSqlResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public MySql As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal DBExecuteEncryptedSqlResult As Boolean, ByVal SecureID As Integer, ByVal MySql As String)
            MyBase.New
            Me.DBExecuteEncryptedSqlResult = DBExecuteEncryptedSqlResult
            Me.SecureID = SecureID
            Me.MySql = MySql
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="validateAttachSecureLogin", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class validateAttachSecureLoginRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public CompanyID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RepoID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public UserLogin As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public PW As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public RetMsg As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public GateWayEndPoint As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public DownloadEndpoint As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=9)>  _
        Public ENCCS As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal CompanyID As String, ByVal RepoID As String, ByVal UserLogin As String, ByVal PW As String, ByVal RC As Boolean, ByVal RetMsg As String, ByVal GateWayEndPoint As String, ByVal DownloadEndpoint As String, ByVal ENCCS As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.CompanyID = CompanyID
            Me.RepoID = RepoID
            Me.UserLogin = UserLogin
            Me.PW = PW
            Me.RC = RC
            Me.RetMsg = RetMsg
            Me.GateWayEndPoint = GateWayEndPoint
            Me.DownloadEndpoint = DownloadEndpoint
            Me.ENCCS = ENCCS
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="validateAttachSecureLoginResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class validateAttachSecureLoginResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public validateAttachSecureLoginResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RetMsg As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public GateWayEndPoint As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public DownloadEndpoint As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public ENCCS As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal validateAttachSecureLoginResult As Boolean, ByVal SecureID As Integer, ByVal RC As Boolean, ByVal RetMsg As String, ByVal GateWayEndPoint As String, ByVal DownloadEndpoint As String, ByVal ENCCS As String)
            MyBase.New
            Me.validateAttachSecureLoginResult = validateAttachSecureLoginResult
            Me.SecureID = SecureID
            Me.RC = RC
            Me.RetMsg = RetMsg
            Me.GateWayEndPoint = GateWayEndPoint
            Me.DownloadEndpoint = DownloadEndpoint
            Me.ENCCS = ENCCS
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ckContentFlags", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ckContentFlagsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SourceGuid As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public SD As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public SP As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public SAP As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public bMaster As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public RSS As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public WEB As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public bPublic As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal SourceGuid As String, ByVal SD As Boolean, ByVal SP As Boolean, ByVal SAP As Boolean, ByVal bMaster As Boolean, ByVal RSS As Boolean, ByVal WEB As Boolean, ByVal bPublic As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.SourceGuid = SourceGuid
            Me.SD = SD
            Me.SP = SP
            Me.SAP = SAP
            Me.bMaster = bMaster
            Me.RSS = RSS
            Me.WEB = WEB
            Me.bPublic = bPublic
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ckContentFlagsResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ckContentFlagsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SD As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SP As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public SAP As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public bMaster As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RSS As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public WEB As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public bPublic As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SD As Boolean, ByVal SP As Boolean, ByVal SAP As Boolean, ByVal bMaster As Boolean, ByVal RSS As Boolean, ByVal WEB As Boolean, ByVal bPublic As Boolean)
            MyBase.New
            Me.SD = SD
            Me.SP = SP
            Me.SAP = SAP
            Me.bMaster = bMaster
            Me.RSS = RSS
            Me.WEB = WEB
            Me.bPublic = bPublic
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExecuteSqlStack", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExecuteSqlStackRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SqlStack As System.Collections.Generic.Dictionary(Of Integer, String)
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public SessionID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public ControlSection As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal SqlStack As System.Collections.Generic.Dictionary(Of Integer, String), ByVal UserID As String, ByVal SessionID As String, ByVal ControlSection As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.SqlStack = SqlStack
            Me.UserID = UserID
            Me.SessionID = SessionID
            Me.ControlSection = ControlSection
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ExecuteSqlStackResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ExecuteSqlStackResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public ExecuteSqlStackResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public SqlStack As System.Collections.Generic.Dictionary(Of Integer, String)
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ExecuteSqlStackResult As Boolean, ByVal SecureID As Integer, ByVal SqlStack As System.Collections.Generic.Dictionary(Of Integer, String))
            MyBase.New
            Me.ExecuteSqlStackResult = ExecuteSqlStackResult
            Me.SecureID = SecureID
            Me.SqlStack = SqlStack
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="RecallUserSearch", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class RecallUserSearchRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SearchName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public UID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public strSearches As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal SearchName As String, ByVal UID As String, ByVal strSearches As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.SearchName = SearchName
            Me.UID = UID
            Me.strSearches = strSearches
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="RecallUserSearchResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class RecallUserSearchResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public RecallUserSearchResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public strSearches As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal RecallUserSearchResult As Boolean, ByVal strSearches As String)
            MyBase.New
            Me.RecallUserSearchResult = RecallUserSearchResult
            Me.strSearches = strSearches
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="removeRestoreFiles", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class removeRestoreFilesRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public MachineID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal UserID As String, ByVal MachineID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.UserID = UserID
            Me.MachineID = MachineID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="removeRestoreFilesResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class removeRestoreFilesResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public removeRestoreFilesResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public MachineID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal removeRestoreFilesResult As Boolean, ByVal UserID As String, ByVal MachineID As String)
            MyBase.New
            Me.removeRestoreFilesResult = removeRestoreFilesResult
            Me.UserID = UserID
            Me.MachineID = MachineID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getRestoreFileCount", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getRestoreFileCountRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public MachineID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public Preview As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal UserID As String, ByVal MachineID As String, ByVal Preview As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.UserID = UserID
            Me.MachineID = MachineID
            Me.Preview = Preview
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getRestoreFileCountResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getRestoreFileCountResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getRestoreFileCountResult As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public MachineID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public Preview As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getRestoreFileCountResult As Integer, ByVal UserID As String, ByVal MachineID As String, ByVal Preview As Boolean)
            MyBase.New
            Me.getRestoreFileCountResult = getRestoreFileCountResult
            Me.UserID = UserID
            Me.MachineID = MachineID
            Me.Preview = Preview
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="saveRestoreFile", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class saveRestoreFileRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public tgtTable As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public ContentGuid As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public Preview As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public Restore As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public MachineID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal tgtTable As String, ByVal ContentGuid As String, ByVal Preview As Boolean, ByVal Restore As Boolean, ByVal UserID As String, ByVal MachineID As String, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.tgtTable = tgtTable
            Me.ContentGuid = ContentGuid
            Me.Preview = Preview
            Me.Restore = Restore
            Me.UserID = UserID
            Me.MachineID = MachineID
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="saveRestoreFileResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class saveRestoreFileResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public saveRestoreFileResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public ContentGuid As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public MachineID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal saveRestoreFileResult As Boolean, ByVal ContentGuid As String, ByVal UserID As String, ByVal MachineID As String, ByVal RC As Boolean)
            MyBase.New
            Me.saveRestoreFileResult = saveRestoreFileResult
            Me.ContentGuid = ContentGuid
            Me.UserID = UserID
            Me.MachineID = MachineID
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GenEmailAttachmentsSQL", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GenEmailAttachmentsSQLRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SearchParms() As SVCSearch.DS_SearchTerms
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public InputSearchString As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public useFreetext As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public ckWeighted As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public isEmail As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public LimitToCurrRecs As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public ThesaurusList() As Object
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=9)>  _
        Public txtThesaurus As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=10)>  _
        Public cbThesaurusText As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=11)>  _
        Public calledBy As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UserID As String, ByVal SearchParms() As SVCSearch.DS_SearchTerms, ByVal SecureID As Integer, ByVal InputSearchString As String, ByVal useFreetext As Boolean, ByVal ckWeighted As Boolean, ByVal isEmail As Boolean, ByVal LimitToCurrRecs As Boolean, ByVal ThesaurusList() As Object, ByVal txtThesaurus As String, ByVal cbThesaurusText As String, ByVal calledBy As String)
            MyBase.New
            Me.UserID = UserID
            Me.SearchParms = SearchParms
            Me.SecureID = SecureID
            Me.InputSearchString = InputSearchString
            Me.useFreetext = useFreetext
            Me.ckWeighted = ckWeighted
            Me.isEmail = isEmail
            Me.LimitToCurrRecs = LimitToCurrRecs
            Me.ThesaurusList = ThesaurusList
            Me.txtThesaurus = txtThesaurus
            Me.cbThesaurusText = cbThesaurusText
            Me.calledBy = calledBy
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GenEmailAttachmentsSQLResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GenEmailAttachmentsSQLResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public GenEmailAttachmentsSQLResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GenEmailAttachmentsSQLResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.GenEmailAttachmentsSQLResult = GenEmailAttachmentsSQLResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GenEmailGeneratedSQL", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GenEmailGeneratedSQLRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SearchParms() As SVCSearch.DS_SearchTerms
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UserID As String, ByVal SearchParms() As SVCSearch.DS_SearchTerms, ByVal SecureID As Integer)
            MyBase.New
            Me.UserID = UserID
            Me.SearchParms = SearchParms
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GenEmailGeneratedSQLResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GenEmailGeneratedSQLResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public GenEmailGeneratedSQLResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GenEmailGeneratedSQLResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.GenEmailGeneratedSQLResult = GenEmailGeneratedSQLResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GenContentSearchSQL", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GenContentSearchSQLRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SearchParms() As SVCSearch.DS_SearchTerms
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public UID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public SearchString As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public ckLimitToExisting As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public txtThesaurus As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public cbThesaurusText As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public ckLimitToLib As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=9)>  _
        Public LibraryName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=10)>  _
        Public ckWeighted As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UserID As String, ByVal SearchParms() As SVCSearch.DS_SearchTerms, ByVal SecureID As Integer, ByVal UID As String, ByVal SearchString As String, ByVal ckLimitToExisting As Boolean, ByVal txtThesaurus As String, ByVal cbThesaurusText As String, ByVal ckLimitToLib As Boolean, ByVal LibraryName As String, ByVal ckWeighted As Boolean)
            MyBase.New
            Me.UserID = UserID
            Me.SearchParms = SearchParms
            Me.SecureID = SecureID
            Me.UID = UID
            Me.SearchString = SearchString
            Me.ckLimitToExisting = ckLimitToExisting
            Me.txtThesaurus = txtThesaurus
            Me.cbThesaurusText = cbThesaurusText
            Me.ckLimitToLib = ckLimitToLib
            Me.LibraryName = LibraryName
            Me.ckWeighted = ckWeighted
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GenContentSearchSQLResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GenContentSearchSQLResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public GenContentSearchSQLResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GenContentSearchSQLResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.GenContentSearchSQLResult = GenContentSearchSQLResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ChangeUserContentPublic", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ChangeUserContentPublicRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public ServiceID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public CurrSelectedUserGuid As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public isPublic As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ServiceID As Integer, ByVal CurrSelectedUserGuid As String, ByVal isPublic As String, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.ServiceID = ServiceID
            Me.CurrSelectedUserGuid = CurrSelectedUserGuid
            Me.isPublic = isPublic
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ChangeUserContentPublicResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class ChangeUserContentPublicResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="Refactor", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class RefactorRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public NewOwnerID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public OldOwnerID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal NewOwnerID As String, ByVal OldOwnerID As String, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.NewOwnerID = NewOwnerID
            Me.OldOwnerID = OldOwnerID
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="RefactorResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class RefactorResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSAASState", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getSAASStateRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public DirName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public FullPath As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public RetMsg As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal UserID As String, ByVal DirName As String, ByVal FullPath As String, ByVal RetMsg As String, ByVal RC As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.UserID = UserID
            Me.DirName = DirName
            Me.FullPath = FullPath
            Me.RetMsg = RetMsg
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSAASStateResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getSAASStateResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getSAASStateResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public RetMsg As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getSAASStateResult As String, ByVal RetMsg As String, ByVal RC As Boolean)
            MyBase.New
            Me.getSAASStateResult = getSAASStateResult
            Me.RetMsg = RetMsg
            Me.RC = RC
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getListOfStrings01", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getListOfStrings01Request
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public MySql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RetMsg As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public UserId As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public SessionID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal MySql As String, ByVal RC As Boolean, ByVal RetMsg As String, ByVal UserId As String, ByVal SessionID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.MySql = MySql
            Me.RC = RC
            Me.RetMsg = RetMsg
            Me.UserId = UserId
            Me.SessionID = SessionID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getListOfStrings01Response", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getListOfStrings01Response
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getListOfStrings01Result As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getListOfStrings01Result As String, ByVal SecureID As Integer, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.getListOfStrings01Result = getListOfStrings01Result
            Me.SecureID = SecureID
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getListOfStrings02", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getListOfStrings02Request
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public MySql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RetMsg As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public UserId As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public SessionID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal MySql As String, ByVal RC As Boolean, ByVal RetMsg As String, ByVal UserId As String, ByVal SessionID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.MySql = MySql
            Me.RC = RC
            Me.RetMsg = RetMsg
            Me.UserId = UserId
            Me.SessionID = SessionID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getListOfStrings02Response", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getListOfStrings02Response
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getListOfStrings02Result() As SVCSearch.DS_ListOfStrings02
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getListOfStrings02Result() As SVCSearch.DS_ListOfStrings02, ByVal SecureID As Integer, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.getListOfStrings02Result = getListOfStrings02Result
            Me.SecureID = SecureID
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getListOfStrings03", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getListOfStrings03Request
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public MySql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RetMsg As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public UserId As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public SessionID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal MySql As String, ByVal RC As Boolean, ByVal RetMsg As String, ByVal UserId As String, ByVal SessionID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.MySql = MySql
            Me.RC = RC
            Me.RetMsg = RetMsg
            Me.UserId = UserId
            Me.SessionID = SessionID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getListOfStrings03Response", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getListOfStrings03Response
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getListOfStrings03Result() As SVCSearch.DS_ListOfStrings03
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getListOfStrings03Result() As SVCSearch.DS_ListOfStrings03, ByVal SecureID As Integer, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.getListOfStrings03Result = getListOfStrings03Result
            Me.SecureID = SecureID
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getListOfStrings04", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getListOfStrings04Request
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public MySql As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RetMsg As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public UserId As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public SessionID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal MySql As String, ByVal RC As Boolean, ByVal RetMsg As String, ByVal UserId As String, ByVal SessionID As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.MySql = MySql
            Me.RC = RC
            Me.RetMsg = RetMsg
            Me.UserId = UserId
            Me.SessionID = SessionID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getListOfStrings04Response", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getListOfStrings04Response
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getListOfStrings04Result() As SVCSearch.DS_ListOfStrings04
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getListOfStrings04Result() As SVCSearch.DS_ListOfStrings04, ByVal SecureID As Integer, ByVal RC As Boolean, ByVal RetMsg As String)
            MyBase.New
            Me.getListOfStrings04Result = getListOfStrings04Result
            Me.SecureID = SecureID
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateLibraryUsersGrid", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateLibraryUsersGridRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public LibraryName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public ckLibUsersOnly As Boolean
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal LibraryName As String, ByVal ckLibUsersOnly As Boolean)
            MyBase.New
            Me.SecureID = SecureID
            Me.LibraryName = LibraryName
            Me.ckLibUsersOnly = ckLibUsersOnly
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="PopulateLibraryUsersGridResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class PopulateLibraryUsersGridResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public PopulateLibraryUsersGridResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal PopulateLibraryUsersGridResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.PopulateLibraryUsersGridResult = PopulateLibraryUsersGridResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getUserAuth", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getUserAuthRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public Userid As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal Userid As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.Userid = Userid
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getUserAuthResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getUserAuthResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getUserAuthResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getUserAuthResult As String, ByVal SecureID As Integer)
            MyBase.New
            Me.getUserAuthResult = getUserAuthResult
            Me.SecureID = SecureID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="DeleteUser", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class DeleteUserRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SelectedUserGuid As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal SecureID As Integer, ByVal SelectedUserGuid As String, ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.SelectedUserGuid = SelectedUserGuid
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="DeleteUserResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class DeleteUserResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public DeleteUserResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal DeleteUserResult As Boolean, ByVal SecureID As Integer, ByVal RetMsg As String)
            MyBase.New
            Me.DeleteUserResult = DeleteUserResult
            Me.SecureID = SecureID
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="SaveUSer", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class SaveUSerRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public UserName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public EmailAddress As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public UserPassword As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public Admin As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public isActive As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public UserLoginID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public ClientOnly As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=9)>  _
        Public HiveConnectionName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=10)>  _
        Public HiveActive As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=11)>  _
        Public RepoSvrName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=12)>  _
        Public RowCreationDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=13)>  _
        Public RowLastModDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=14)>  _
        Public ActiveGuid As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=15)>  _
        Public RepoName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=16)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=17)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New( _
                    ByVal SecureID As Integer,  _
                    ByVal UserID As String,  _
                    ByVal UserName As String,  _
                    ByVal EmailAddress As String,  _
                    ByVal UserPassword As String,  _
                    ByVal Admin As String,  _
                    ByVal isActive As String,  _
                    ByVal UserLoginID As String,  _
                    ByVal ClientOnly As Boolean,  _
                    ByVal HiveConnectionName As String,  _
                    ByVal HiveActive As Boolean,  _
                    ByVal RepoSvrName As String,  _
                    ByVal RowCreationDate As Date,  _
                    ByVal RowLastModDate As Date,  _
                    ByVal ActiveGuid As String,  _
                    ByVal RepoName As String,  _
                    ByVal RC As Boolean,  _
                    ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.UserID = UserID
            Me.UserName = UserName
            Me.EmailAddress = EmailAddress
            Me.UserPassword = UserPassword
            Me.Admin = Admin
            Me.isActive = isActive
            Me.UserLoginID = UserLoginID
            Me.ClientOnly = ClientOnly
            Me.HiveConnectionName = HiveConnectionName
            Me.HiveActive = HiveActive
            Me.RepoSvrName = RepoSvrName
            Me.RowCreationDate = RowCreationDate
            Me.RowLastModDate = RowLastModDate
            Me.ActiveGuid = ActiveGuid
            Me.RepoName = RepoName
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="SaveUSerResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class SaveUSerResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SaveUSerResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public UserID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public UserName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public EmailAddress As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public UserPassword As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public Admin As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public isActive As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public UserLoginID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public ClientOnly As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=9)>  _
        Public HiveConnectionName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=10)>  _
        Public HiveActive As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=11)>  _
        Public RepoSvrName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=12)>  _
        Public RowCreationDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=13)>  _
        Public RowLastModDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=14)>  _
        Public ActiveGuid As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=15)>  _
        Public RepoName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=16)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=17)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New( _
                    ByVal SaveUSerResult As Boolean,  _
                    ByVal UserID As String,  _
                    ByVal UserName As String,  _
                    ByVal EmailAddress As String,  _
                    ByVal UserPassword As String,  _
                    ByVal Admin As String,  _
                    ByVal isActive As String,  _
                    ByVal UserLoginID As String,  _
                    ByVal ClientOnly As Boolean,  _
                    ByVal HiveConnectionName As String,  _
                    ByVal HiveActive As Boolean,  _
                    ByVal RepoSvrName As String,  _
                    ByVal RowCreationDate As Date,  _
                    ByVal RowLastModDate As Date,  _
                    ByVal ActiveGuid As String,  _
                    ByVal RepoName As String,  _
                    ByVal RC As Boolean,  _
                    ByVal RetMsg As String)
            MyBase.New
            Me.SaveUSerResult = SaveUSerResult
            Me.UserID = UserID
            Me.UserName = UserName
            Me.EmailAddress = EmailAddress
            Me.UserPassword = UserPassword
            Me.Admin = Admin
            Me.isActive = isActive
            Me.UserLoginID = UserLoginID
            Me.ClientOnly = ClientOnly
            Me.HiveConnectionName = HiveConnectionName
            Me.HiveActive = HiveActive
            Me.RepoSvrName = RepoSvrName
            Me.RowCreationDate = RowCreationDate
            Me.RowLastModDate = RowLastModDate
            Me.ActiveGuid = ActiveGuid
            Me.RepoName = RepoName
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="saveSearchSchedule", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class saveSearchScheduleRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SearchName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public NotificationSMS As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public SearchDesc As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public OwnerID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public SearchQuery As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public SendToEmail As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public ScheduleUnit As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public ScheduleHour As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=9)>  _
        Public ScheduleDaysOfWeek As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=10)>  _
        Public ScheduleDaysOfMonth As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=11)>  _
        Public ScheduleMonthOfQtr As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=12)>  _
        Public StartToRunDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=13)>  _
        Public EndRunDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=14)>  _
        Public SearchParameters As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=15)>  _
        Public LastRunDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=16)>  _
        Public NumberOfExecutions As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=17)>  _
        Public CreateDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=18)>  _
        Public LastModDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=19)>  _
        Public ScheduleHourInterval As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=20)>  _
        Public RepoName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=21)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=22)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New( _
                    ByVal SecureID As Integer,  _
                    ByVal SearchName As String,  _
                    ByVal NotificationSMS As String,  _
                    ByVal SearchDesc As String,  _
                    ByVal OwnerID As String,  _
                    ByVal SearchQuery As String,  _
                    ByVal SendToEmail As String,  _
                    ByVal ScheduleUnit As String,  _
                    ByVal ScheduleHour As String,  _
                    ByVal ScheduleDaysOfWeek As String,  _
                    ByVal ScheduleDaysOfMonth As String,  _
                    ByVal ScheduleMonthOfQtr As String,  _
                    ByVal StartToRunDate As Date,  _
                    ByVal EndRunDate As Date,  _
                    ByVal SearchParameters As String,  _
                    ByVal LastRunDate As Date,  _
                    ByVal NumberOfExecutions As Integer,  _
                    ByVal CreateDate As Date,  _
                    ByVal LastModDate As Date,  _
                    ByVal ScheduleHourInterval As Integer,  _
                    ByVal RepoName As String,  _
                    ByVal RC As Boolean,  _
                    ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.SearchName = SearchName
            Me.NotificationSMS = NotificationSMS
            Me.SearchDesc = SearchDesc
            Me.OwnerID = OwnerID
            Me.SearchQuery = SearchQuery
            Me.SendToEmail = SendToEmail
            Me.ScheduleUnit = ScheduleUnit
            Me.ScheduleHour = ScheduleHour
            Me.ScheduleDaysOfWeek = ScheduleDaysOfWeek
            Me.ScheduleDaysOfMonth = ScheduleDaysOfMonth
            Me.ScheduleMonthOfQtr = ScheduleMonthOfQtr
            Me.StartToRunDate = StartToRunDate
            Me.EndRunDate = EndRunDate
            Me.SearchParameters = SearchParameters
            Me.LastRunDate = LastRunDate
            Me.NumberOfExecutions = NumberOfExecutions
            Me.CreateDate = CreateDate
            Me.LastModDate = LastModDate
            Me.ScheduleHourInterval = ScheduleHourInterval
            Me.RepoName = RepoName
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="saveSearchScheduleResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class saveSearchScheduleResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public saveSearchScheduleResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SearchName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public NotificationSMS As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public SearchDesc As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public OwnerID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public SearchQuery As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public SendToEmail As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public ScheduleUnit As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public ScheduleHour As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=9)>  _
        Public ScheduleDaysOfWeek As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=10)>  _
        Public ScheduleDaysOfMonth As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=11)>  _
        Public ScheduleMonthOfQtr As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=12)>  _
        Public StartToRunDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=13)>  _
        Public EndRunDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=14)>  _
        Public SearchParameters As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=15)>  _
        Public LastRunDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=16)>  _
        Public NumberOfExecutions As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=17)>  _
        Public CreateDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=18)>  _
        Public LastModDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=19)>  _
        Public ScheduleHourInterval As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=20)>  _
        Public RepoName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=21)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=22)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New( _
                    ByVal saveSearchScheduleResult As Boolean,  _
                    ByVal SearchName As String,  _
                    ByVal NotificationSMS As String,  _
                    ByVal SearchDesc As String,  _
                    ByVal OwnerID As String,  _
                    ByVal SearchQuery As String,  _
                    ByVal SendToEmail As String,  _
                    ByVal ScheduleUnit As String,  _
                    ByVal ScheduleHour As String,  _
                    ByVal ScheduleDaysOfWeek As String,  _
                    ByVal ScheduleDaysOfMonth As String,  _
                    ByVal ScheduleMonthOfQtr As String,  _
                    ByVal StartToRunDate As Date,  _
                    ByVal EndRunDate As Date,  _
                    ByVal SearchParameters As String,  _
                    ByVal LastRunDate As Date,  _
                    ByVal NumberOfExecutions As Integer,  _
                    ByVal CreateDate As Date,  _
                    ByVal LastModDate As Date,  _
                    ByVal ScheduleHourInterval As Integer,  _
                    ByVal RepoName As String,  _
                    ByVal RC As Boolean,  _
                    ByVal RetMsg As String)
            MyBase.New
            Me.saveSearchScheduleResult = saveSearchScheduleResult
            Me.SearchName = SearchName
            Me.NotificationSMS = NotificationSMS
            Me.SearchDesc = SearchDesc
            Me.OwnerID = OwnerID
            Me.SearchQuery = SearchQuery
            Me.SendToEmail = SendToEmail
            Me.ScheduleUnit = ScheduleUnit
            Me.ScheduleHour = ScheduleHour
            Me.ScheduleDaysOfWeek = ScheduleDaysOfWeek
            Me.ScheduleDaysOfMonth = ScheduleDaysOfMonth
            Me.ScheduleMonthOfQtr = ScheduleMonthOfQtr
            Me.StartToRunDate = StartToRunDate
            Me.EndRunDate = EndRunDate
            Me.SearchParameters = SearchParameters
            Me.LastRunDate = LastRunDate
            Me.NumberOfExecutions = NumberOfExecutions
            Me.CreateDate = CreateDate
            Me.LastModDate = LastModDate
            Me.ScheduleHourInterval = ScheduleHourInterval
            Me.RepoName = RepoName
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSearchSchedule", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getSearchScheduleRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public SecureID As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SearchName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public NotificationSMS As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public SearchDesc As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public OwnerID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public SearchQuery As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public SendToEmail As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public ScheduleUnit As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public ScheduleHour As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=9)>  _
        Public ScheduleDaysOfWeek As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=10)>  _
        Public ScheduleDaysOfMonth As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=11)>  _
        Public ScheduleMonthOfQtr As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=12)>  _
        Public StartToRunDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=13)>  _
        Public EndRunDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=14)>  _
        Public SearchParameters As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=15)>  _
        Public LastRunDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=16)>  _
        Public NumberOfExecutions As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=17)>  _
        Public CreateDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=18)>  _
        Public LastModDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=19)>  _
        Public ScheduleHourInterval As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=20)>  _
        Public RepoName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=21)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=22)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New( _
                    ByVal SecureID As Integer,  _
                    ByVal SearchName As String,  _
                    ByVal NotificationSMS As String,  _
                    ByVal SearchDesc As String,  _
                    ByVal OwnerID As String,  _
                    ByVal SearchQuery As String,  _
                    ByVal SendToEmail As String,  _
                    ByVal ScheduleUnit As String,  _
                    ByVal ScheduleHour As String,  _
                    ByVal ScheduleDaysOfWeek As String,  _
                    ByVal ScheduleDaysOfMonth As String,  _
                    ByVal ScheduleMonthOfQtr As String,  _
                    ByVal StartToRunDate As Date,  _
                    ByVal EndRunDate As Date,  _
                    ByVal SearchParameters As String,  _
                    ByVal LastRunDate As Date,  _
                    ByVal NumberOfExecutions As Integer,  _
                    ByVal CreateDate As Date,  _
                    ByVal LastModDate As Date,  _
                    ByVal ScheduleHourInterval As Integer,  _
                    ByVal RepoName As String,  _
                    ByVal RC As Boolean,  _
                    ByVal RetMsg As String)
            MyBase.New
            Me.SecureID = SecureID
            Me.SearchName = SearchName
            Me.NotificationSMS = NotificationSMS
            Me.SearchDesc = SearchDesc
            Me.OwnerID = OwnerID
            Me.SearchQuery = SearchQuery
            Me.SendToEmail = SendToEmail
            Me.ScheduleUnit = ScheduleUnit
            Me.ScheduleHour = ScheduleHour
            Me.ScheduleDaysOfWeek = ScheduleDaysOfWeek
            Me.ScheduleDaysOfMonth = ScheduleDaysOfMonth
            Me.ScheduleMonthOfQtr = ScheduleMonthOfQtr
            Me.StartToRunDate = StartToRunDate
            Me.EndRunDate = EndRunDate
            Me.SearchParameters = SearchParameters
            Me.LastRunDate = LastRunDate
            Me.NumberOfExecutions = NumberOfExecutions
            Me.CreateDate = CreateDate
            Me.LastModDate = LastModDate
            Me.ScheduleHourInterval = ScheduleHourInterval
            Me.RepoName = RepoName
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getSearchScheduleResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class getSearchScheduleResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public getSearchScheduleResult As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public SearchName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public NotificationSMS As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=3)>  _
        Public SearchDesc As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=4)>  _
        Public OwnerID As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=5)>  _
        Public SearchQuery As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=6)>  _
        Public SendToEmail As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=7)>  _
        Public ScheduleUnit As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=8)>  _
        Public ScheduleHour As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=9)>  _
        Public ScheduleDaysOfWeek As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=10)>  _
        Public ScheduleDaysOfMonth As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=11)>  _
        Public ScheduleMonthOfQtr As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=12)>  _
        Public StartToRunDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=13)>  _
        Public EndRunDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=14)>  _
        Public SearchParameters As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=15)>  _
        Public LastRunDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=16)>  _
        Public NumberOfExecutions As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=17)>  _
        Public CreateDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=18)>  _
        Public LastModDate As Date
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=19)>  _
        Public ScheduleHourInterval As Integer
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=20)>  _
        Public RepoName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=21)>  _
        Public RC As Boolean
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=22)>  _
        Public RetMsg As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New( _
                    ByVal getSearchScheduleResult As Boolean,  _
                    ByVal SearchName As String,  _
                    ByVal NotificationSMS As String,  _
                    ByVal SearchDesc As String,  _
                    ByVal OwnerID As String,  _
                    ByVal SearchQuery As String,  _
                    ByVal SendToEmail As String,  _
                    ByVal ScheduleUnit As String,  _
                    ByVal ScheduleHour As String,  _
                    ByVal ScheduleDaysOfWeek As String,  _
                    ByVal ScheduleDaysOfMonth As String,  _
                    ByVal ScheduleMonthOfQtr As String,  _
                    ByVal StartToRunDate As Date,  _
                    ByVal EndRunDate As Date,  _
                    ByVal SearchParameters As String,  _
                    ByVal LastRunDate As Date,  _
                    ByVal NumberOfExecutions As Integer,  _
                    ByVal CreateDate As Date,  _
                    ByVal LastModDate As Date,  _
                    ByVal ScheduleHourInterval As Integer,  _
                    ByVal RepoName As String,  _
                    ByVal RC As Boolean,  _
                    ByVal RetMsg As String)
            MyBase.New
            Me.getSearchScheduleResult = getSearchScheduleResult
            Me.SearchName = SearchName
            Me.NotificationSMS = NotificationSMS
            Me.SearchDesc = SearchDesc
            Me.OwnerID = OwnerID
            Me.SearchQuery = SearchQuery
            Me.SendToEmail = SendToEmail
            Me.ScheduleUnit = ScheduleUnit
            Me.ScheduleHour = ScheduleHour
            Me.ScheduleDaysOfWeek = ScheduleDaysOfWeek
            Me.ScheduleDaysOfMonth = ScheduleDaysOfMonth
            Me.ScheduleMonthOfQtr = ScheduleMonthOfQtr
            Me.StartToRunDate = StartToRunDate
            Me.EndRunDate = EndRunDate
            Me.SearchParameters = SearchParameters
            Me.LastRunDate = LastRunDate
            Me.NumberOfExecutions = NumberOfExecutions
            Me.CreateDate = CreateDate
            Me.LastModDate = LastModDate
            Me.ScheduleHourInterval = ScheduleHourInterval
            Me.RepoName = RepoName
            Me.RC = RC
            Me.RetMsg = RetMsg
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface IService1Channel
        Inherits SVCSearch.IService1, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class Service1Client
        Inherits System.ServiceModel.ClientBase(Of SVCSearch.IService1)
        Implements SVCSearch.IService1
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_saveSearchState(ByVal request As SVCSearch.saveSearchStateRequest) As SVCSearch.saveSearchStateResponse Implements SVCSearch.IService1.saveSearchState
            Return MyBase.Channel.saveSearchState(request)
        End Function
        
        Public Sub saveSearchState(ByRef SecureID As Integer, ByVal SearchID As Integer, ByVal UID As String, ByVal ScreenName As String, ByVal DICT As System.Collections.Generic.Dictionary(Of String, String), ByRef rMsg As String, ByRef RC As Boolean, ByVal HiveConnectionName As String, ByVal HiveActive As Boolean, ByVal RepoSvrName As String)
            Dim inValue As SVCSearch.saveSearchStateRequest = New SVCSearch.saveSearchStateRequest()
            inValue.SecureID = SecureID
            inValue.SearchID = SearchID
            inValue.UID = UID
            inValue.ScreenName = ScreenName
            inValue.DICT = DICT
            inValue.rMsg = rMsg
            inValue.RC = RC
            inValue.HiveConnectionName = HiveConnectionName
            inValue.HiveActive = HiveActive
            inValue.RepoSvrName = RepoSvrName
            Dim retVal As SVCSearch.saveSearchStateResponse = CType(Me,SVCSearch.IService1).saveSearchState(inValue)
            SecureID = retVal.SecureID
            rMsg = retVal.rMsg
            RC = retVal.RC
        End Sub
        
        Public Function saveSearchStateAsync(ByVal request As SVCSearch.saveSearchStateRequest) As System.Threading.Tasks.Task(Of SVCSearch.saveSearchStateResponse) Implements SVCSearch.IService1.saveSearchStateAsync
            Return MyBase.Channel.saveSearchStateAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getScreenState(ByVal request As SVCSearch.getScreenStateRequest) As SVCSearch.getScreenStateResponse Implements SVCSearch.IService1.getScreenState
            Return MyBase.Channel.getScreenState(request)
        End Function
        
        Public Function getScreenState(ByRef SecureID As Integer, ByVal UID As String, ByVal ScreenName As String, ByRef DICT As System.Collections.Generic.Dictionary(Of String, String), ByRef rMsg As String, ByRef RC As Boolean, ByVal HiveConnectionName As String, ByVal HiveActive As Boolean, ByVal RepoSvrName As String) As SVCSearch.DS_USERSCREENSTATE()
            Dim inValue As SVCSearch.getScreenStateRequest = New SVCSearch.getScreenStateRequest()
            inValue.SecureID = SecureID
            inValue.UID = UID
            inValue.ScreenName = ScreenName
            inValue.DICT = DICT
            inValue.rMsg = rMsg
            inValue.RC = RC
            inValue.HiveConnectionName = HiveConnectionName
            inValue.HiveActive = HiveActive
            inValue.RepoSvrName = RepoSvrName
            Dim retVal As SVCSearch.getScreenStateResponse = CType(Me,SVCSearch.IService1).getScreenState(inValue)
            SecureID = retVal.SecureID
            DICT = retVal.DICT
            rMsg = retVal.rMsg
            RC = retVal.RC
            Return retVal.getScreenStateResult
        End Function
        
        Public Function getScreenStateAsync(ByVal request As SVCSearch.getScreenStateRequest) As System.Threading.Tasks.Task(Of SVCSearch.getScreenStateResponse) Implements SVCSearch.IService1.getScreenStateAsync
            Return MyBase.Channel.getScreenStateAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getGridLayout(ByVal request As SVCSearch.getGridLayoutRequest) As SVCSearch.getGridLayoutResponse Implements SVCSearch.IService1.getGridLayout
            Return MyBase.Channel.getGridLayout(request)
        End Function
        
        Public Function getGridLayout(ByRef SecureID As Integer, ByVal UID As String, ByVal ScreenName As String, ByVal GridName As String, ByVal DICT As System.Collections.Generic.Dictionary(Of String, String), ByRef rMsg As String, ByRef RC As Boolean, ByVal HiveConnectionName As String, ByVal HiveActive As Boolean, ByVal RepoSvrName As String) As SVCSearch.DS_clsUSERGRIDSTATE()
            Dim inValue As SVCSearch.getGridLayoutRequest = New SVCSearch.getGridLayoutRequest()
            inValue.SecureID = SecureID
            inValue.UID = UID
            inValue.ScreenName = ScreenName
            inValue.GridName = GridName
            inValue.DICT = DICT
            inValue.rMsg = rMsg
            inValue.RC = RC
            inValue.HiveConnectionName = HiveConnectionName
            inValue.HiveActive = HiveActive
            inValue.RepoSvrName = RepoSvrName
            Dim retVal As SVCSearch.getGridLayoutResponse = CType(Me,SVCSearch.IService1).getGridLayout(inValue)
            SecureID = retVal.SecureID
            rMsg = retVal.rMsg
            RC = retVal.RC
            Return retVal.getGridLayoutResult
        End Function
        
        Public Function getGridLayoutAsync(ByVal request As SVCSearch.getGridLayoutRequest) As System.Threading.Tasks.Task(Of SVCSearch.getGridLayoutResponse) Implements SVCSearch.IService1.getGridLayoutAsync
            Return MyBase.Channel.getGridLayoutAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_saveGridLayout(ByVal request As SVCSearch.saveGridLayoutRequest) As SVCSearch.saveGridLayoutResponse Implements SVCSearch.IService1.saveGridLayout
            Return MyBase.Channel.saveGridLayout(request)
        End Function
        
        Public Sub saveGridLayout( _
                    ByRef SecureID As Integer,  _
                    ByRef UserID As String,  _
                    ByRef ScreenName As String,  _
                    ByRef GridName As String,  _
                    ByRef ColName As String,  _
                    ByRef ColOrder As Integer,  _
                    ByRef ColWidth As Integer,  _
                    ByRef ColVisible As Boolean,  _
                    ByRef ColReadOnly As Boolean,  _
                    ByRef ColSortOrder As Integer,  _
                    ByRef ColSortAsc As Boolean,  _
                    ByRef HiveConnectionName As String,  _
                    ByRef HiveActive As Boolean,  _
                    ByRef RepoSvrName As String,  _
                    ByRef RowCreationDate As Date,  _
                    ByRef RowLastModDate As Date,  _
                    ByRef RowNbr As Integer,  _
                    ByRef RC As Boolean,  _
                    ByRef rMsg As String)
            Dim inValue As SVCSearch.saveGridLayoutRequest = New SVCSearch.saveGridLayoutRequest()
            inValue.SecureID = SecureID
            inValue.UserID = UserID
            inValue.ScreenName = ScreenName
            inValue.GridName = GridName
            inValue.ColName = ColName
            inValue.ColOrder = ColOrder
            inValue.ColWidth = ColWidth
            inValue.ColVisible = ColVisible
            inValue.ColReadOnly = ColReadOnly
            inValue.ColSortOrder = ColSortOrder
            inValue.ColSortAsc = ColSortAsc
            inValue.HiveConnectionName = HiveConnectionName
            inValue.HiveActive = HiveActive
            inValue.RepoSvrName = RepoSvrName
            inValue.RowCreationDate = RowCreationDate
            inValue.RowLastModDate = RowLastModDate
            inValue.RowNbr = RowNbr
            inValue.RC = RC
            inValue.rMsg = rMsg
            Dim retVal As SVCSearch.saveGridLayoutResponse = CType(Me,SVCSearch.IService1).saveGridLayout(inValue)
            SecureID = retVal.SecureID
            UserID = retVal.UserID
            ScreenName = retVal.ScreenName
            GridName = retVal.GridName
            ColName = retVal.ColName
            ColOrder = retVal.ColOrder
            ColWidth = retVal.ColWidth
            ColVisible = retVal.ColVisible
            ColReadOnly = retVal.ColReadOnly
            ColSortOrder = retVal.ColSortOrder
            ColSortAsc = retVal.ColSortAsc
            HiveConnectionName = retVal.HiveConnectionName
            HiveActive = retVal.HiveActive
            RepoSvrName = retVal.RepoSvrName
            RowCreationDate = retVal.RowCreationDate
            RowLastModDate = retVal.RowLastModDate
            RowNbr = retVal.RowNbr
            RC = retVal.RC
            rMsg = retVal.rMsg
        End Sub
        
        Public Function saveGridLayoutAsync(ByVal request As SVCSearch.saveGridLayoutRequest) As System.Threading.Tasks.Task(Of SVCSearch.saveGridLayoutResponse) Implements SVCSearch.IService1.saveGridLayoutAsync
            Return MyBase.Channel.saveGridLayoutAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_saveScreenState(ByVal request As SVCSearch.saveScreenStateRequest) As SVCSearch.saveScreenStateResponse Implements SVCSearch.IService1.saveScreenState
            Return MyBase.Channel.saveScreenState(request)
        End Function
        
        Public Sub saveScreenState(ByRef SecureID As Integer, ByVal UID As String, ByVal ScreenName As String, ByVal DICT As System.Collections.Generic.Dictionary(Of String, String), ByRef rMsg As String, ByRef RC As Boolean, ByVal HiveConnectionName As String, ByVal HiveActive As Boolean, ByVal RepoSvrName As String)
            Dim inValue As SVCSearch.saveScreenStateRequest = New SVCSearch.saveScreenStateRequest()
            inValue.SecureID = SecureID
            inValue.UID = UID
            inValue.ScreenName = ScreenName
            inValue.DICT = DICT
            inValue.rMsg = rMsg
            inValue.RC = RC
            inValue.HiveConnectionName = HiveConnectionName
            inValue.HiveActive = HiveActive
            inValue.RepoSvrName = RepoSvrName
            Dim retVal As SVCSearch.saveScreenStateResponse = CType(Me,SVCSearch.IService1).saveScreenState(inValue)
            SecureID = retVal.SecureID
            rMsg = retVal.rMsg
            RC = retVal.RC
        End Sub
        
        Public Function saveScreenStateAsync(ByVal request As SVCSearch.saveScreenStateRequest) As System.Threading.Tasks.Task(Of SVCSearch.saveScreenStateResponse) Implements SVCSearch.IService1.saveScreenStateAsync
            Return MyBase.Channel.saveScreenStateAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getUserParms(ByVal request As SVCSearch.getUserParmsRequest) As SVCSearch.getUserParmsResponse Implements SVCSearch.IService1.getUserParms
            Return MyBase.Channel.getUserParms(request)
        End Function
        
        Public Sub getUserParms(ByRef SecureID As Integer, ByVal UserID As String, ByRef UserParms As System.Collections.Generic.Dictionary(Of String, String))
            Dim inValue As SVCSearch.getUserParmsRequest = New SVCSearch.getUserParmsRequest()
            inValue.SecureID = SecureID
            inValue.UserID = UserID
            inValue.UserParms = UserParms
            Dim retVal As SVCSearch.getUserParmsResponse = CType(Me,SVCSearch.IService1).getUserParms(inValue)
            SecureID = retVal.SecureID
            UserParms = retVal.UserParms
        End Sub
        
        Public Function getUserParmsAsync(ByVal request As SVCSearch.getUserParmsRequest) As System.Threading.Tasks.Task(Of SVCSearch.getUserParmsResponse) Implements SVCSearch.IService1.getUserParmsAsync
            Return MyBase.Channel.getUserParmsAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_ParseLicDictionary(ByVal request As SVCSearch.ParseLicDictionaryRequest) As SVCSearch.ParseLicDictionaryResponse Implements SVCSearch.IService1.ParseLicDictionary
            Return MyBase.Channel.ParseLicDictionary(request)
        End Function
        
        Public Sub ParseLicDictionary(ByRef SecureID As Integer, ByVal S As String, ByRef D As System.Collections.Generic.Dictionary(Of String, String))
            Dim inValue As SVCSearch.ParseLicDictionaryRequest = New SVCSearch.ParseLicDictionaryRequest()
            inValue.SecureID = SecureID
            inValue.S = S
            inValue.D = D
            Dim retVal As SVCSearch.ParseLicDictionaryResponse = CType(Me,SVCSearch.IService1).ParseLicDictionary(inValue)
            SecureID = retVal.SecureID
            D = retVal.D
        End Sub
        
        Public Function ParseLicDictionaryAsync(ByVal request As SVCSearch.ParseLicDictionaryRequest) As System.Threading.Tasks.Task(Of SVCSearch.ParseLicDictionaryResponse) Implements SVCSearch.IService1.ParseLicDictionaryAsync
            Return MyBase.Channel.ParseLicDictionaryAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_LicenseType(ByVal request As SVCSearch.LicenseTypeRequest) As SVCSearch.LicenseTypeResponse Implements SVCSearch.IService1.LicenseType
            Return MyBase.Channel.LicenseType(request)
        End Function
        
        Public Function LicenseType(ByVal SecureID As Integer, ByRef RC As Boolean, ByRef RetMsg As String) As String
            Dim inValue As SVCSearch.LicenseTypeRequest = New SVCSearch.LicenseTypeRequest()
            inValue.SecureID = SecureID
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            Dim retVal As SVCSearch.LicenseTypeResponse = CType(Me,SVCSearch.IService1).LicenseType(inValue)
            RC = retVal.RC
            RetMsg = retVal.RetMsg
            Return retVal.LicenseTypeResult
        End Function
        
        Public Function LicenseTypeAsync(ByVal request As SVCSearch.LicenseTypeRequest) As System.Threading.Tasks.Task(Of SVCSearch.LicenseTypeResponse) Implements SVCSearch.IService1.LicenseTypeAsync
            Return MyBase.Channel.LicenseTypeAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_GetNbrUsers(ByVal request As SVCSearch.GetNbrUsersRequest) As SVCSearch.GetNbrUsersResponse Implements SVCSearch.IService1.GetNbrUsers
            Return MyBase.Channel.GetNbrUsers(request)
        End Function
        
        Public Function GetNbrUsers(ByRef SecureID As Integer) As Integer
            Dim inValue As SVCSearch.GetNbrUsersRequest = New SVCSearch.GetNbrUsersRequest()
            inValue.SecureID = SecureID
            Dim retVal As SVCSearch.GetNbrUsersResponse = CType(Me,SVCSearch.IService1).GetNbrUsers(inValue)
            SecureID = retVal.SecureID
            Return retVal.GetNbrUsersResult
        End Function
        
        Public Function GetNbrUsersAsync(ByVal request As SVCSearch.GetNbrUsersRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetNbrUsersResponse) Implements SVCSearch.IService1.GetNbrUsersAsync
            Return MyBase.Channel.GetNbrUsersAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_isLease(ByVal request As SVCSearch.isLeaseRequest) As SVCSearch.isLeaseResponse Implements SVCSearch.IService1.isLease
            Return MyBase.Channel.isLease(request)
        End Function
        
        Public Function isLease(ByVal SecureID As Integer, ByRef RC As Boolean, ByRef RetMsg As String) As Boolean
            Dim inValue As SVCSearch.isLeaseRequest = New SVCSearch.isLeaseRequest()
            inValue.SecureID = SecureID
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            Dim retVal As SVCSearch.isLeaseResponse = CType(Me,SVCSearch.IService1).isLease(inValue)
            RC = retVal.RC
            RetMsg = retVal.RetMsg
            Return retVal.isLeaseResult
        End Function
        
        Public Function isLeaseAsync(ByVal request As SVCSearch.isLeaseRequest) As System.Threading.Tasks.Task(Of SVCSearch.isLeaseResponse) Implements SVCSearch.IService1.isLeaseAsync
            Return MyBase.Channel.isLeaseAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getMaxClients(ByVal request As SVCSearch.getMaxClientsRequest) As SVCSearch.getMaxClientsResponse Implements SVCSearch.IService1.getMaxClients
            Return MyBase.Channel.getMaxClients(request)
        End Function
        
        Public Function getMaxClients(ByVal SecureID As Integer, ByRef RC As Boolean, ByRef RetMsg As String) As Integer
            Dim inValue As SVCSearch.getMaxClientsRequest = New SVCSearch.getMaxClientsRequest()
            inValue.SecureID = SecureID
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            Dim retVal As SVCSearch.getMaxClientsResponse = CType(Me,SVCSearch.IService1).getMaxClients(inValue)
            RC = retVal.RC
            RetMsg = retVal.RetMsg
            Return retVal.getMaxClientsResult
        End Function
        
        Public Function getMaxClientsAsync(ByVal request As SVCSearch.getMaxClientsRequest) As System.Threading.Tasks.Task(Of SVCSearch.getMaxClientsResponse) Implements SVCSearch.IService1.getMaxClientsAsync
            Return MyBase.Channel.getMaxClientsAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_GetUserHostName(ByVal request As SVCSearch.GetUserHostNameRequest) As SVCSearch.GetUserHostNameResponse Implements SVCSearch.IService1.GetUserHostName
            Return MyBase.Channel.GetUserHostName(request)
        End Function
        
        Public Function GetUserHostName(ByRef SecureID As Integer) As String
            Dim inValue As SVCSearch.GetUserHostNameRequest = New SVCSearch.GetUserHostNameRequest()
            inValue.SecureID = SecureID
            Dim retVal As SVCSearch.GetUserHostNameResponse = CType(Me,SVCSearch.IService1).GetUserHostName(inValue)
            SecureID = retVal.SecureID
            Return retVal.GetUserHostNameResult
        End Function
        
        Public Function GetUserHostNameAsync(ByVal request As SVCSearch.GetUserHostNameRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetUserHostNameResponse) Implements SVCSearch.IService1.GetUserHostNameAsync
            Return MyBase.Channel.GetUserHostNameAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_GetUserHostAddress(ByVal request As SVCSearch.GetUserHostAddressRequest) As SVCSearch.GetUserHostAddressResponse Implements SVCSearch.IService1.GetUserHostAddress
            Return MyBase.Channel.GetUserHostAddress(request)
        End Function
        
        Public Function GetUserHostAddress(ByRef SecureID As Integer) As String
            Dim inValue As SVCSearch.GetUserHostAddressRequest = New SVCSearch.GetUserHostAddressRequest()
            inValue.SecureID = SecureID
            Dim retVal As SVCSearch.GetUserHostAddressResponse = CType(Me,SVCSearch.IService1).GetUserHostAddress(inValue)
            SecureID = retVal.SecureID
            Return retVal.GetUserHostAddressResult
        End Function
        
        Public Function GetUserHostAddressAsync(ByVal request As SVCSearch.GetUserHostAddressRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetUserHostAddressResponse) Implements SVCSearch.IService1.GetUserHostAddressAsync
            Return MyBase.Channel.GetUserHostAddressAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getUserGuidID(ByVal request As SVCSearch.getUserGuidIDRequest) As SVCSearch.getUserGuidIDResponse Implements SVCSearch.IService1.getUserGuidID
            Return MyBase.Channel.getUserGuidID(request)
        End Function
        
        Public Function getUserGuidID(ByRef SecureID As Integer, ByVal UserLoginId As String) As String
            Dim inValue As SVCSearch.getUserGuidIDRequest = New SVCSearch.getUserGuidIDRequest()
            inValue.SecureID = SecureID
            inValue.UserLoginId = UserLoginId
            Dim retVal As SVCSearch.getUserGuidIDResponse = CType(Me,SVCSearch.IService1).getUserGuidID(inValue)
            SecureID = retVal.SecureID
            Return retVal.getUserGuidIDResult
        End Function
        
        Public Function getUserGuidIDAsync(ByVal request As SVCSearch.getUserGuidIDRequest) As System.Threading.Tasks.Task(Of SVCSearch.getUserGuidIDResponse) Implements SVCSearch.IService1.getUserGuidIDAsync
            Return MyBase.Channel.getUserGuidIDAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_ProcessDates(ByVal request As SVCSearch.ProcessDatesRequest) As SVCSearch.ProcessDatesResponse Implements SVCSearch.IService1.ProcessDates
            Return MyBase.Channel.ProcessDates(request)
        End Function
        
        Public Function ProcessDates(ByRef SecureID As Integer) As System.Collections.Generic.Dictionary(Of String, Date)
            Dim inValue As SVCSearch.ProcessDatesRequest = New SVCSearch.ProcessDatesRequest()
            inValue.SecureID = SecureID
            Dim retVal As SVCSearch.ProcessDatesResponse = CType(Me,SVCSearch.IService1).ProcessDates(inValue)
            SecureID = retVal.SecureID
            Return retVal.ProcessDatesResult
        End Function
        
        Public Function ProcessDatesAsync(ByVal request As SVCSearch.ProcessDatesRequest) As System.Threading.Tasks.Task(Of SVCSearch.ProcessDatesResponse) Implements SVCSearch.IService1.ProcessDatesAsync
            Return MyBase.Channel.ProcessDatesAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_GetNbrMachineAll(ByVal request As SVCSearch.GetNbrMachineAllRequest) As SVCSearch.GetNbrMachineAllResponse Implements SVCSearch.IService1.GetNbrMachineAll
            Return MyBase.Channel.GetNbrMachineAll(request)
        End Function
        
        Public Function GetNbrMachineAll(ByRef SecureID As Integer) As Integer
            Dim inValue As SVCSearch.GetNbrMachineAllRequest = New SVCSearch.GetNbrMachineAllRequest()
            inValue.SecureID = SecureID
            Dim retVal As SVCSearch.GetNbrMachineAllResponse = CType(Me,SVCSearch.IService1).GetNbrMachineAll(inValue)
            SecureID = retVal.SecureID
            Return retVal.GetNbrMachineAllResult
        End Function
        
        Public Function GetNbrMachineAllAsync(ByVal request As SVCSearch.GetNbrMachineAllRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetNbrMachineAllResponse) Implements SVCSearch.IService1.GetNbrMachineAllAsync
            Return MyBase.Channel.GetNbrMachineAllAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_GetNbrMachine(ByVal request As SVCSearch.GetNbrMachineRequest) As SVCSearch.GetNbrMachineResponse Implements SVCSearch.IService1.GetNbrMachine
            Return MyBase.Channel.GetNbrMachine(request)
        End Function
        
        Public Function GetNbrMachine(ByRef SecureID As Integer, ByVal MachineName As String) As Integer
            Dim inValue As SVCSearch.GetNbrMachineRequest = New SVCSearch.GetNbrMachineRequest()
            inValue.SecureID = SecureID
            inValue.MachineName = MachineName
            Dim retVal As SVCSearch.GetNbrMachineResponse = CType(Me,SVCSearch.IService1).GetNbrMachine(inValue)
            SecureID = retVal.SecureID
            Return retVal.GetNbrMachineResult
        End Function
        
        Public Function GetNbrMachineAsync(ByVal request As SVCSearch.GetNbrMachineRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetNbrMachineResponse) Implements SVCSearch.IService1.GetNbrMachineAsync
            Return MyBase.Channel.GetNbrMachineAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_isLicenseLocatedOnAssignedMachine(ByVal request As SVCSearch.isLicenseLocatedOnAssignedMachineRequest) As SVCSearch.isLicenseLocatedOnAssignedMachineResponse Implements SVCSearch.IService1.isLicenseLocatedOnAssignedMachine
            Return MyBase.Channel.isLicenseLocatedOnAssignedMachine(request)
        End Function
        
        Public Function isLicenseLocatedOnAssignedMachine(ByRef SecureID As Integer, ByRef ServerValText As String, ByRef InstanceValText As String, ByRef RC As Boolean, ByRef RetMsg As String) As Boolean
            Dim inValue As SVCSearch.isLicenseLocatedOnAssignedMachineRequest = New SVCSearch.isLicenseLocatedOnAssignedMachineRequest()
            inValue.SecureID = SecureID
            inValue.ServerValText = ServerValText
            inValue.InstanceValText = InstanceValText
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            Dim retVal As SVCSearch.isLicenseLocatedOnAssignedMachineResponse = CType(Me,SVCSearch.IService1).isLicenseLocatedOnAssignedMachine(inValue)
            SecureID = retVal.SecureID
            ServerValText = retVal.ServerValText
            InstanceValText = retVal.InstanceValText
            RC = retVal.RC
            RetMsg = retVal.RetMsg
            Return retVal.isLicenseLocatedOnAssignedMachineResult
        End Function
        
        Public Function isLicenseLocatedOnAssignedMachineAsync(ByVal request As SVCSearch.isLicenseLocatedOnAssignedMachineRequest) As System.Threading.Tasks.Task(Of SVCSearch.isLicenseLocatedOnAssignedMachineResponse) Implements SVCSearch.IService1.isLicenseLocatedOnAssignedMachineAsync
            Return MyBase.Channel.isLicenseLocatedOnAssignedMachineAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_GetXrt(ByVal request As SVCSearch.GetXrtRequest) As SVCSearch.GetXrtResponse Implements SVCSearch.IService1.GetXrt
            Return MyBase.Channel.GetXrt(request)
        End Function
        
        Public Function GetXrt(ByRef SecureID As Integer, ByVal RC As Boolean, ByVal RetMsg As String) As String
            Dim inValue As SVCSearch.GetXrtRequest = New SVCSearch.GetXrtRequest()
            inValue.SecureID = SecureID
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            Dim retVal As SVCSearch.GetXrtResponse = CType(Me,SVCSearch.IService1).GetXrt(inValue)
            SecureID = retVal.SecureID
            Return retVal.GetXrtResult
        End Function
        
        Public Function GetXrtAsync(ByVal request As SVCSearch.GetXrtRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetXrtResponse) Implements SVCSearch.IService1.GetXrtAsync
            Return MyBase.Channel.GetXrtAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getSqlServerVersion(ByVal request As SVCSearch.getSqlServerVersionRequest) As SVCSearch.getSqlServerVersionResponse Implements SVCSearch.IService1.getSqlServerVersion
            Return MyBase.Channel.getSqlServerVersion(request)
        End Function
        
        Public Function getSqlServerVersion(ByRef SecureID As Integer) As String
            Dim inValue As SVCSearch.getSqlServerVersionRequest = New SVCSearch.getSqlServerVersionRequest()
            inValue.SecureID = SecureID
            Dim retVal As SVCSearch.getSqlServerVersionResponse = CType(Me,SVCSearch.IService1).getSqlServerVersion(inValue)
            SecureID = retVal.SecureID
            Return retVal.getSqlServerVersionResult
        End Function
        
        Public Function getSqlServerVersionAsync(ByVal request As SVCSearch.getSqlServerVersionRequest) As System.Threading.Tasks.Task(Of SVCSearch.getSqlServerVersionResponse) Implements SVCSearch.IService1.getSqlServerVersionAsync
            Return MyBase.Channel.getSqlServerVersionAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_RecordGrowth(ByVal request As SVCSearch.RecordGrowthRequest) As SVCSearch.RecordGrowthResponse Implements SVCSearch.IService1.RecordGrowth
            Return MyBase.Channel.RecordGrowth(request)
        End Function
        
        Public Sub RecordGrowth(ByRef SecureID As Integer, ByRef RC As Boolean)
            Dim inValue As SVCSearch.RecordGrowthRequest = New SVCSearch.RecordGrowthRequest()
            inValue.SecureID = SecureID
            inValue.RC = RC
            Dim retVal As SVCSearch.RecordGrowthResponse = CType(Me,SVCSearch.IService1).RecordGrowth(inValue)
            SecureID = retVal.SecureID
            RC = retVal.RC
        End Sub
        
        Public Function RecordGrowthAsync(ByVal request As SVCSearch.RecordGrowthRequest) As System.Threading.Tasks.Task(Of SVCSearch.RecordGrowthResponse) Implements SVCSearch.IService1.RecordGrowthAsync
            Return MyBase.Channel.RecordGrowthAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_ParseLic(ByVal request As SVCSearch.ParseLicRequest) As SVCSearch.ParseLicResponse Implements SVCSearch.IService1.ParseLic
            Return MyBase.Channel.ParseLic(request)
        End Function
        
        Public Function ParseLic(ByRef SecureID As Integer, ByVal LT As String, ByVal tgtKey As String) As String
            Dim inValue As SVCSearch.ParseLicRequest = New SVCSearch.ParseLicRequest()
            inValue.SecureID = SecureID
            inValue.LT = LT
            inValue.tgtKey = tgtKey
            Dim retVal As SVCSearch.ParseLicResponse = CType(Me,SVCSearch.IService1).ParseLic(inValue)
            SecureID = retVal.SecureID
            Return retVal.ParseLicResult
        End Function
        
        Public Function ParseLicAsync(ByVal request As SVCSearch.ParseLicRequest) As System.Threading.Tasks.Task(Of SVCSearch.ParseLicResponse) Implements SVCSearch.IService1.ParseLicAsync
            Return MyBase.Channel.ParseLicAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_GetLoggedinUserName(ByVal request As SVCSearch.GetLoggedinUserNameRequest) As SVCSearch.GetLoggedinUserNameResponse Implements SVCSearch.IService1.GetLoggedinUserName
            Return MyBase.Channel.GetLoggedinUserName(request)
        End Function
        
        Public Function GetLoggedinUserName(ByRef SecureID As Integer) As String
            Dim inValue As SVCSearch.GetLoggedinUserNameRequest = New SVCSearch.GetLoggedinUserNameRequest()
            inValue.SecureID = SecureID
            Dim retVal As SVCSearch.GetLoggedinUserNameResponse = CType(Me,SVCSearch.IService1).GetLoggedinUserName(inValue)
            SecureID = retVal.SecureID
            Return retVal.GetLoggedinUserNameResult
        End Function
        
        Public Function GetLoggedinUserNameAsync(ByVal request As SVCSearch.GetLoggedinUserNameRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetLoggedinUserNameResponse) Implements SVCSearch.IService1.GetLoggedinUserNameAsync
            Return MyBase.Channel.GetLoggedinUserNameAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getDBSIZEMB(ByVal request As SVCSearch.getDBSIZEMBRequest) As SVCSearch.getDBSIZEMBResponse Implements SVCSearch.IService1.getDBSIZEMB
            Return MyBase.Channel.getDBSIZEMB(request)
        End Function
        
        Public Function getDBSIZEMB(ByRef SecureID As Integer) As Double
            Dim inValue As SVCSearch.getDBSIZEMBRequest = New SVCSearch.getDBSIZEMBRequest()
            inValue.SecureID = SecureID
            Dim retVal As SVCSearch.getDBSIZEMBResponse = CType(Me,SVCSearch.IService1).getDBSIZEMB(inValue)
            SecureID = retVal.SecureID
            Return retVal.getDBSIZEMBResult
        End Function
        
        Public Function getDBSIZEMBAsync(ByVal request As SVCSearch.getDBSIZEMBRequest) As System.Threading.Tasks.Task(Of SVCSearch.getDBSIZEMBResponse) Implements SVCSearch.IService1.getDBSIZEMBAsync
            Return MyBase.Channel.getDBSIZEMBAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_resetMissingEmailIds(ByVal request As SVCSearch.resetMissingEmailIdsRequest) As SVCSearch.resetMissingEmailIdsResponse Implements SVCSearch.IService1.resetMissingEmailIds
            Return MyBase.Channel.resetMissingEmailIds(request)
        End Function
        
        Public Sub resetMissingEmailIds(ByRef SecureID As Integer, ByVal CurrUserGuidID As String, ByRef RC As Boolean)
            Dim inValue As SVCSearch.resetMissingEmailIdsRequest = New SVCSearch.resetMissingEmailIdsRequest()
            inValue.SecureID = SecureID
            inValue.CurrUserGuidID = CurrUserGuidID
            inValue.RC = RC
            Dim retVal As SVCSearch.resetMissingEmailIdsResponse = CType(Me,SVCSearch.IService1).resetMissingEmailIds(inValue)
            SecureID = retVal.SecureID
            RC = retVal.RC
        End Sub
        
        Public Function resetMissingEmailIdsAsync(ByVal request As SVCSearch.resetMissingEmailIdsRequest) As System.Threading.Tasks.Task(Of SVCSearch.resetMissingEmailIdsResponse) Implements SVCSearch.IService1.resetMissingEmailIdsAsync
            Return MyBase.Channel.resetMissingEmailIdsAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_UserParmInsertUpdate(ByVal request As SVCSearch.UserParmInsertUpdateRequest) As SVCSearch.UserParmInsertUpdateResponse Implements SVCSearch.IService1.UserParmInsertUpdate
            Return MyBase.Channel.UserParmInsertUpdate(request)
        End Function
        
        Public Sub UserParmInsertUpdate(ByRef SecureID As Integer, ByVal ParmName As String, ByVal UserID As String, ByVal ParmVal As String, ByRef RC As Boolean)
            Dim inValue As SVCSearch.UserParmInsertUpdateRequest = New SVCSearch.UserParmInsertUpdateRequest()
            inValue.SecureID = SecureID
            inValue.ParmName = ParmName
            inValue.UserID = UserID
            inValue.ParmVal = ParmVal
            inValue.RC = RC
            Dim retVal As SVCSearch.UserParmInsertUpdateResponse = CType(Me,SVCSearch.IService1).UserParmInsertUpdate(inValue)
            SecureID = retVal.SecureID
            RC = retVal.RC
        End Sub
        
        Public Function UserParmInsertUpdateAsync(ByVal request As SVCSearch.UserParmInsertUpdateRequest) As System.Threading.Tasks.Task(Of SVCSearch.UserParmInsertUpdateResponse) Implements SVCSearch.IService1.UserParmInsertUpdateAsync
            Return MyBase.Channel.UserParmInsertUpdateAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_validateLogin(ByVal request As SVCSearch.validateLoginRequest) As SVCSearch.validateLoginResponse Implements SVCSearch.IService1.validateLogin
            Return MyBase.Channel.validateLogin(request)
        End Function
        
        Public Function validateLogin(ByRef SecureID As Integer, ByVal UserLogin As String, ByVal PW As String, ByRef UserGuidID As String) As Boolean
            Dim inValue As SVCSearch.validateLoginRequest = New SVCSearch.validateLoginRequest()
            inValue.SecureID = SecureID
            inValue.UserLogin = UserLogin
            inValue.PW = PW
            inValue.UserGuidID = UserGuidID
            Dim retVal As SVCSearch.validateLoginResponse = CType(Me,SVCSearch.IService1).validateLogin(inValue)
            SecureID = retVal.SecureID
            UserGuidID = retVal.UserGuidID
            Return retVal.validateLoginResult
        End Function
        
        Public Function validateLoginAsync(ByVal request As SVCSearch.validateLoginRequest) As System.Threading.Tasks.Task(Of SVCSearch.validateLoginResponse) Implements SVCSearch.IService1.validateLoginAsync
            Return MyBase.Channel.validateLoginAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getLoggedInUser(ByVal request As SVCSearch.getLoggedInUserRequest) As SVCSearch.getLoggedInUserResponse Implements SVCSearch.IService1.getLoggedInUser
            Return MyBase.Channel.getLoggedInUser(request)
        End Function
        
        Public Function getLoggedInUser(ByRef SecureID As Integer) As String
            Dim inValue As SVCSearch.getLoggedInUserRequest = New SVCSearch.getLoggedInUserRequest()
            inValue.SecureID = SecureID
            Dim retVal As SVCSearch.getLoggedInUserResponse = CType(Me,SVCSearch.IService1).getLoggedInUser(inValue)
            SecureID = retVal.SecureID
            Return retVal.getLoggedInUserResult
        End Function
        
        Public Function getLoggedInUserAsync(ByVal request As SVCSearch.getLoggedInUserRequest) As System.Threading.Tasks.Task(Of SVCSearch.getLoggedInUserResponse) Implements SVCSearch.IService1.getLoggedInUserAsync
            Return MyBase.Channel.getLoggedInUserAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getAttachedMachineName(ByVal request As SVCSearch.getAttachedMachineNameRequest) As SVCSearch.getAttachedMachineNameResponse Implements SVCSearch.IService1.getAttachedMachineName
            Return MyBase.Channel.getAttachedMachineName(request)
        End Function
        
        Public Function getAttachedMachineName(ByRef SecureID As Integer) As String
            Dim inValue As SVCSearch.getAttachedMachineNameRequest = New SVCSearch.getAttachedMachineNameRequest()
            inValue.SecureID = SecureID
            Dim retVal As SVCSearch.getAttachedMachineNameResponse = CType(Me,SVCSearch.IService1).getAttachedMachineName(inValue)
            SecureID = retVal.SecureID
            Return retVal.getAttachedMachineNameResult
        End Function
        
        Public Function getAttachedMachineNameAsync(ByVal request As SVCSearch.getAttachedMachineNameRequest) As System.Threading.Tasks.Task(Of SVCSearch.getAttachedMachineNameResponse) Implements SVCSearch.IService1.getAttachedMachineNameAsync
            Return MyBase.Channel.getAttachedMachineNameAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getServerInstanceName(ByVal request As SVCSearch.getServerInstanceNameRequest) As SVCSearch.getServerInstanceNameResponse Implements SVCSearch.IService1.getServerInstanceName
            Return MyBase.Channel.getServerInstanceName(request)
        End Function
        
        Public Function getServerInstanceName(ByRef SecureID As Integer) As String
            Dim inValue As SVCSearch.getServerInstanceNameRequest = New SVCSearch.getServerInstanceNameRequest()
            inValue.SecureID = SecureID
            Dim retVal As SVCSearch.getServerInstanceNameResponse = CType(Me,SVCSearch.IService1).getServerInstanceName(inValue)
            SecureID = retVal.SecureID
            Return retVal.getServerInstanceNameResult
        End Function
        
        Public Function getServerInstanceNameAsync(ByVal request As SVCSearch.getServerInstanceNameRequest) As System.Threading.Tasks.Task(Of SVCSearch.getServerInstanceNameResponse) Implements SVCSearch.IService1.getServerInstanceNameAsync
            Return MyBase.Channel.getServerInstanceNameAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getServerMachineName(ByVal request As SVCSearch.getServerMachineNameRequest) As SVCSearch.getServerMachineNameResponse Implements SVCSearch.IService1.getServerMachineName
            Return MyBase.Channel.getServerMachineName(request)
        End Function
        
        Public Function getServerMachineName(ByRef SecureID As Integer) As String
            Dim inValue As SVCSearch.getServerMachineNameRequest = New SVCSearch.getServerMachineNameRequest()
            inValue.SecureID = SecureID
            Dim retVal As SVCSearch.getServerMachineNameResponse = CType(Me,SVCSearch.IService1).getServerMachineName(inValue)
            SecureID = retVal.SecureID
            Return retVal.getServerMachineNameResult
        End Function
        
        Public Function getServerMachineNameAsync(ByVal request As SVCSearch.getServerMachineNameRequest) As System.Threading.Tasks.Task(Of SVCSearch.getServerMachineNameResponse) Implements SVCSearch.IService1.getServerMachineNameAsync
            Return MyBase.Channel.getServerMachineNameAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getSystemParm(ByVal request As SVCSearch.getSystemParmRequest) As SVCSearch.getSystemParmResponse Implements SVCSearch.IService1.getSystemParm
            Return MyBase.Channel.getSystemParm(request)
        End Function
        
        Public Sub getSystemParm(ByRef SecureID As Integer, ByRef SystemParms As System.Collections.Generic.Dictionary(Of String, String))
            Dim inValue As SVCSearch.getSystemParmRequest = New SVCSearch.getSystemParmRequest()
            inValue.SecureID = SecureID
            inValue.SystemParms = SystemParms
            Dim retVal As SVCSearch.getSystemParmResponse = CType(Me,SVCSearch.IService1).getSystemParm(inValue)
            SecureID = retVal.SecureID
            SystemParms = retVal.SystemParms
        End Sub
        
        Public Function getSystemParmAsync(ByVal request As SVCSearch.getSystemParmRequest) As System.Threading.Tasks.Task(Of SVCSearch.getSystemParmResponse) Implements SVCSearch.IService1.getSystemParmAsync
            Return MyBase.Channel.getSystemParmAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getSynonyms(ByVal request As SVCSearch.getSynonymsRequest) As SVCSearch.getSynonymsResponse Implements SVCSearch.IService1.getSynonyms
            Return MyBase.Channel.getSynonyms(request)
        End Function
        
        Public Function getSynonyms(ByRef SecureID As Integer, ByVal ThesaurusID As String, ByVal Token As String, ByRef lbSynonyms As String) As String
            Dim inValue As SVCSearch.getSynonymsRequest = New SVCSearch.getSynonymsRequest()
            inValue.SecureID = SecureID
            inValue.ThesaurusID = ThesaurusID
            inValue.Token = Token
            inValue.lbSynonyms = lbSynonyms
            Dim retVal As SVCSearch.getSynonymsResponse = CType(Me,SVCSearch.IService1).getSynonyms(inValue)
            SecureID = retVal.SecureID
            lbSynonyms = retVal.lbSynonyms
            Return retVal.getSynonymsResult
        End Function
        
        Public Function getSynonymsAsync(ByVal request As SVCSearch.getSynonymsRequest) As System.Threading.Tasks.Task(Of SVCSearch.getSynonymsResponse) Implements SVCSearch.IService1.getSynonymsAsync
            Return MyBase.Channel.getSynonymsAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getThesaurusID(ByVal request As SVCSearch.getThesaurusIDRequest) As SVCSearch.getThesaurusIDResponse Implements SVCSearch.IService1.getThesaurusID
            Return MyBase.Channel.getThesaurusID(request)
        End Function
        
        Public Function getThesaurusID(ByRef SecureID As Integer, ByVal ThesaurusName As String) As String
            Dim inValue As SVCSearch.getThesaurusIDRequest = New SVCSearch.getThesaurusIDRequest()
            inValue.SecureID = SecureID
            inValue.ThesaurusName = ThesaurusName
            Dim retVal As SVCSearch.getThesaurusIDResponse = CType(Me,SVCSearch.IService1).getThesaurusID(inValue)
            SecureID = retVal.SecureID
            Return retVal.getThesaurusIDResult
        End Function
        
        Public Function getThesaurusIDAsync(ByVal request As SVCSearch.getThesaurusIDRequest) As System.Threading.Tasks.Task(Of SVCSearch.getThesaurusIDResponse) Implements SVCSearch.IService1.getThesaurusIDAsync
            Return MyBase.Channel.getThesaurusIDAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_iCountContent(ByVal request As SVCSearch.iCountContentRequest) As SVCSearch.iCountContentResponse Implements SVCSearch.IService1.iCountContent
            Return MyBase.Channel.iCountContent(request)
        End Function
        
        Public Function iCountContent(ByRef SecureID As Integer, ByVal S As String) As Integer
            Dim inValue As SVCSearch.iCountContentRequest = New SVCSearch.iCountContentRequest()
            inValue.SecureID = SecureID
            inValue.S = S
            Dim retVal As SVCSearch.iCountContentResponse = CType(Me,SVCSearch.IService1).iCountContent(inValue)
            SecureID = retVal.SecureID
            Return retVal.iCountContentResult
        End Function
        
        Public Function iCountContentAsync(ByVal request As SVCSearch.iCountContentRequest) As System.Threading.Tasks.Task(Of SVCSearch.iCountContentResponse) Implements SVCSearch.IService1.iCountContentAsync
            Return MyBase.Channel.iCountContentAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getDatasourceParm(ByVal request As SVCSearch.getDatasourceParmRequest) As SVCSearch.getDatasourceParmResponse Implements SVCSearch.IService1.getDatasourceParm
            Return MyBase.Channel.getDatasourceParm(request)
        End Function
        
        Public Function getDatasourceParm(ByRef SecureID As Integer, ByVal AttributeName As String, ByVal SourceGuid As String) As String
            Dim inValue As SVCSearch.getDatasourceParmRequest = New SVCSearch.getDatasourceParmRequest()
            inValue.SecureID = SecureID
            inValue.AttributeName = AttributeName
            inValue.SourceGuid = SourceGuid
            Dim retVal As SVCSearch.getDatasourceParmResponse = CType(Me,SVCSearch.IService1).getDatasourceParm(inValue)
            SecureID = retVal.SecureID
            Return retVal.getDatasourceParmResult
        End Function
        
        Public Function getDatasourceParmAsync(ByVal request As SVCSearch.getDatasourceParmRequest) As System.Threading.Tasks.Task(Of SVCSearch.getDatasourceParmResponse) Implements SVCSearch.IService1.getDatasourceParmAsync
            Return MyBase.Channel.getDatasourceParmAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_SaveRunParm(ByVal request As SVCSearch.SaveRunParmRequest) As SVCSearch.SaveRunParmResponse Implements SVCSearch.IService1.SaveRunParm
            Return MyBase.Channel.SaveRunParm(request)
        End Function
        
        Public Function SaveRunParm(ByRef SecureID As Integer, ByVal UserID As String, ByRef ParmID As String, ByRef ParmVal As String) As Boolean
            Dim inValue As SVCSearch.SaveRunParmRequest = New SVCSearch.SaveRunParmRequest()
            inValue.SecureID = SecureID
            inValue.UserID = UserID
            inValue.ParmID = ParmID
            inValue.ParmVal = ParmVal
            Dim retVal As SVCSearch.SaveRunParmResponse = CType(Me,SVCSearch.IService1).SaveRunParm(inValue)
            SecureID = retVal.SecureID
            ParmID = retVal.ParmID
            ParmVal = retVal.ParmVal
            Return retVal.SaveRunParmResult
        End Function
        
        Public Function SaveRunParmAsync(ByVal request As SVCSearch.SaveRunParmRequest) As System.Threading.Tasks.Task(Of SVCSearch.SaveRunParmResponse) Implements SVCSearch.IService1.SaveRunParmAsync
            Return MyBase.Channel.SaveRunParmAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_iGetRowCount(ByVal request As SVCSearch.iGetRowCountRequest) As SVCSearch.iGetRowCountResponse Implements SVCSearch.IService1.iGetRowCount
            Return MyBase.Channel.iGetRowCount(request)
        End Function
        
        Public Function iGetRowCount(ByRef SecureID As Integer, ByVal TBL As String, ByVal WhereClause As String) As Integer
            Dim inValue As SVCSearch.iGetRowCountRequest = New SVCSearch.iGetRowCountRequest()
            inValue.SecureID = SecureID
            inValue.TBL = TBL
            inValue.WhereClause = WhereClause
            Dim retVal As SVCSearch.iGetRowCountResponse = CType(Me,SVCSearch.IService1).iGetRowCount(inValue)
            SecureID = retVal.SecureID
            Return retVal.iGetRowCountResult
        End Function
        
        Public Function iGetRowCountAsync(ByVal request As SVCSearch.iGetRowCountRequest) As System.Threading.Tasks.Task(Of SVCSearch.iGetRowCountResponse) Implements SVCSearch.IService1.iGetRowCountAsync
            Return MyBase.Channel.iGetRowCountAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_ZeroizeGlobalSearch(ByVal request As SVCSearch.ZeroizeGlobalSearchRequest) As SVCSearch.ZeroizeGlobalSearchResponse Implements SVCSearch.IService1.ZeroizeGlobalSearch
            Return MyBase.Channel.ZeroizeGlobalSearch(request)
        End Function
        
        Public Function ZeroizeGlobalSearch(ByRef SecureID As Integer) As Boolean
            Dim inValue As SVCSearch.ZeroizeGlobalSearchRequest = New SVCSearch.ZeroizeGlobalSearchRequest()
            inValue.SecureID = SecureID
            Dim retVal As SVCSearch.ZeroizeGlobalSearchResponse = CType(Me,SVCSearch.IService1).ZeroizeGlobalSearch(inValue)
            SecureID = retVal.SecureID
            Return retVal.ZeroizeGlobalSearchResult
        End Function
        
        Public Function ZeroizeGlobalSearchAsync(ByVal request As SVCSearch.ZeroizeGlobalSearchRequest) As System.Threading.Tasks.Task(Of SVCSearch.ZeroizeGlobalSearchResponse) Implements SVCSearch.IService1.ZeroizeGlobalSearchAsync
            Return MyBase.Channel.ZeroizeGlobalSearchAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_updateIp(ByVal request As SVCSearch.updateIpRequest) As SVCSearch.updateIpResponse Implements SVCSearch.IService1.updateIp
            Return MyBase.Channel.updateIp(request)
        End Function
        
        Public Sub updateIp(ByRef SecureID As Integer, ByVal HostName As String, ByVal IP As String, ByVal checkCode As Integer, ByRef RC As Boolean)
            Dim inValue As SVCSearch.updateIpRequest = New SVCSearch.updateIpRequest()
            inValue.SecureID = SecureID
            inValue.HostName = HostName
            inValue.IP = IP
            inValue.checkCode = checkCode
            inValue.RC = RC
            Dim retVal As SVCSearch.updateIpResponse = CType(Me,SVCSearch.IService1).updateIp(inValue)
            SecureID = retVal.SecureID
            RC = retVal.RC
        End Sub
        
        Public Function updateIpAsync(ByVal request As SVCSearch.updateIpRequest) As System.Threading.Tasks.Task(Of SVCSearch.updateIpResponse) Implements SVCSearch.IService1.updateIpAsync
            Return MyBase.Channel.updateIpAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_PopulateSourceGridWithWeights(ByVal request As SVCSearch.PopulateSourceGridWithWeightsRequest) As SVCSearch.PopulateSourceGridWithWeightsResponse Implements SVCSearch.IService1.PopulateSourceGridWithWeights
            Return MyBase.Channel.PopulateSourceGridWithWeights(request)
        End Function
        
        Public Function PopulateSourceGridWithWeights(ByRef SecureID As Integer, ByVal StartingRow As Integer, ByVal EndingRow As Integer, ByVal CallerName As String, ByVal MySql As String, ByRef bNewRows As Boolean, ByRef SourceRowCnt As Integer) As SVCSearch.DS_CONTENT()
            Dim inValue As SVCSearch.PopulateSourceGridWithWeightsRequest = New SVCSearch.PopulateSourceGridWithWeightsRequest()
            inValue.SecureID = SecureID
            inValue.StartingRow = StartingRow
            inValue.EndingRow = EndingRow
            inValue.CallerName = CallerName
            inValue.MySql = MySql
            inValue.bNewRows = bNewRows
            inValue.SourceRowCnt = SourceRowCnt
            Dim retVal As SVCSearch.PopulateSourceGridWithWeightsResponse = CType(Me,SVCSearch.IService1).PopulateSourceGridWithWeights(inValue)
            SecureID = retVal.SecureID
            bNewRows = retVal.bNewRows
            SourceRowCnt = retVal.SourceRowCnt
            Return retVal.PopulateSourceGridWithWeightsResult
        End Function
        
        Public Function PopulateSourceGridWithWeightsAsync(ByVal request As SVCSearch.PopulateSourceGridWithWeightsRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateSourceGridWithWeightsResponse) Implements SVCSearch.IService1.PopulateSourceGridWithWeightsAsync
            Return MyBase.Channel.PopulateSourceGridWithWeightsAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_PopulateSourceGridNoWeights(ByVal request As SVCSearch.PopulateSourceGridNoWeightsRequest) As SVCSearch.PopulateSourceGridNoWeightsResponse Implements SVCSearch.IService1.PopulateSourceGridNoWeights
            Return MyBase.Channel.PopulateSourceGridNoWeights(request)
        End Function
        
        Public Function PopulateSourceGridNoWeights(ByRef SecureID As Integer, ByVal StartingRow As Integer, ByVal EndingRow As Integer, ByVal CallerName As String, ByVal MySql As String, ByRef bNewRows As Boolean, ByRef SourceRowCnt As Integer) As SVCSearch.DS_CONTENT()
            Dim inValue As SVCSearch.PopulateSourceGridNoWeightsRequest = New SVCSearch.PopulateSourceGridNoWeightsRequest()
            inValue.SecureID = SecureID
            inValue.StartingRow = StartingRow
            inValue.EndingRow = EndingRow
            inValue.CallerName = CallerName
            inValue.MySql = MySql
            inValue.bNewRows = bNewRows
            inValue.SourceRowCnt = SourceRowCnt
            Dim retVal As SVCSearch.PopulateSourceGridNoWeightsResponse = CType(Me,SVCSearch.IService1).PopulateSourceGridNoWeights(inValue)
            SecureID = retVal.SecureID
            bNewRows = retVal.bNewRows
            SourceRowCnt = retVal.SourceRowCnt
            Return retVal.PopulateSourceGridNoWeightsResult
        End Function
        
        Public Function PopulateSourceGridNoWeightsAsync(ByVal request As SVCSearch.PopulateSourceGridNoWeightsRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateSourceGridNoWeightsResponse) Implements SVCSearch.IService1.PopulateSourceGridNoWeightsAsync
            Return MyBase.Channel.PopulateSourceGridNoWeightsAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_PopulateEmailGridWithNoWeights(ByVal request As SVCSearch.PopulateEmailGridWithNoWeightsRequest) As SVCSearch.PopulateEmailGridWithNoWeightsResponse Implements SVCSearch.IService1.PopulateEmailGridWithNoWeights
            Return MyBase.Channel.PopulateEmailGridWithNoWeights(request)
        End Function
        
        Public Function PopulateEmailGridWithNoWeights(ByRef SecureID As Integer, ByVal UID As String, ByVal CallerName As String, ByVal MySql As String, ByVal nbrWeightMin As String, ByVal StartingRow As Integer, ByVal EndingRow As Integer, ByRef bNewRows As Boolean, ByRef EmailRowCnt As Integer) As SVCSearch.DS_EMAIL()
            Dim inValue As SVCSearch.PopulateEmailGridWithNoWeightsRequest = New SVCSearch.PopulateEmailGridWithNoWeightsRequest()
            inValue.SecureID = SecureID
            inValue.UID = UID
            inValue.CallerName = CallerName
            inValue.MySql = MySql
            inValue.nbrWeightMin = nbrWeightMin
            inValue.StartingRow = StartingRow
            inValue.EndingRow = EndingRow
            inValue.bNewRows = bNewRows
            inValue.EmailRowCnt = EmailRowCnt
            Dim retVal As SVCSearch.PopulateEmailGridWithNoWeightsResponse = CType(Me,SVCSearch.IService1).PopulateEmailGridWithNoWeights(inValue)
            SecureID = retVal.SecureID
            bNewRows = retVal.bNewRows
            EmailRowCnt = retVal.EmailRowCnt
            Return retVal.PopulateEmailGridWithNoWeightsResult
        End Function
        
        Public Function PopulateEmailGridWithNoWeightsAsync(ByVal request As SVCSearch.PopulateEmailGridWithNoWeightsRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateEmailGridWithNoWeightsResponse) Implements SVCSearch.IService1.PopulateEmailGridWithNoWeightsAsync
            Return MyBase.Channel.PopulateEmailGridWithNoWeightsAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_PopulateEmailGridWithWeights(ByVal request As SVCSearch.PopulateEmailGridWithWeightsRequest) As SVCSearch.PopulateEmailGridWithWeightsResponse Implements SVCSearch.IService1.PopulateEmailGridWithWeights
            Return MyBase.Channel.PopulateEmailGridWithWeights(request)
        End Function
        
        Public Function PopulateEmailGridWithWeights(ByRef SecureID As Integer, ByVal Userid As String, ByVal CallerName As String, ByVal MySql As String, ByVal nbrWeightMin As String, ByVal StartingRow As Integer, ByVal EndingRow As Integer, ByRef bNewRows As Boolean, ByRef EmailRowCnt As Integer) As SVCSearch.DS_EMAIL()
            Dim inValue As SVCSearch.PopulateEmailGridWithWeightsRequest = New SVCSearch.PopulateEmailGridWithWeightsRequest()
            inValue.SecureID = SecureID
            inValue.Userid = Userid
            inValue.CallerName = CallerName
            inValue.MySql = MySql
            inValue.nbrWeightMin = nbrWeightMin
            inValue.StartingRow = StartingRow
            inValue.EndingRow = EndingRow
            inValue.bNewRows = bNewRows
            inValue.EmailRowCnt = EmailRowCnt
            Dim retVal As SVCSearch.PopulateEmailGridWithWeightsResponse = CType(Me,SVCSearch.IService1).PopulateEmailGridWithWeights(inValue)
            SecureID = retVal.SecureID
            bNewRows = retVal.bNewRows
            EmailRowCnt = retVal.EmailRowCnt
            Return retVal.PopulateEmailGridWithWeightsResult
        End Function
        
        Public Function PopulateEmailGridWithWeightsAsync(ByVal request As SVCSearch.PopulateEmailGridWithWeightsRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateEmailGridWithWeightsResponse) Implements SVCSearch.IService1.PopulateEmailGridWithWeightsAsync
            Return MyBase.Channel.PopulateEmailGridWithWeightsAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_LoadUserSearchHistory(ByVal request As SVCSearch.LoadUserSearchHistoryRequest) As SVCSearch.LoadUserSearchHistoryResponse Implements SVCSearch.IService1.LoadUserSearchHistory
            Return MyBase.Channel.LoadUserSearchHistory(request)
        End Function
        
        Public Sub LoadUserSearchHistory(ByRef SecureID As Integer, ByVal MaxNbrSearches As Integer, ByVal Uid As String, ByVal Screen As String, ByRef SearchHistoryArrayList() As String, ByRef NbrReturned As Integer)
            Dim inValue As SVCSearch.LoadUserSearchHistoryRequest = New SVCSearch.LoadUserSearchHistoryRequest()
            inValue.SecureID = SecureID
            inValue.MaxNbrSearches = MaxNbrSearches
            inValue.Uid = Uid
            inValue.Screen = Screen
            inValue.SearchHistoryArrayList = SearchHistoryArrayList
            inValue.NbrReturned = NbrReturned
            Dim retVal As SVCSearch.LoadUserSearchHistoryResponse = CType(Me,SVCSearch.IService1).LoadUserSearchHistory(inValue)
            SecureID = retVal.SecureID
            SearchHistoryArrayList = retVal.SearchHistoryArrayList
            NbrReturned = retVal.NbrReturned
        End Sub
        
        Public Function LoadUserSearchHistoryAsync(ByVal request As SVCSearch.LoadUserSearchHistoryRequest) As System.Threading.Tasks.Task(Of SVCSearch.LoadUserSearchHistoryResponse) Implements SVCSearch.IService1.LoadUserSearchHistoryAsync
            Return MyBase.Channel.LoadUserSearchHistoryAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getAttachmentWeights(ByVal request As SVCSearch.getAttachmentWeightsRequest) As SVCSearch.getAttachmentWeightsResponse Implements SVCSearch.IService1.getAttachmentWeights
            Return MyBase.Channel.getAttachmentWeights(request)
        End Function
        
        Public Sub getAttachmentWeights(ByRef SecureID As Integer, ByRef SL As System.Collections.Generic.Dictionary(Of String, Integer), ByVal UserID As String)
            Dim inValue As SVCSearch.getAttachmentWeightsRequest = New SVCSearch.getAttachmentWeightsRequest()
            inValue.SecureID = SecureID
            inValue.SL = SL
            inValue.UserID = UserID
            Dim retVal As SVCSearch.getAttachmentWeightsResponse = CType(Me,SVCSearch.IService1).getAttachmentWeights(inValue)
            SecureID = retVal.SecureID
            SL = retVal.SL
        End Sub
        
        Public Function getAttachmentWeightsAsync(ByVal request As SVCSearch.getAttachmentWeightsRequest) As System.Threading.Tasks.Task(Of SVCSearch.getAttachmentWeightsResponse) Implements SVCSearch.IService1.getAttachmentWeightsAsync
            Return MyBase.Channel.getAttachmentWeightsAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_ExecuteSqlNewConn1(ByVal request As SVCSearch.ExecuteSqlNewConn1Request) As SVCSearch.ExecuteSqlNewConn1Response Implements SVCSearch.IService1.ExecuteSqlNewConn1
            Return MyBase.Channel.ExecuteSqlNewConn1(request)
        End Function
        
        Public Function ExecuteSqlNewConn1(ByRef SecureID As Integer, ByRef EncryptedMySql As String, ByVal UserID As String, ByVal ContractID As String) As Boolean
            Dim inValue As SVCSearch.ExecuteSqlNewConn1Request = New SVCSearch.ExecuteSqlNewConn1Request()
            inValue.SecureID = SecureID
            inValue.EncryptedMySql = EncryptedMySql
            inValue.UserID = UserID
            inValue.ContractID = ContractID
            Dim retVal As SVCSearch.ExecuteSqlNewConn1Response = CType(Me,SVCSearch.IService1).ExecuteSqlNewConn1(inValue)
            SecureID = retVal.SecureID
            EncryptedMySql = retVal.EncryptedMySql
            Return retVal.ExecuteSqlNewConn1Result
        End Function
        
        Public Function ExecuteSqlNewConn1Async(ByVal request As SVCSearch.ExecuteSqlNewConn1Request) As System.Threading.Tasks.Task(Of SVCSearch.ExecuteSqlNewConn1Response) Implements SVCSearch.IService1.ExecuteSqlNewConn1Async
            Return MyBase.Channel.ExecuteSqlNewConn1Async(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_ExecuteSqlNewConn2(ByVal request As SVCSearch.ExecuteSqlNewConn2Request) As SVCSearch.ExecuteSqlNewConn2Response Implements SVCSearch.IService1.ExecuteSqlNewConn2
            Return MyBase.Channel.ExecuteSqlNewConn2(request)
        End Function
        
        Public Function ExecuteSqlNewConn2(ByRef SecureID As Integer, ByRef EncryptedMySql As String, ByVal UserID As String, ByVal ContractID As String) As Boolean
            Dim inValue As SVCSearch.ExecuteSqlNewConn2Request = New SVCSearch.ExecuteSqlNewConn2Request()
            inValue.SecureID = SecureID
            inValue.EncryptedMySql = EncryptedMySql
            inValue.UserID = UserID
            inValue.ContractID = ContractID
            Dim retVal As SVCSearch.ExecuteSqlNewConn2Response = CType(Me,SVCSearch.IService1).ExecuteSqlNewConn2(inValue)
            SecureID = retVal.SecureID
            EncryptedMySql = retVal.EncryptedMySql
            Return retVal.ExecuteSqlNewConn2Result
        End Function
        
        Public Function ExecuteSqlNewConn2Async(ByVal request As SVCSearch.ExecuteSqlNewConn2Request) As System.Threading.Tasks.Task(Of SVCSearch.ExecuteSqlNewConn2Response) Implements SVCSearch.IService1.ExecuteSqlNewConn2Async
            Return MyBase.Channel.ExecuteSqlNewConn2Async(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_ExecuteSqlNewConn3(ByVal request As SVCSearch.ExecuteSqlNewConn3Request) As SVCSearch.ExecuteSqlNewConn3Response Implements SVCSearch.IService1.ExecuteSqlNewConn3
            Return MyBase.Channel.ExecuteSqlNewConn3(request)
        End Function
        
        Public Function ExecuteSqlNewConn3(ByRef SecureID As Integer, ByRef EncryptedMySql As String, ByVal UserID As String, ByVal ContractID As String) As Boolean
            Dim inValue As SVCSearch.ExecuteSqlNewConn3Request = New SVCSearch.ExecuteSqlNewConn3Request()
            inValue.SecureID = SecureID
            inValue.EncryptedMySql = EncryptedMySql
            inValue.UserID = UserID
            inValue.ContractID = ContractID
            Dim retVal As SVCSearch.ExecuteSqlNewConn3Response = CType(Me,SVCSearch.IService1).ExecuteSqlNewConn3(inValue)
            SecureID = retVal.SecureID
            EncryptedMySql = retVal.EncryptedMySql
            Return retVal.ExecuteSqlNewConn3Result
        End Function
        
        Public Function ExecuteSqlNewConn3Async(ByVal request As SVCSearch.ExecuteSqlNewConn3Request) As System.Threading.Tasks.Task(Of SVCSearch.ExecuteSqlNewConn3Response) Implements SVCSearch.IService1.ExecuteSqlNewConn3Async
            Return MyBase.Channel.ExecuteSqlNewConn3Async(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_ExecuteSqlNewConn4(ByVal request As SVCSearch.ExecuteSqlNewConn4Request) As SVCSearch.ExecuteSqlNewConn4Response Implements SVCSearch.IService1.ExecuteSqlNewConn4
            Return MyBase.Channel.ExecuteSqlNewConn4(request)
        End Function
        
        Public Function ExecuteSqlNewConn4(ByRef SecureID As Integer, ByRef EncryptedMySql As String, ByVal UserID As String, ByVal ContractID As String) As Boolean
            Dim inValue As SVCSearch.ExecuteSqlNewConn4Request = New SVCSearch.ExecuteSqlNewConn4Request()
            inValue.SecureID = SecureID
            inValue.EncryptedMySql = EncryptedMySql
            inValue.UserID = UserID
            inValue.ContractID = ContractID
            Dim retVal As SVCSearch.ExecuteSqlNewConn4Response = CType(Me,SVCSearch.IService1).ExecuteSqlNewConn4(inValue)
            SecureID = retVal.SecureID
            EncryptedMySql = retVal.EncryptedMySql
            Return retVal.ExecuteSqlNewConn4Result
        End Function
        
        Public Function ExecuteSqlNewConn4Async(ByVal request As SVCSearch.ExecuteSqlNewConn4Request) As System.Threading.Tasks.Task(Of SVCSearch.ExecuteSqlNewConn4Response) Implements SVCSearch.IService1.ExecuteSqlNewConn4Async
            Return MyBase.Channel.ExecuteSqlNewConn4Async(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_ExecuteSqlNewConn5(ByVal request As SVCSearch.ExecuteSqlNewConn5Request) As SVCSearch.ExecuteSqlNewConn5Response Implements SVCSearch.IService1.ExecuteSqlNewConn5
            Return MyBase.Channel.ExecuteSqlNewConn5(request)
        End Function
        
        Public Function ExecuteSqlNewConn5(ByRef SecureID As Integer, ByRef EncryptedMySql As String, ByVal UserID As String, ByVal ContractID As String) As Boolean
            Dim inValue As SVCSearch.ExecuteSqlNewConn5Request = New SVCSearch.ExecuteSqlNewConn5Request()
            inValue.SecureID = SecureID
            inValue.EncryptedMySql = EncryptedMySql
            inValue.UserID = UserID
            inValue.ContractID = ContractID
            Dim retVal As SVCSearch.ExecuteSqlNewConn5Response = CType(Me,SVCSearch.IService1).ExecuteSqlNewConn5(inValue)
            SecureID = retVal.SecureID
            EncryptedMySql = retVal.EncryptedMySql
            Return retVal.ExecuteSqlNewConn5Result
        End Function
        
        Public Function ExecuteSqlNewConn5Async(ByVal request As SVCSearch.ExecuteSqlNewConn5Request) As System.Threading.Tasks.Task(Of SVCSearch.ExecuteSqlNewConn5Response) Implements SVCSearch.IService1.ExecuteSqlNewConn5Async
            Return MyBase.Channel.ExecuteSqlNewConn5Async(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_ExecuteSqlNewConnSecure(ByVal request As SVCSearch.ExecuteSqlNewConnSecureRequest) As SVCSearch.ExecuteSqlNewConnSecureResponse Implements SVCSearch.IService1.ExecuteSqlNewConnSecure
            Return MyBase.Channel.ExecuteSqlNewConnSecure(request)
        End Function
        
        Public Function ExecuteSqlNewConnSecure(ByRef SecureID As Integer, ByRef MySql As String, ByVal UserID As String, ByVal ContractID As String) As Boolean
            Dim inValue As SVCSearch.ExecuteSqlNewConnSecureRequest = New SVCSearch.ExecuteSqlNewConnSecureRequest()
            inValue.SecureID = SecureID
            inValue.MySql = MySql
            inValue.UserID = UserID
            inValue.ContractID = ContractID
            Dim retVal As SVCSearch.ExecuteSqlNewConnSecureResponse = CType(Me,SVCSearch.IService1).ExecuteSqlNewConnSecure(inValue)
            SecureID = retVal.SecureID
            MySql = retVal.MySql
            Return retVal.ExecuteSqlNewConnSecureResult
        End Function
        
        Public Function ExecuteSqlNewConnSecureAsync(ByVal request As SVCSearch.ExecuteSqlNewConnSecureRequest) As System.Threading.Tasks.Task(Of SVCSearch.ExecuteSqlNewConnSecureResponse) Implements SVCSearch.IService1.ExecuteSqlNewConnSecureAsync
            Return MyBase.Channel.ExecuteSqlNewConnSecureAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_GetParmValue(ByVal request As SVCSearch.GetParmValueRequest) As SVCSearch.GetParmValueResponse Implements SVCSearch.IService1.GetParmValue
            Return MyBase.Channel.GetParmValue(request)
        End Function
        
        Public Sub GetParmValue(ByRef SecureID As Integer, ByVal UID As String, ByRef Parms() As String)
            Dim inValue As SVCSearch.GetParmValueRequest = New SVCSearch.GetParmValueRequest()
            inValue.SecureID = SecureID
            inValue.UID = UID
            inValue.Parms = Parms
            Dim retVal As SVCSearch.GetParmValueResponse = CType(Me,SVCSearch.IService1).GetParmValue(inValue)
            SecureID = retVal.SecureID
            Parms = retVal.Parms
        End Sub
        
        Public Function GetParmValueAsync(ByVal request As SVCSearch.GetParmValueRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetParmValueResponse) Implements SVCSearch.IService1.GetParmValueAsync
            Return MyBase.Channel.GetParmValueAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_DBisGlobalSearcher(ByVal request As SVCSearch.DBisGlobalSearcherRequest) As SVCSearch.DBisGlobalSearcherResponse Implements SVCSearch.IService1.DBisGlobalSearcher
            Return MyBase.Channel.DBisGlobalSearcher(request)
        End Function
        
        Public Function DBisGlobalSearcher(ByRef SecureID As Integer, ByVal Userid As String) As Boolean
            Dim inValue As SVCSearch.DBisGlobalSearcherRequest = New SVCSearch.DBisGlobalSearcherRequest()
            inValue.SecureID = SecureID
            inValue.Userid = Userid
            Dim retVal As SVCSearch.DBisGlobalSearcherResponse = CType(Me,SVCSearch.IService1).DBisGlobalSearcher(inValue)
            SecureID = retVal.SecureID
            Return retVal.DBisGlobalSearcherResult
        End Function
        
        Public Function DBisGlobalSearcherAsync(ByVal request As SVCSearch.DBisGlobalSearcherRequest) As System.Threading.Tasks.Task(Of SVCSearch.DBisGlobalSearcherResponse) Implements SVCSearch.IService1.DBisGlobalSearcherAsync
            Return MyBase.Channel.DBisGlobalSearcherAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_DBisAdmin(ByVal request As SVCSearch.DBisAdminRequest) As SVCSearch.DBisAdminResponse Implements SVCSearch.IService1.DBisAdmin
            Return MyBase.Channel.DBisAdmin(request)
        End Function
        
        Public Function DBisAdmin(ByRef SecureID As Integer, ByVal Userid As String) As Boolean
            Dim inValue As SVCSearch.DBisAdminRequest = New SVCSearch.DBisAdminRequest()
            inValue.SecureID = SecureID
            inValue.Userid = Userid
            Dim retVal As SVCSearch.DBisAdminResponse = CType(Me,SVCSearch.IService1).DBisAdmin(inValue)
            SecureID = retVal.SecureID
            Return retVal.DBisAdminResult
        End Function
        
        Public Function DBisAdminAsync(ByVal request As SVCSearch.DBisAdminRequest) As System.Threading.Tasks.Task(Of SVCSearch.DBisAdminResponse) Implements SVCSearch.IService1.DBisAdminAsync
            Return MyBase.Channel.DBisAdminAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getUserParm(ByVal request As SVCSearch.getUserParmRequest) As SVCSearch.getUserParmResponse Implements SVCSearch.IService1.getUserParm
            Return MyBase.Channel.getUserParm(request)
        End Function
        
        Public Sub getUserParm(ByRef SecureID As Integer, ByRef sVariable As String, ByVal UserParm As String)
            Dim inValue As SVCSearch.getUserParmRequest = New SVCSearch.getUserParmRequest()
            inValue.SecureID = SecureID
            inValue.sVariable = sVariable
            inValue.UserParm = UserParm
            Dim retVal As SVCSearch.getUserParmResponse = CType(Me,SVCSearch.IService1).getUserParm(inValue)
            SecureID = retVal.SecureID
            sVariable = retVal.sVariable
        End Sub
        
        Public Function getUserParmAsync(ByVal request As SVCSearch.getUserParmRequest) As System.Threading.Tasks.Task(Of SVCSearch.getUserParmResponse) Implements SVCSearch.IService1.getUserParmAsync
            Return MyBase.Channel.getUserParmAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_RemoveUnwantedCharacters(ByVal request As SVCSearch.RemoveUnwantedCharactersRequest) As SVCSearch.RemoveUnwantedCharactersResponse Implements SVCSearch.IService1.RemoveUnwantedCharacters
            Return MyBase.Channel.RemoveUnwantedCharacters(request)
        End Function
        
        Public Sub RemoveUnwantedCharacters(ByRef SecureID As Integer, ByRef tgtString As String)
            Dim inValue As SVCSearch.RemoveUnwantedCharactersRequest = New SVCSearch.RemoveUnwantedCharactersRequest()
            inValue.SecureID = SecureID
            inValue.tgtString = tgtString
            Dim retVal As SVCSearch.RemoveUnwantedCharactersResponse = CType(Me,SVCSearch.IService1).RemoveUnwantedCharacters(inValue)
            SecureID = retVal.SecureID
            tgtString = retVal.tgtString
        End Sub
        
        Public Function RemoveUnwantedCharactersAsync(ByVal request As SVCSearch.RemoveUnwantedCharactersRequest) As System.Threading.Tasks.Task(Of SVCSearch.RemoveUnwantedCharactersResponse) Implements SVCSearch.IService1.RemoveUnwantedCharactersAsync
            Return MyBase.Channel.RemoveUnwantedCharactersAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_GetMachineIP(ByVal request As SVCSearch.GetMachineIPRequest) As SVCSearch.GetMachineIPResponse Implements SVCSearch.IService1.GetMachineIP
            Return MyBase.Channel.GetMachineIP(request)
        End Function
        
        Public Function GetMachineIP(ByRef SecureID As Integer) As String
            Dim inValue As SVCSearch.GetMachineIPRequest = New SVCSearch.GetMachineIPRequest()
            inValue.SecureID = SecureID
            Dim retVal As SVCSearch.GetMachineIPResponse = CType(Me,SVCSearch.IService1).GetMachineIP(inValue)
            SecureID = retVal.SecureID
            Return retVal.GetMachineIPResult
        End Function
        
        Public Function GetMachineIPAsync(ByVal request As SVCSearch.GetMachineIPRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetMachineIPResponse) Implements SVCSearch.IService1.GetMachineIPAsync
            Return MyBase.Channel.GetMachineIPAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getClientLicenses(ByVal request As SVCSearch.getClientLicensesRequest) As SVCSearch.getClientLicensesResponse Implements SVCSearch.IService1.getClientLicenses
            Return MyBase.Channel.getClientLicenses(request)
        End Function
        
        Public Function getClientLicenses(ByRef SecureID As Integer, ByVal CompanyID As String, ByRef ErrorMessage As String, ByRef RC As Boolean) As SVCSearch.DS_License()
            Dim inValue As SVCSearch.getClientLicensesRequest = New SVCSearch.getClientLicensesRequest()
            inValue.SecureID = SecureID
            inValue.CompanyID = CompanyID
            inValue.ErrorMessage = ErrorMessage
            inValue.RC = RC
            Dim retVal As SVCSearch.getClientLicensesResponse = CType(Me,SVCSearch.IService1).getClientLicenses(inValue)
            SecureID = retVal.SecureID
            ErrorMessage = retVal.ErrorMessage
            RC = retVal.RC
            Return retVal.getClientLicensesResult
        End Function
        
        Public Function getClientLicensesAsync(ByVal request As SVCSearch.getClientLicensesRequest) As System.Threading.Tasks.Task(Of SVCSearch.getClientLicensesResponse) Implements SVCSearch.IService1.getClientLicensesAsync
            Return MyBase.Channel.getClientLicensesAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_PopulateUserGrid(ByVal request As SVCSearch.PopulateUserGridRequest) As SVCSearch.PopulateUserGridResponse Implements SVCSearch.IService1.PopulateUserGrid
            Return MyBase.Channel.PopulateUserGrid(request)
        End Function
        
        Public Function PopulateUserGrid(ByRef SecureID As Integer, ByVal UserID As String, ByVal DBisAdmin As Boolean) As SVCSearch.DS_VUserGrid()
            Dim inValue As SVCSearch.PopulateUserGridRequest = New SVCSearch.PopulateUserGridRequest()
            inValue.SecureID = SecureID
            inValue.UserID = UserID
            inValue.DBisAdmin = DBisAdmin
            Dim retVal As SVCSearch.PopulateUserGridResponse = CType(Me,SVCSearch.IService1).PopulateUserGrid(inValue)
            SecureID = retVal.SecureID
            Return retVal.PopulateUserGridResult
        End Function
        
        Public Function PopulateUserGridAsync(ByVal request As SVCSearch.PopulateUserGridRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateUserGridResponse) Implements SVCSearch.IService1.PopulateUserGridAsync
            Return MyBase.Channel.PopulateUserGridAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getGroupUsers(ByVal request As SVCSearch.getGroupUsersRequest) As SVCSearch.getGroupUsersResponse Implements SVCSearch.IService1.getGroupUsers
            Return MyBase.Channel.getGroupUsers(request)
        End Function
        
        Public Sub getGroupUsers(ByRef SecureID As Integer, ByVal GroupName As String, ByRef GroupList() As Object, ByRef RC As Boolean, ByRef RetMsg As String)
            Dim inValue As SVCSearch.getGroupUsersRequest = New SVCSearch.getGroupUsersRequest()
            inValue.SecureID = SecureID
            inValue.GroupName = GroupName
            inValue.GroupList = GroupList
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            Dim retVal As SVCSearch.getGroupUsersResponse = CType(Me,SVCSearch.IService1).getGroupUsers(inValue)
            SecureID = retVal.SecureID
            GroupList = retVal.GroupList
            RC = retVal.RC
            RetMsg = retVal.RetMsg
        End Sub
        
        Public Function getGroupUsersAsync(ByVal request As SVCSearch.getGroupUsersRequest) As System.Threading.Tasks.Task(Of SVCSearch.getGroupUsersResponse) Implements SVCSearch.IService1.getGroupUsersAsync
            Return MyBase.Channel.getGroupUsersAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_PopulateDgGroupUsers(ByVal request As SVCSearch.PopulateDgGroupUsersRequest) As SVCSearch.PopulateDgGroupUsersResponse Implements SVCSearch.IService1.PopulateDgGroupUsers
            Return MyBase.Channel.PopulateDgGroupUsers(request)
        End Function
        
        Public Function PopulateDgGroupUsers(ByRef SecureID As Integer, ByVal OwnerUserGuidID As String, ByVal GroupName As String) As String
            Dim inValue As SVCSearch.PopulateDgGroupUsersRequest = New SVCSearch.PopulateDgGroupUsersRequest()
            inValue.SecureID = SecureID
            inValue.OwnerUserGuidID = OwnerUserGuidID
            inValue.GroupName = GroupName
            Dim retVal As SVCSearch.PopulateDgGroupUsersResponse = CType(Me,SVCSearch.IService1).PopulateDgGroupUsers(inValue)
            SecureID = retVal.SecureID
            Return retVal.PopulateDgGroupUsersResult
        End Function
        
        Public Function PopulateDgGroupUsersAsync(ByVal request As SVCSearch.PopulateDgGroupUsersRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateDgGroupUsersResponse) Implements SVCSearch.IService1.PopulateDgGroupUsersAsync
            Return MyBase.Channel.PopulateDgGroupUsersAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_DeleteGroupUsers(ByVal request As SVCSearch.DeleteGroupUsersRequest) As SVCSearch.DeleteGroupUsersResponse Implements SVCSearch.IService1.DeleteGroupUsers
            Return MyBase.Channel.DeleteGroupUsers(request)
        End Function
        
        Public Function DeleteGroupUsers(ByVal SecureID As Integer, ByVal CurrSelectedGroupName As String, ByVal GroupOwnerGuid As String, ByVal UserID As String, ByRef iDeleted As Integer, ByRef RetMsg As String) As Boolean
            Dim inValue As SVCSearch.DeleteGroupUsersRequest = New SVCSearch.DeleteGroupUsersRequest()
            inValue.SecureID = SecureID
            inValue.CurrSelectedGroupName = CurrSelectedGroupName
            inValue.GroupOwnerGuid = GroupOwnerGuid
            inValue.UserID = UserID
            inValue.iDeleted = iDeleted
            inValue.RetMsg = RetMsg
            Dim retVal As SVCSearch.DeleteGroupUsersResponse = CType(Me,SVCSearch.IService1).DeleteGroupUsers(inValue)
            iDeleted = retVal.iDeleted
            RetMsg = retVal.RetMsg
            Return retVal.DeleteGroupUsersResult
        End Function
        
        Public Function DeleteGroupUsersAsync(ByVal request As SVCSearch.DeleteGroupUsersRequest) As System.Threading.Tasks.Task(Of SVCSearch.DeleteGroupUsersResponse) Implements SVCSearch.IService1.DeleteGroupUsersAsync
            Return MyBase.Channel.DeleteGroupUsersAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getGroupOwnerGuidByGroupName(ByVal request As SVCSearch.getGroupOwnerGuidByGroupNameRequest) As SVCSearch.getGroupOwnerGuidByGroupNameResponse Implements SVCSearch.IService1.getGroupOwnerGuidByGroupName
            Return MyBase.Channel.getGroupOwnerGuidByGroupName(request)
        End Function
        
        Public Function getGroupOwnerGuidByGroupName(ByRef SecureID As Integer, ByVal GroupName As String) As String
            Dim inValue As SVCSearch.getGroupOwnerGuidByGroupNameRequest = New SVCSearch.getGroupOwnerGuidByGroupNameRequest()
            inValue.SecureID = SecureID
            inValue.GroupName = GroupName
            Dim retVal As SVCSearch.getGroupOwnerGuidByGroupNameResponse = CType(Me,SVCSearch.IService1).getGroupOwnerGuidByGroupName(inValue)
            SecureID = retVal.SecureID
            Return retVal.getGroupOwnerGuidByGroupNameResult
        End Function
        
        Public Function getGroupOwnerGuidByGroupNameAsync(ByVal request As SVCSearch.getGroupOwnerGuidByGroupNameRequest) As System.Threading.Tasks.Task(Of SVCSearch.getGroupOwnerGuidByGroupNameResponse) Implements SVCSearch.IService1.getGroupOwnerGuidByGroupNameAsync
            Return MyBase.Channel.getGroupOwnerGuidByGroupNameAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_AddLibraryGroupUser(ByVal request As SVCSearch.AddLibraryGroupUserRequest) As SVCSearch.AddLibraryGroupUserResponse Implements SVCSearch.IService1.AddLibraryGroupUser
            Return MyBase.Channel.AddLibraryGroupUser(request)
        End Function
        
        Public Sub AddLibraryGroupUser(ByRef SecureID As Integer, ByVal GroupName As String, ByRef RC As Boolean, ByVal CurrUserID As String, ByVal SessionID As String, ByVal ControlSection As String)
            Dim inValue As SVCSearch.AddLibraryGroupUserRequest = New SVCSearch.AddLibraryGroupUserRequest()
            inValue.SecureID = SecureID
            inValue.GroupName = GroupName
            inValue.RC = RC
            inValue.CurrUserID = CurrUserID
            inValue.SessionID = SessionID
            inValue.ControlSection = ControlSection
            Dim retVal As SVCSearch.AddLibraryGroupUserResponse = CType(Me,SVCSearch.IService1).AddLibraryGroupUser(inValue)
            SecureID = retVal.SecureID
            RC = retVal.RC
        End Sub
        
        Public Function AddLibraryGroupUserAsync(ByVal request As SVCSearch.AddLibraryGroupUserRequest) As System.Threading.Tasks.Task(Of SVCSearch.AddLibraryGroupUserResponse) Implements SVCSearch.IService1.AddLibraryGroupUserAsync
            Return MyBase.Channel.AddLibraryGroupUserAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_PopulateGroupUserGrid(ByVal request As SVCSearch.PopulateGroupUserGridRequest) As SVCSearch.PopulateGroupUserGridResponse Implements SVCSearch.IService1.PopulateGroupUserGrid
            Return MyBase.Channel.PopulateGroupUserGrid(request)
        End Function
        
        Public Function PopulateGroupUserGrid(ByRef SecureID As Integer, ByVal GroupName As String) As String
            Dim inValue As SVCSearch.PopulateGroupUserGridRequest = New SVCSearch.PopulateGroupUserGridRequest()
            inValue.SecureID = SecureID
            inValue.GroupName = GroupName
            Dim retVal As SVCSearch.PopulateGroupUserGridResponse = CType(Me,SVCSearch.IService1).PopulateGroupUserGrid(inValue)
            SecureID = retVal.SecureID
            Return retVal.PopulateGroupUserGridResult
        End Function
        
        Public Function PopulateGroupUserGridAsync(ByVal request As SVCSearch.PopulateGroupUserGridRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateGroupUserGridResponse) Implements SVCSearch.IService1.PopulateGroupUserGridAsync
            Return MyBase.Channel.PopulateGroupUserGridAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_PopulateLibItemsGrid(ByVal request As SVCSearch.PopulateLibItemsGridRequest) As SVCSearch.PopulateLibItemsGridResponse Implements SVCSearch.IService1.PopulateLibItemsGrid
            Return MyBase.Channel.PopulateLibItemsGrid(request)
        End Function
        
        Public Function PopulateLibItemsGrid(ByRef SecureID As Integer, ByVal LibraryName As String, ByVal UserID As String) As String
            Dim inValue As SVCSearch.PopulateLibItemsGridRequest = New SVCSearch.PopulateLibItemsGridRequest()
            inValue.SecureID = SecureID
            inValue.LibraryName = LibraryName
            inValue.UserID = UserID
            Dim retVal As SVCSearch.PopulateLibItemsGridResponse = CType(Me,SVCSearch.IService1).PopulateLibItemsGrid(inValue)
            SecureID = retVal.SecureID
            Return retVal.PopulateLibItemsGridResult
        End Function
        
        Public Function PopulateLibItemsGridAsync(ByVal request As SVCSearch.PopulateLibItemsGridRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateLibItemsGridResponse) Implements SVCSearch.IService1.PopulateLibItemsGridAsync
            Return MyBase.Channel.PopulateLibItemsGridAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_PopulateDgAssigned(ByVal request As SVCSearch.PopulateDgAssignedRequest) As SVCSearch.PopulateDgAssignedResponse Implements SVCSearch.IService1.PopulateDgAssigned
            Return MyBase.Channel.PopulateDgAssigned(request)
        End Function
        
        Public Function PopulateDgAssigned(ByRef SecureID As Integer, ByVal LibraryName As String, ByVal UserID As String) As String
            Dim inValue As SVCSearch.PopulateDgAssignedRequest = New SVCSearch.PopulateDgAssignedRequest()
            inValue.SecureID = SecureID
            inValue.LibraryName = LibraryName
            inValue.UserID = UserID
            Dim retVal As SVCSearch.PopulateDgAssignedResponse = CType(Me,SVCSearch.IService1).PopulateDgAssigned(inValue)
            SecureID = retVal.SecureID
            Return retVal.PopulateDgAssignedResult
        End Function
        
        Public Function PopulateDgAssignedAsync(ByVal request As SVCSearch.PopulateDgAssignedRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateDgAssignedResponse) Implements SVCSearch.IService1.PopulateDgAssignedAsync
            Return MyBase.Channel.PopulateDgAssignedAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_ResetLibraryUsersCount(ByVal request As SVCSearch.ResetLibraryUsersCountRequest) As SVCSearch.ResetLibraryUsersCountResponse Implements SVCSearch.IService1.ResetLibraryUsersCount
            Return MyBase.Channel.ResetLibraryUsersCount(request)
        End Function
        
        Public Sub ResetLibraryUsersCount(ByRef SecureID As Integer, ByRef RC As Boolean)
            Dim inValue As SVCSearch.ResetLibraryUsersCountRequest = New SVCSearch.ResetLibraryUsersCountRequest()
            inValue.SecureID = SecureID
            inValue.RC = RC
            Dim retVal As SVCSearch.ResetLibraryUsersCountResponse = CType(Me,SVCSearch.IService1).ResetLibraryUsersCount(inValue)
            SecureID = retVal.SecureID
            RC = retVal.RC
        End Sub
        
        Public Function ResetLibraryUsersCountAsync(ByVal request As SVCSearch.ResetLibraryUsersCountRequest) As System.Threading.Tasks.Task(Of SVCSearch.ResetLibraryUsersCountResponse) Implements SVCSearch.IService1.ResetLibraryUsersCountAsync
            Return MyBase.Channel.ResetLibraryUsersCountAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_DeleteLibraryGroupUser(ByVal request As SVCSearch.DeleteLibraryGroupUserRequest) As SVCSearch.DeleteLibraryGroupUserResponse Implements SVCSearch.IService1.DeleteLibraryGroupUser
            Return MyBase.Channel.DeleteLibraryGroupUser(request)
        End Function
        
        Public Sub DeleteLibraryGroupUser(ByRef SecureID As Integer, ByVal GroupName As String, ByVal LibraryName As String, ByRef RC As Boolean)
            Dim inValue As SVCSearch.DeleteLibraryGroupUserRequest = New SVCSearch.DeleteLibraryGroupUserRequest()
            inValue.SecureID = SecureID
            inValue.GroupName = GroupName
            inValue.LibraryName = LibraryName
            inValue.RC = RC
            Dim retVal As SVCSearch.DeleteLibraryGroupUserResponse = CType(Me,SVCSearch.IService1).DeleteLibraryGroupUser(inValue)
            SecureID = retVal.SecureID
            RC = retVal.RC
        End Sub
        
        Public Function DeleteLibraryGroupUserAsync(ByVal request As SVCSearch.DeleteLibraryGroupUserRequest) As System.Threading.Tasks.Task(Of SVCSearch.DeleteLibraryGroupUserResponse) Implements SVCSearch.IService1.DeleteLibraryGroupUserAsync
            Return MyBase.Channel.DeleteLibraryGroupUserAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_ChangeUserPassword(ByVal request As SVCSearch.ChangeUserPasswordRequest) As SVCSearch.ChangeUserPasswordResponse Implements SVCSearch.IService1.ChangeUserPassword
            Return MyBase.Channel.ChangeUserPassword(request)
        End Function
        
        Public Function ChangeUserPassword(ByRef SecureID As Integer, ByVal UserLogin As String, ByVal OldPW As String, ByVal NewPw1 As String, ByVal NewPw2 As String) As Boolean
            Dim inValue As SVCSearch.ChangeUserPasswordRequest = New SVCSearch.ChangeUserPasswordRequest()
            inValue.SecureID = SecureID
            inValue.UserLogin = UserLogin
            inValue.OldPW = OldPW
            inValue.NewPw1 = NewPw1
            inValue.NewPw2 = NewPw2
            Dim retVal As SVCSearch.ChangeUserPasswordResponse = CType(Me,SVCSearch.IService1).ChangeUserPassword(inValue)
            SecureID = retVal.SecureID
            Return retVal.ChangeUserPasswordResult
        End Function
        
        Public Function ChangeUserPasswordAsync(ByVal request As SVCSearch.ChangeUserPasswordRequest) As System.Threading.Tasks.Task(Of SVCSearch.ChangeUserPasswordResponse) Implements SVCSearch.IService1.ChangeUserPasswordAsync
            Return MyBase.Channel.ChangeUserPasswordAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_SaveClickStats(ByVal request As SVCSearch.SaveClickStatsRequest) As SVCSearch.SaveClickStatsResponse Implements SVCSearch.IService1.SaveClickStats
            Return MyBase.Channel.SaveClickStats(request)
        End Function
        
        Public Sub SaveClickStats(ByVal SecureID As Integer, ByVal IID As Integer, ByVal UserID As String, ByRef RC As Boolean)
            Dim inValue As SVCSearch.SaveClickStatsRequest = New SVCSearch.SaveClickStatsRequest()
            inValue.SecureID = SecureID
            inValue.IID = IID
            inValue.UserID = UserID
            inValue.RC = RC
            Dim retVal As SVCSearch.SaveClickStatsResponse = CType(Me,SVCSearch.IService1).SaveClickStats(inValue)
            RC = retVal.RC
        End Sub
        
        Public Function SaveClickStatsAsync(ByVal request As SVCSearch.SaveClickStatsRequest) As System.Threading.Tasks.Task(Of SVCSearch.SaveClickStatsResponse) Implements SVCSearch.IService1.SaveClickStatsAsync
            Return MyBase.Channel.SaveClickStatsAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_cleanUpLibraryItems(ByVal request As SVCSearch.cleanUpLibraryItemsRequest) As SVCSearch.cleanUpLibraryItemsResponse Implements SVCSearch.IService1.cleanUpLibraryItems
            Return MyBase.Channel.cleanUpLibraryItems(request)
        End Function
        
        Public Sub cleanUpLibraryItems(ByRef SecureID As Integer, ByVal UserID As String)
            Dim inValue As SVCSearch.cleanUpLibraryItemsRequest = New SVCSearch.cleanUpLibraryItemsRequest()
            inValue.SecureID = SecureID
            inValue.UserID = UserID
            Dim retVal As SVCSearch.cleanUpLibraryItemsResponse = CType(Me,SVCSearch.IService1).cleanUpLibraryItems(inValue)
            SecureID = retVal.SecureID
        End Sub
        
        Public Function cleanUpLibraryItemsAsync(ByVal request As SVCSearch.cleanUpLibraryItemsRequest) As System.Threading.Tasks.Task(Of SVCSearch.cleanUpLibraryItemsResponse) Implements SVCSearch.IService1.cleanUpLibraryItemsAsync
            Return MyBase.Channel.cleanUpLibraryItemsAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_RemoveLibraryDirectories(ByVal request As SVCSearch.RemoveLibraryDirectoriesRequest) As SVCSearch.RemoveLibraryDirectoriesResponse Implements SVCSearch.IService1.RemoveLibraryDirectories
            Return MyBase.Channel.RemoveLibraryDirectories(request)
        End Function
        
        Public Sub RemoveLibraryDirectories(ByRef SecureID As Integer, ByVal UserID As String, ByVal DirectoryName As String, ByVal LibraryName As String, ByRef RC As Boolean, ByRef RetMsg As String)
            Dim inValue As SVCSearch.RemoveLibraryDirectoriesRequest = New SVCSearch.RemoveLibraryDirectoriesRequest()
            inValue.SecureID = SecureID
            inValue.UserID = UserID
            inValue.DirectoryName = DirectoryName
            inValue.LibraryName = LibraryName
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            Dim retVal As SVCSearch.RemoveLibraryDirectoriesResponse = CType(Me,SVCSearch.IService1).RemoveLibraryDirectories(inValue)
            SecureID = retVal.SecureID
            RC = retVal.RC
            RetMsg = retVal.RetMsg
        End Sub
        
        Public Function RemoveLibraryDirectoriesAsync(ByVal request As SVCSearch.RemoveLibraryDirectoriesRequest) As System.Threading.Tasks.Task(Of SVCSearch.RemoveLibraryDirectoriesResponse) Implements SVCSearch.IService1.RemoveLibraryDirectoriesAsync
            Return MyBase.Channel.RemoveLibraryDirectoriesAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_RemoveLibraryEmails(ByVal request As SVCSearch.RemoveLibraryEmailsRequest) As SVCSearch.RemoveLibraryEmailsResponse Implements SVCSearch.IService1.RemoveLibraryEmails
            Return MyBase.Channel.RemoveLibraryEmails(request)
        End Function
        
        Public Sub RemoveLibraryEmails(ByRef SecureID As Integer, ByVal FolderName As String, ByVal LibraryName As String, ByVal UserID As String, ByRef RC As Boolean, ByRef RetMsg As String)
            Dim inValue As SVCSearch.RemoveLibraryEmailsRequest = New SVCSearch.RemoveLibraryEmailsRequest()
            inValue.SecureID = SecureID
            inValue.FolderName = FolderName
            inValue.LibraryName = LibraryName
            inValue.UserID = UserID
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            Dim retVal As SVCSearch.RemoveLibraryEmailsResponse = CType(Me,SVCSearch.IService1).RemoveLibraryEmails(inValue)
            SecureID = retVal.SecureID
            RC = retVal.RC
            RetMsg = retVal.RetMsg
        End Sub
        
        Public Function RemoveLibraryEmailsAsync(ByVal request As SVCSearch.RemoveLibraryEmailsRequest) As System.Threading.Tasks.Task(Of SVCSearch.RemoveLibraryEmailsResponse) Implements SVCSearch.IService1.RemoveLibraryEmailsAsync
            Return MyBase.Channel.RemoveLibraryEmailsAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_AddSysMsg(ByVal request As SVCSearch.AddSysMsgRequest) As SVCSearch.AddSysMsgResponse Implements SVCSearch.IService1.AddSysMsg
            Return MyBase.Channel.AddSysMsg(request)
        End Function
        
        Public Sub AddSysMsg(ByRef SecureID As Integer, ByVal UserID As String, ByVal tMsg As String, ByVal RC As Boolean)
            Dim inValue As SVCSearch.AddSysMsgRequest = New SVCSearch.AddSysMsgRequest()
            inValue.SecureID = SecureID
            inValue.UserID = UserID
            inValue.tMsg = tMsg
            inValue.RC = RC
            Dim retVal As SVCSearch.AddSysMsgResponse = CType(Me,SVCSearch.IService1).AddSysMsg(inValue)
            SecureID = retVal.SecureID
        End Sub
        
        Public Function AddSysMsgAsync(ByVal request As SVCSearch.AddSysMsgRequest) As System.Threading.Tasks.Task(Of SVCSearch.AddSysMsgResponse) Implements SVCSearch.IService1.AddSysMsgAsync
            Return MyBase.Channel.AddSysMsgAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_AddLibraryDirectory(ByVal request As SVCSearch.AddLibraryDirectoryRequest) As SVCSearch.AddLibraryDirectoryResponse Implements SVCSearch.IService1.AddLibraryDirectory
            Return MyBase.Channel.AddLibraryDirectory(request)
        End Function
        
        Public Sub AddLibraryDirectory(ByRef SecureID As Integer, ByVal FolderName As String, ByVal LibraryName As String, ByVal UserID As String, ByRef RecordsAdded As Integer, ByRef RC As Boolean, ByRef RetMsg As String)
            Dim inValue As SVCSearch.AddLibraryDirectoryRequest = New SVCSearch.AddLibraryDirectoryRequest()
            inValue.SecureID = SecureID
            inValue.FolderName = FolderName
            inValue.LibraryName = LibraryName
            inValue.UserID = UserID
            inValue.RecordsAdded = RecordsAdded
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            Dim retVal As SVCSearch.AddLibraryDirectoryResponse = CType(Me,SVCSearch.IService1).AddLibraryDirectory(inValue)
            SecureID = retVal.SecureID
            RecordsAdded = retVal.RecordsAdded
            RC = retVal.RC
            RetMsg = retVal.RetMsg
        End Sub
        
        Public Function AddLibraryDirectoryAsync(ByVal request As SVCSearch.AddLibraryDirectoryRequest) As System.Threading.Tasks.Task(Of SVCSearch.AddLibraryDirectoryResponse) Implements SVCSearch.IService1.AddLibraryDirectoryAsync
            Return MyBase.Channel.AddLibraryDirectoryAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_AddLibraryEmail(ByVal request As SVCSearch.AddLibraryEmailRequest) As SVCSearch.AddLibraryEmailResponse Implements SVCSearch.IService1.AddLibraryEmail
            Return MyBase.Channel.AddLibraryEmail(request)
        End Function
        
        Public Sub AddLibraryEmail(ByRef SecureID As Integer, ByVal EmailFolder As String, ByVal LibraryName As String, ByVal UserID As String, ByRef RecordsAdded As Integer, ByVal RC As Boolean, ByVal RetMsg As String)
            Dim inValue As SVCSearch.AddLibraryEmailRequest = New SVCSearch.AddLibraryEmailRequest()
            inValue.SecureID = SecureID
            inValue.EmailFolder = EmailFolder
            inValue.LibraryName = LibraryName
            inValue.UserID = UserID
            inValue.RecordsAdded = RecordsAdded
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            Dim retVal As SVCSearch.AddLibraryEmailResponse = CType(Me,SVCSearch.IService1).AddLibraryEmail(inValue)
            SecureID = retVal.SecureID
            RecordsAdded = retVal.RecordsAdded
        End Sub
        
        Public Function AddLibraryEmailAsync(ByVal request As SVCSearch.AddLibraryEmailRequest) As System.Threading.Tasks.Task(Of SVCSearch.AddLibraryEmailResponse) Implements SVCSearch.IService1.AddLibraryEmailAsync
            Return MyBase.Channel.AddLibraryEmailAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_PopulateLibraryGrid(ByVal request As SVCSearch.PopulateLibraryGridRequest) As SVCSearch.PopulateLibraryGridResponse Implements SVCSearch.IService1.PopulateLibraryGrid
            Return MyBase.Channel.PopulateLibraryGrid(request)
        End Function
        
        Public Function PopulateLibraryGrid(ByRef SecureID As Integer, ByVal UserID As String) As String
            Dim inValue As SVCSearch.PopulateLibraryGridRequest = New SVCSearch.PopulateLibraryGridRequest()
            inValue.SecureID = SecureID
            inValue.UserID = UserID
            Dim retVal As SVCSearch.PopulateLibraryGridResponse = CType(Me,SVCSearch.IService1).PopulateLibraryGrid(inValue)
            SecureID = retVal.SecureID
            Return retVal.PopulateLibraryGridResult
        End Function
        
        Public Function PopulateLibraryGridAsync(ByVal request As SVCSearch.PopulateLibraryGridRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateLibraryGridResponse) Implements SVCSearch.IService1.PopulateLibraryGridAsync
            Return MyBase.Channel.PopulateLibraryGridAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getListOfStrings(ByVal request As SVCSearch.getListOfStringsRequest) As SVCSearch.getListOfStringsResponse Implements SVCSearch.IService1.getListOfStrings
            Return MyBase.Channel.getListOfStrings(request)
        End Function
        
        Public Function getListOfStrings(ByRef SecureID As Integer, ByRef strListOfItems As String, ByVal MySql As String, ByRef RC As Boolean, ByRef RetMsg As String) As Boolean
            Dim inValue As SVCSearch.getListOfStringsRequest = New SVCSearch.getListOfStringsRequest()
            inValue.SecureID = SecureID
            inValue.strListOfItems = strListOfItems
            inValue.MySql = MySql
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            Dim retVal As SVCSearch.getListOfStringsResponse = CType(Me,SVCSearch.IService1).getListOfStrings(inValue)
            SecureID = retVal.SecureID
            strListOfItems = retVal.strListOfItems
            RC = retVal.RC
            RetMsg = retVal.RetMsg
            Return retVal.getListOfStringsResult
        End Function
        
        Public Function getListOfStringsAsync(ByVal request As SVCSearch.getListOfStringsRequest) As System.Threading.Tasks.Task(Of SVCSearch.getListOfStringsResponse) Implements SVCSearch.IService1.getListOfStringsAsync
            Return MyBase.Channel.getListOfStringsAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getListOfStrings1(ByVal request As SVCSearch.getListOfStrings1Request) As SVCSearch.getListOfStrings1Response Implements SVCSearch.IService1.getListOfStrings1
            Return MyBase.Channel.getListOfStrings1(request)
        End Function
        
        Public Function getListOfStrings1(ByRef SecureID As Integer, ByRef strListOfItems As String, ByVal MySql As String, ByRef RC As Boolean, ByRef RetMsg As String, ByVal UserId As String, ByVal SessionID As String) As Boolean
            Dim inValue As SVCSearch.getListOfStrings1Request = New SVCSearch.getListOfStrings1Request()
            inValue.SecureID = SecureID
            inValue.strListOfItems = strListOfItems
            inValue.MySql = MySql
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            inValue.UserId = UserId
            inValue.SessionID = SessionID
            Dim retVal As SVCSearch.getListOfStrings1Response = CType(Me,SVCSearch.IService1).getListOfStrings1(inValue)
            SecureID = retVal.SecureID
            strListOfItems = retVal.strListOfItems
            RC = retVal.RC
            RetMsg = retVal.RetMsg
            Return retVal.getListOfStrings1Result
        End Function
        
        Public Function getListOfStrings1Async(ByVal request As SVCSearch.getListOfStrings1Request) As System.Threading.Tasks.Task(Of SVCSearch.getListOfStrings1Response) Implements SVCSearch.IService1.getListOfStrings1Async
            Return MyBase.Channel.getListOfStrings1Async(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getListOfStrings2(ByVal request As SVCSearch.getListOfStrings2Request) As SVCSearch.getListOfStrings2Response Implements SVCSearch.IService1.getListOfStrings2
            Return MyBase.Channel.getListOfStrings2(request)
        End Function
        
        Public Function getListOfStrings2(ByRef SecureID As Integer, ByRef strListOfItems As String, ByVal MySql As String, ByRef RC As Boolean, ByRef RetMsg As String, ByVal UserId As String, ByVal SessionID As String) As Boolean
            Dim inValue As SVCSearch.getListOfStrings2Request = New SVCSearch.getListOfStrings2Request()
            inValue.SecureID = SecureID
            inValue.strListOfItems = strListOfItems
            inValue.MySql = MySql
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            inValue.UserId = UserId
            inValue.SessionID = SessionID
            Dim retVal As SVCSearch.getListOfStrings2Response = CType(Me,SVCSearch.IService1).getListOfStrings2(inValue)
            SecureID = retVal.SecureID
            strListOfItems = retVal.strListOfItems
            RC = retVal.RC
            RetMsg = retVal.RetMsg
            Return retVal.getListOfStrings2Result
        End Function
        
        Public Function getListOfStrings2Async(ByVal request As SVCSearch.getListOfStrings2Request) As System.Threading.Tasks.Task(Of SVCSearch.getListOfStrings2Response) Implements SVCSearch.IService1.getListOfStrings2Async
            Return MyBase.Channel.getListOfStrings2Async(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getListOfStrings3(ByVal request As SVCSearch.getListOfStrings3Request) As SVCSearch.getListOfStrings3Response Implements SVCSearch.IService1.getListOfStrings3
            Return MyBase.Channel.getListOfStrings3(request)
        End Function
        
        Public Function getListOfStrings3(ByRef SecureID As Integer, ByRef strListOfItems As String, ByVal MySql As String, ByRef RC As Boolean, ByRef RetMsg As String, ByVal UserId As String, ByVal SessionID As String) As Boolean
            Dim inValue As SVCSearch.getListOfStrings3Request = New SVCSearch.getListOfStrings3Request()
            inValue.SecureID = SecureID
            inValue.strListOfItems = strListOfItems
            inValue.MySql = MySql
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            inValue.UserId = UserId
            inValue.SessionID = SessionID
            Dim retVal As SVCSearch.getListOfStrings3Response = CType(Me,SVCSearch.IService1).getListOfStrings3(inValue)
            SecureID = retVal.SecureID
            strListOfItems = retVal.strListOfItems
            RC = retVal.RC
            RetMsg = retVal.RetMsg
            Return retVal.getListOfStrings3Result
        End Function
        
        Public Function getListOfStrings3Async(ByVal request As SVCSearch.getListOfStrings3Request) As System.Threading.Tasks.Task(Of SVCSearch.getListOfStrings3Response) Implements SVCSearch.IService1.getListOfStrings3Async
            Return MyBase.Channel.getListOfStrings3Async(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getListOfStrings4(ByVal request As SVCSearch.getListOfStrings4Request) As SVCSearch.getListOfStrings4Response Implements SVCSearch.IService1.getListOfStrings4
            Return MyBase.Channel.getListOfStrings4(request)
        End Function
        
        Public Function getListOfStrings4(ByRef SecureID As Integer, ByVal strListOfItems As String, ByVal MySql As String, ByRef RC As Boolean, ByRef RetMsg As String, ByVal UserId As String, ByVal SessionID As String) As Boolean
            Dim inValue As SVCSearch.getListOfStrings4Request = New SVCSearch.getListOfStrings4Request()
            inValue.SecureID = SecureID
            inValue.strListOfItems = strListOfItems
            inValue.MySql = MySql
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            inValue.UserId = UserId
            inValue.SessionID = SessionID
            Dim retVal As SVCSearch.getListOfStrings4Response = CType(Me,SVCSearch.IService1).getListOfStrings4(inValue)
            SecureID = retVal.SecureID
            RC = retVal.RC
            RetMsg = retVal.RetMsg
            Return retVal.getListOfStrings4Result
        End Function
        
        Public Function getListOfStrings4Async(ByVal request As SVCSearch.getListOfStrings4Request) As System.Threading.Tasks.Task(Of SVCSearch.getListOfStrings4Response) Implements SVCSearch.IService1.getListOfStrings4Async
            Return MyBase.Channel.getListOfStrings4Async(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_iCount(ByVal request As SVCSearch.iCountRequest) As SVCSearch.iCountResponse Implements SVCSearch.IService1.iCount
            Return MyBase.Channel.iCount(request)
        End Function
        
        Public Function iCount(ByRef SecureID As Integer, ByVal S As String) As Integer
            Dim inValue As SVCSearch.iCountRequest = New SVCSearch.iCountRequest()
            inValue.SecureID = SecureID
            inValue.S = S
            Dim retVal As SVCSearch.iCountResponse = CType(Me,SVCSearch.IService1).iCount(inValue)
            SecureID = retVal.SecureID
            Return retVal.iCountResult
        End Function
        
        Public Function iCountAsync(ByVal request As SVCSearch.iCountRequest) As System.Threading.Tasks.Task(Of SVCSearch.iCountResponse) Implements SVCSearch.IService1.iCountAsync
            Return MyBase.Channel.iCountAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_GetLogPath(ByVal request As SVCSearch.GetLogPathRequest) As SVCSearch.GetLogPathResponse Implements SVCSearch.IService1.GetLogPath
            Return MyBase.Channel.GetLogPath(request)
        End Function
        
        Public Sub GetLogPath(ByRef tPath As String)
            Dim inValue As SVCSearch.GetLogPathRequest = New SVCSearch.GetLogPathRequest()
            inValue.tPath = tPath
            Dim retVal As SVCSearch.GetLogPathResponse = CType(Me,SVCSearch.IService1).GetLogPath(inValue)
            tPath = retVal.tPath
        End Sub
        
        Public Function GetLogPathAsync(ByVal request As SVCSearch.GetLogPathRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetLogPathResponse) Implements SVCSearch.IService1.GetLogPathAsync
            Return MyBase.Channel.GetLogPathAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_ActiveSessionGetVal(ByVal request As SVCSearch.ActiveSessionGetValRequest) As SVCSearch.ActiveSessionGetValResponse Implements SVCSearch.IService1.ActiveSessionGetVal
            Return MyBase.Channel.ActiveSessionGetVal(request)
        End Function
        
        Public Function ActiveSessionGetVal(ByRef SecureID As Integer, ByRef SessionGuid As System.Guid, ByRef ParmName As String) As String
            Dim inValue As SVCSearch.ActiveSessionGetValRequest = New SVCSearch.ActiveSessionGetValRequest()
            inValue.SecureID = SecureID
            inValue.SessionGuid = SessionGuid
            inValue.ParmName = ParmName
            Dim retVal As SVCSearch.ActiveSessionGetValResponse = CType(Me,SVCSearch.IService1).ActiveSessionGetVal(inValue)
            SecureID = retVal.SecureID
            SessionGuid = retVal.SessionGuid
            ParmName = retVal.ParmName
            Return retVal.ActiveSessionGetValResult
        End Function
        
        Public Function ActiveSessionGetValAsync(ByVal request As SVCSearch.ActiveSessionGetValRequest) As System.Threading.Tasks.Task(Of SVCSearch.ActiveSessionGetValResponse) Implements SVCSearch.IService1.ActiveSessionGetValAsync
            Return MyBase.Channel.ActiveSessionGetValAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_ActiveSession(ByVal request As SVCSearch.ActiveSessionRequest) As SVCSearch.ActiveSessionResponse Implements SVCSearch.IService1.ActiveSession
            Return MyBase.Channel.ActiveSession(request)
        End Function
        
        Public Function ActiveSession(ByRef SecureID As Integer, ByVal SessionGuid As System.Guid, ByVal ParmName As String, ByVal ParmValue As String) As Boolean
            Dim inValue As SVCSearch.ActiveSessionRequest = New SVCSearch.ActiveSessionRequest()
            inValue.SecureID = SecureID
            inValue.SessionGuid = SessionGuid
            inValue.ParmName = ParmName
            inValue.ParmValue = ParmValue
            Dim retVal As SVCSearch.ActiveSessionResponse = CType(Me,SVCSearch.IService1).ActiveSession(inValue)
            SecureID = retVal.SecureID
            Return retVal.ActiveSessionResult
        End Function
        
        Public Function ActiveSessionAsync(ByVal request As SVCSearch.ActiveSessionRequest) As System.Threading.Tasks.Task(Of SVCSearch.ActiveSessionResponse) Implements SVCSearch.IService1.ActiveSessionAsync
            Return MyBase.Channel.ActiveSessionAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_setSecureLoginParms(ByVal request As SVCSearch.setSecureLoginParmsRequest) As SVCSearch.setSecureLoginParmsResponse Implements SVCSearch.IService1.setSecureLoginParms
            Return MyBase.Channel.setSecureLoginParms(request)
        End Function
        
        Public Sub setSecureLoginParms(ByRef SecureID As Integer, ByVal sCompanyID As String, ByVal sRepoID As String, ByRef RC As Boolean)
            Dim inValue As SVCSearch.setSecureLoginParmsRequest = New SVCSearch.setSecureLoginParmsRequest()
            inValue.SecureID = SecureID
            inValue.sCompanyID = sCompanyID
            inValue.sRepoID = sRepoID
            inValue.RC = RC
            Dim retVal As SVCSearch.setSecureLoginParmsResponse = CType(Me,SVCSearch.IService1).setSecureLoginParms(inValue)
            SecureID = retVal.SecureID
            RC = retVal.RC
        End Sub
        
        Public Function setSecureLoginParmsAsync(ByVal request As SVCSearch.setSecureLoginParmsRequest) As System.Threading.Tasks.Task(Of SVCSearch.setSecureLoginParmsResponse) Implements SVCSearch.IService1.setSecureLoginParmsAsync
            Return MyBase.Channel.setSecureLoginParmsAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_PopulateSecureLoginCB_V2(ByVal request As SVCSearch.PopulateSecureLoginCB_V2Request) As SVCSearch.PopulateSecureLoginCB_V2Response Implements SVCSearch.IService1.PopulateSecureLoginCB_V2
            Return MyBase.Channel.PopulateSecureLoginCB_V2(request)
        End Function
        
        Public Sub PopulateSecureLoginCB_V2(ByRef SecureID As Integer, ByRef AllRepos As String, ByVal CompanyID As String, ByRef RC As Boolean, ByRef RetMsg As String)
            Dim inValue As SVCSearch.PopulateSecureLoginCB_V2Request = New SVCSearch.PopulateSecureLoginCB_V2Request()
            inValue.SecureID = SecureID
            inValue.AllRepos = AllRepos
            inValue.CompanyID = CompanyID
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            Dim retVal As SVCSearch.PopulateSecureLoginCB_V2Response = CType(Me,SVCSearch.IService1).PopulateSecureLoginCB_V2(inValue)
            SecureID = retVal.SecureID
            AllRepos = retVal.AllRepos
            RC = retVal.RC
            RetMsg = retVal.RetMsg
        End Sub
        
        Public Function PopulateSecureLoginCB_V2Async(ByVal request As SVCSearch.PopulateSecureLoginCB_V2Request) As System.Threading.Tasks.Task(Of SVCSearch.PopulateSecureLoginCB_V2Response) Implements SVCSearch.IService1.PopulateSecureLoginCB_V2Async
            Return MyBase.Channel.PopulateSecureLoginCB_V2Async(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_PopulateSecureLoginCB(ByVal request As SVCSearch.PopulateSecureLoginCBRequest) As SVCSearch.PopulateSecureLoginCBResponse Implements SVCSearch.IService1.PopulateSecureLoginCB
            Return MyBase.Channel.PopulateSecureLoginCB(request)
        End Function
        
        Public Sub PopulateSecureLoginCB(ByRef SecureID As Integer, ByRef CB As String, ByVal CompanyID As String, ByRef RC As Boolean, ByRef RetMsg As String)
            Dim inValue As SVCSearch.PopulateSecureLoginCBRequest = New SVCSearch.PopulateSecureLoginCBRequest()
            inValue.SecureID = SecureID
            inValue.CB = CB
            inValue.CompanyID = CompanyID
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            Dim retVal As SVCSearch.PopulateSecureLoginCBResponse = CType(Me,SVCSearch.IService1).PopulateSecureLoginCB(inValue)
            SecureID = retVal.SecureID
            CB = retVal.CB
            RC = retVal.RC
            RetMsg = retVal.RetMsg
        End Sub
        
        Public Function PopulateSecureLoginCBAsync(ByVal request As SVCSearch.PopulateSecureLoginCBRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateSecureLoginCBResponse) Implements SVCSearch.IService1.PopulateSecureLoginCBAsync
            Return MyBase.Channel.PopulateSecureLoginCBAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getLoginPW(ByVal request As SVCSearch.getLoginPWRequest) As SVCSearch.getLoginPWResponse Implements SVCSearch.IService1.getLoginPW
            Return MyBase.Channel.getLoginPW(request)
        End Function
        
        Public Function getLoginPW(ByRef SecureID As Integer) As Object
            Dim inValue As SVCSearch.getLoginPWRequest = New SVCSearch.getLoginPWRequest()
            inValue.SecureID = SecureID
            Dim retVal As SVCSearch.getLoginPWResponse = CType(Me,SVCSearch.IService1).getLoginPW(inValue)
            SecureID = retVal.SecureID
            Return retVal.getLoginPWResult
        End Function
        
        Public Function getLoginPWAsync(ByVal request As SVCSearch.getLoginPWRequest) As System.Threading.Tasks.Task(Of SVCSearch.getLoginPWResponse) Implements SVCSearch.IService1.getLoginPWAsync
            Return MyBase.Channel.getLoginPWAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_setLoginPW(ByVal request As SVCSearch.setLoginPWRequest) As SVCSearch.setLoginPWResponse Implements SVCSearch.IService1.setLoginPW
            Return MyBase.Channel.setLoginPW(request)
        End Function
        
        Public Sub setLoginPW(ByRef SecureID As Integer, ByVal RepoID As String)
            Dim inValue As SVCSearch.setLoginPWRequest = New SVCSearch.setLoginPWRequest()
            inValue.SecureID = SecureID
            inValue.RepoID = RepoID
            Dim retVal As SVCSearch.setLoginPWResponse = CType(Me,SVCSearch.IService1).setLoginPW(inValue)
            SecureID = retVal.SecureID
        End Sub
        
        Public Function setLoginPWAsync(ByVal request As SVCSearch.setLoginPWRequest) As System.Threading.Tasks.Task(Of SVCSearch.setLoginPWResponse) Implements SVCSearch.IService1.setLoginPWAsync
            Return MyBase.Channel.setLoginPWAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getSessionEncCs(ByVal request As SVCSearch.getSessionEncCsRequest) As SVCSearch.getSessionEncCsResponse Implements SVCSearch.IService1.getSessionEncCs
            Return MyBase.Channel.getSessionEncCs(request)
        End Function
        
        Public Function getSessionEncCs(ByRef SecureID As Integer) As Object
            Dim inValue As SVCSearch.getSessionEncCsRequest = New SVCSearch.getSessionEncCsRequest()
            inValue.SecureID = SecureID
            Dim retVal As SVCSearch.getSessionEncCsResponse = CType(Me,SVCSearch.IService1).getSessionEncCs(inValue)
            SecureID = retVal.SecureID
            Return retVal.getSessionEncCsResult
        End Function
        
        Public Function getSessionEncCsAsync(ByVal request As SVCSearch.getSessionEncCsRequest) As System.Threading.Tasks.Task(Of SVCSearch.getSessionEncCsResponse) Implements SVCSearch.IService1.getSessionEncCsAsync
            Return MyBase.Channel.getSessionEncCsAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_setSessionEncCs(ByVal request As SVCSearch.setSessionEncCsRequest) As SVCSearch.setSessionEncCsResponse Implements SVCSearch.IService1.setSessionEncCs
            Return MyBase.Channel.setSessionEncCs(request)
        End Function
        
        Public Sub setSessionEncCs(ByRef SecureID As Integer, ByVal MySessionID As String)
            Dim inValue As SVCSearch.setSessionEncCsRequest = New SVCSearch.setSessionEncCsRequest()
            inValue.SecureID = SecureID
            inValue.MySessionID = MySessionID
            Dim retVal As SVCSearch.setSessionEncCsResponse = CType(Me,SVCSearch.IService1).setSessionEncCs(inValue)
            SecureID = retVal.SecureID
        End Sub
        
        Public Function setSessionEncCsAsync(ByVal request As SVCSearch.setSessionEncCsRequest) As System.Threading.Tasks.Task(Of SVCSearch.setSessionEncCsResponse) Implements SVCSearch.IService1.setSessionEncCsAsync
            Return MyBase.Channel.setSessionEncCsAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_setSessionRepoID(ByVal request As SVCSearch.setSessionRepoIDRequest) As SVCSearch.setSessionRepoIDResponse Implements SVCSearch.IService1.setSessionRepoID
            Return MyBase.Channel.setSessionRepoID(request)
        End Function
        
        Public Sub setSessionRepoID(ByRef SecureID As Integer, ByVal RepoID As String)
            Dim inValue As SVCSearch.setSessionRepoIDRequest = New SVCSearch.setSessionRepoIDRequest()
            inValue.SecureID = SecureID
            inValue.RepoID = RepoID
            Dim retVal As SVCSearch.setSessionRepoIDResponse = CType(Me,SVCSearch.IService1).setSessionRepoID(inValue)
            SecureID = retVal.SecureID
        End Sub
        
        Public Function setSessionRepoIDAsync(ByVal request As SVCSearch.setSessionRepoIDRequest) As System.Threading.Tasks.Task(Of SVCSearch.setSessionRepoIDResponse) Implements SVCSearch.IService1.setSessionRepoIDAsync
            Return MyBase.Channel.setSessionRepoIDAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getSessionRepoID(ByVal request As SVCSearch.getSessionRepoIDRequest) As SVCSearch.getSessionRepoIDResponse Implements SVCSearch.IService1.getSessionRepoID
            Return MyBase.Channel.getSessionRepoID(request)
        End Function
        
        Public Function getSessionRepoID(ByRef SecureID As Integer) As Object
            Dim inValue As SVCSearch.getSessionRepoIDRequest = New SVCSearch.getSessionRepoIDRequest()
            inValue.SecureID = SecureID
            Dim retVal As SVCSearch.getSessionRepoIDResponse = CType(Me,SVCSearch.IService1).getSessionRepoID(inValue)
            SecureID = retVal.SecureID
            Return retVal.getSessionRepoIDResult
        End Function
        
        Public Function getSessionRepoIDAsync(ByVal request As SVCSearch.getSessionRepoIDRequest) As System.Threading.Tasks.Task(Of SVCSearch.getSessionRepoIDResponse) Implements SVCSearch.IService1.getSessionRepoIDAsync
            Return MyBase.Channel.getSessionRepoIDAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_setSessionCompanyID(ByVal request As SVCSearch.setSessionCompanyIDRequest) As SVCSearch.setSessionCompanyIDResponse Implements SVCSearch.IService1.setSessionCompanyID
            Return MyBase.Channel.setSessionCompanyID(request)
        End Function
        
        Public Sub setSessionCompanyID(ByRef SecureID As Integer, ByVal CompanyID As String, ByRef RC As Boolean)
            Dim inValue As SVCSearch.setSessionCompanyIDRequest = New SVCSearch.setSessionCompanyIDRequest()
            inValue.SecureID = SecureID
            inValue.CompanyID = CompanyID
            inValue.RC = RC
            Dim retVal As SVCSearch.setSessionCompanyIDResponse = CType(Me,SVCSearch.IService1).setSessionCompanyID(inValue)
            SecureID = retVal.SecureID
            RC = retVal.RC
        End Sub
        
        Public Function setSessionCompanyIDAsync(ByVal request As SVCSearch.setSessionCompanyIDRequest) As System.Threading.Tasks.Task(Of SVCSearch.setSessionCompanyIDResponse) Implements SVCSearch.IService1.setSessionCompanyIDAsync
            Return MyBase.Channel.setSessionCompanyIDAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getSessionCompanyID(ByVal request As SVCSearch.getSessionCompanyIDRequest) As SVCSearch.getSessionCompanyIDResponse Implements SVCSearch.IService1.getSessionCompanyID
            Return MyBase.Channel.getSessionCompanyID(request)
        End Function
        
        Public Function getSessionCompanyID(ByRef SecureID As Integer) As Object
            Dim inValue As SVCSearch.getSessionCompanyIDRequest = New SVCSearch.getSessionCompanyIDRequest()
            inValue.SecureID = SecureID
            Dim retVal As SVCSearch.getSessionCompanyIDResponse = CType(Me,SVCSearch.IService1).getSessionCompanyID(inValue)
            SecureID = retVal.SecureID
            Return retVal.getSessionCompanyIDResult
        End Function
        
        Public Function getSessionCompanyIDAsync(ByVal request As SVCSearch.getSessionCompanyIDRequest) As System.Threading.Tasks.Task(Of SVCSearch.getSessionCompanyIDResponse) Implements SVCSearch.IService1.getSessionCompanyIDAsync
            Return MyBase.Channel.getSessionCompanyIDAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_setLoginGuid(ByVal request As SVCSearch.setLoginGuidRequest) As SVCSearch.setLoginGuidResponse Implements SVCSearch.IService1.setLoginGuid
            Return MyBase.Channel.setLoginGuid(request)
        End Function
        
        Public Sub setLoginGuid(ByRef SecureID As Integer, ByVal MyLoginGuid As String)
            Dim inValue As SVCSearch.setLoginGuidRequest = New SVCSearch.setLoginGuidRequest()
            inValue.SecureID = SecureID
            inValue.MyLoginGuid = MyLoginGuid
            Dim retVal As SVCSearch.setLoginGuidResponse = CType(Me,SVCSearch.IService1).setLoginGuid(inValue)
            SecureID = retVal.SecureID
        End Sub
        
        Public Function setLoginGuidAsync(ByVal request As SVCSearch.setLoginGuidRequest) As System.Threading.Tasks.Task(Of SVCSearch.setLoginGuidResponse) Implements SVCSearch.IService1.setLoginGuidAsync
            Return MyBase.Channel.setLoginGuidAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getLoginGuid(ByVal request As SVCSearch.getLoginGuidRequest) As SVCSearch.getLoginGuidResponse Implements SVCSearch.IService1.getLoginGuid
            Return MyBase.Channel.getLoginGuid(request)
        End Function
        
        Public Function getLoginGuid(ByRef SecureID As Integer) As Object
            Dim inValue As SVCSearch.getLoginGuidRequest = New SVCSearch.getLoginGuidRequest()
            inValue.SecureID = SecureID
            Dim retVal As SVCSearch.getLoginGuidResponse = CType(Me,SVCSearch.IService1).getLoginGuid(inValue)
            SecureID = retVal.SecureID
            Return retVal.getLoginGuidResult
        End Function
        
        Public Function getLoginGuidAsync(ByVal request As SVCSearch.getLoginGuidRequest) As System.Threading.Tasks.Task(Of SVCSearch.getLoginGuidResponse) Implements SVCSearch.IService1.getLoginGuidAsync
            Return MyBase.Channel.getLoginGuidAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getHttpSessionID(ByVal request As SVCSearch.getHttpSessionIDRequest) As SVCSearch.getHttpSessionIDResponse Implements SVCSearch.IService1.getHttpSessionID
            Return MyBase.Channel.getHttpSessionID(request)
        End Function
        
        Public Function getHttpSessionID(ByRef SecureID As Integer) As Object
            Dim inValue As SVCSearch.getHttpSessionIDRequest = New SVCSearch.getHttpSessionIDRequest()
            inValue.SecureID = SecureID
            Dim retVal As SVCSearch.getHttpSessionIDResponse = CType(Me,SVCSearch.IService1).getHttpSessionID(inValue)
            SecureID = retVal.SecureID
            Return retVal.getHttpSessionIDResult
        End Function
        
        Public Function getHttpSessionIDAsync(ByVal request As SVCSearch.getHttpSessionIDRequest) As System.Threading.Tasks.Task(Of SVCSearch.getHttpSessionIDResponse) Implements SVCSearch.IService1.getHttpSessionIDAsync
            Return MyBase.Channel.getHttpSessionIDAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_setSessionID(ByVal request As SVCSearch.setSessionIDRequest) As SVCSearch.setSessionIDResponse Implements SVCSearch.IService1.setSessionID
            Return MyBase.Channel.setSessionID(request)
        End Function
        
        Public Sub setSessionID(ByRef SecureID As Integer, ByVal MySessionID As String)
            Dim inValue As SVCSearch.setSessionIDRequest = New SVCSearch.setSessionIDRequest()
            inValue.SecureID = SecureID
            inValue.MySessionID = MySessionID
            Dim retVal As SVCSearch.setSessionIDResponse = CType(Me,SVCSearch.IService1).setSessionID(inValue)
            SecureID = retVal.SecureID
        End Sub
        
        Public Function setSessionIDAsync(ByVal request As SVCSearch.setSessionIDRequest) As System.Threading.Tasks.Task(Of SVCSearch.setSessionIDResponse) Implements SVCSearch.IService1.setSessionIDAsync
            Return MyBase.Channel.setSessionIDAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_ExpandInflectionTerms(ByVal request As SVCSearch.ExpandInflectionTermsRequest) As SVCSearch.ExpandInflectionTermsResponse Implements SVCSearch.IService1.ExpandInflectionTerms
            Return MyBase.Channel.ExpandInflectionTerms(request)
        End Function
        
        Public Function ExpandInflectionTerms(ByRef SecureID As Integer, ByVal S As String) As String
            Dim inValue As SVCSearch.ExpandInflectionTermsRequest = New SVCSearch.ExpandInflectionTermsRequest()
            inValue.SecureID = SecureID
            inValue.S = S
            Dim retVal As SVCSearch.ExpandInflectionTermsResponse = CType(Me,SVCSearch.IService1).ExpandInflectionTerms(inValue)
            SecureID = retVal.SecureID
            Return retVal.ExpandInflectionTermsResult
        End Function
        
        Public Function ExpandInflectionTermsAsync(ByVal request As SVCSearch.ExpandInflectionTermsRequest) As System.Threading.Tasks.Task(Of SVCSearch.ExpandInflectionTermsResponse) Implements SVCSearch.IService1.ExpandInflectionTermsAsync
            Return MyBase.Channel.ExpandInflectionTermsAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getServerDatabaseName(ByVal request As SVCSearch.getServerDatabaseNameRequest) As SVCSearch.getServerDatabaseNameResponse Implements SVCSearch.IService1.getServerDatabaseName
            Return MyBase.Channel.getServerDatabaseName(request)
        End Function
        
        Public Function getServerDatabaseName(ByRef SecureID As Integer) As String
            Dim inValue As SVCSearch.getServerDatabaseNameRequest = New SVCSearch.getServerDatabaseNameRequest()
            inValue.SecureID = SecureID
            Dim retVal As SVCSearch.getServerDatabaseNameResponse = CType(Me,SVCSearch.IService1).getServerDatabaseName(inValue)
            SecureID = retVal.SecureID
            Return retVal.getServerDatabaseNameResult
        End Function
        
        Public Function getServerDatabaseNameAsync(ByVal request As SVCSearch.getServerDatabaseNameRequest) As System.Threading.Tasks.Task(Of SVCSearch.getServerDatabaseNameResponse) Implements SVCSearch.IService1.getServerDatabaseNameAsync
            Return MyBase.Channel.getServerDatabaseNameAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_CleanLog(ByVal request As SVCSearch.CleanLogRequest) As SVCSearch.CleanLogResponse Implements SVCSearch.IService1.CleanLog
            Return MyBase.Channel.CleanLog(request)
        End Function
        
        Public Sub CleanLog(ByRef SecureID As Integer)
            Dim inValue As SVCSearch.CleanLogRequest = New SVCSearch.CleanLogRequest()
            inValue.SecureID = SecureID
            Dim retVal As SVCSearch.CleanLogResponse = CType(Me,SVCSearch.IService1).CleanLog(inValue)
            SecureID = retVal.SecureID
        End Sub
        
        Public Function CleanLogAsync(ByVal request As SVCSearch.CleanLogRequest) As System.Threading.Tasks.Task(Of SVCSearch.CleanLogResponse) Implements SVCSearch.IService1.CleanLogAsync
            Return MyBase.Channel.CleanLogAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_PopulateComboBox(ByVal request As SVCSearch.PopulateComboBoxRequest) As SVCSearch.PopulateComboBoxResponse Implements SVCSearch.IService1.PopulateComboBox
            Return MyBase.Channel.PopulateComboBox(request)
        End Function
        
        Public Sub PopulateComboBox(ByRef SecureID As Integer, ByRef CB() As String, ByVal TblColName As String, ByVal S As String)
            Dim inValue As SVCSearch.PopulateComboBoxRequest = New SVCSearch.PopulateComboBoxRequest()
            inValue.SecureID = SecureID
            inValue.CB = CB
            inValue.TblColName = TblColName
            inValue.S = S
            Dim retVal As SVCSearch.PopulateComboBoxResponse = CType(Me,SVCSearch.IService1).PopulateComboBox(inValue)
            SecureID = retVal.SecureID
            CB = retVal.CB
        End Sub
        
        Public Function PopulateComboBoxAsync(ByVal request As SVCSearch.PopulateComboBoxRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateComboBoxResponse) Implements SVCSearch.IService1.PopulateComboBoxAsync
            Return MyBase.Channel.PopulateComboBoxAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_GetEmailAttachments(ByVal request As SVCSearch.GetEmailAttachmentsRequest) As SVCSearch.GetEmailAttachmentsResponse Implements SVCSearch.IService1.GetEmailAttachments
            Return MyBase.Channel.GetEmailAttachments(request)
        End Function
        
        Public Function GetEmailAttachments(ByRef SecureID As Integer, ByVal CurrEmailGuid As String) As String
            Dim inValue As SVCSearch.GetEmailAttachmentsRequest = New SVCSearch.GetEmailAttachmentsRequest()
            inValue.SecureID = SecureID
            inValue.CurrEmailGuid = CurrEmailGuid
            Dim retVal As SVCSearch.GetEmailAttachmentsResponse = CType(Me,SVCSearch.IService1).GetEmailAttachments(inValue)
            SecureID = retVal.SecureID
            Return retVal.GetEmailAttachmentsResult
        End Function
        
        Public Function GetEmailAttachmentsAsync(ByVal request As SVCSearch.GetEmailAttachmentsRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetEmailAttachmentsResponse) Implements SVCSearch.IService1.GetEmailAttachmentsAsync
            Return MyBase.Channel.GetEmailAttachmentsAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_DbWriteToFile(ByVal request As SVCSearch.DbWriteToFileRequest) As SVCSearch.DbWriteToFileResponse Implements SVCSearch.IService1.DbWriteToFile
            Return MyBase.Channel.DbWriteToFile(request)
        End Function
        
        Public Function DbWriteToFile(ByRef SecureID As Integer, ByVal UID As String, ByVal SourceGuid As String, ByRef FileName As String) As Boolean
            Dim inValue As SVCSearch.DbWriteToFileRequest = New SVCSearch.DbWriteToFileRequest()
            inValue.SecureID = SecureID
            inValue.UID = UID
            inValue.SourceGuid = SourceGuid
            inValue.FileName = FileName
            Dim retVal As SVCSearch.DbWriteToFileResponse = CType(Me,SVCSearch.IService1).DbWriteToFile(inValue)
            SecureID = retVal.SecureID
            FileName = retVal.FileName
            Return retVal.DbWriteToFileResult
        End Function
        
        Public Function DbWriteToFileAsync(ByVal request As SVCSearch.DbWriteToFileRequest) As System.Threading.Tasks.Task(Of SVCSearch.DbWriteToFileResponse) Implements SVCSearch.IService1.DbWriteToFileAsync
            Return MyBase.Channel.DbWriteToFileAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_SetSessionVariable(ByVal request As SVCSearch.SetSessionVariableRequest) As SVCSearch.SetSessionVariableResponse Implements SVCSearch.IService1.SetSessionVariable
            Return MyBase.Channel.SetSessionVariable(request)
        End Function
        
        Public Sub SetSessionVariable(ByRef SecureID As Integer, ByVal key As String, ByVal KeyValue As String)
            Dim inValue As SVCSearch.SetSessionVariableRequest = New SVCSearch.SetSessionVariableRequest()
            inValue.SecureID = SecureID
            inValue.key = key
            inValue.KeyValue = KeyValue
            Dim retVal As SVCSearch.SetSessionVariableResponse = CType(Me,SVCSearch.IService1).SetSessionVariable(inValue)
            SecureID = retVal.SecureID
        End Sub
        
        Public Function SetSessionVariableAsync(ByVal request As SVCSearch.SetSessionVariableRequest) As System.Threading.Tasks.Task(Of SVCSearch.SetSessionVariableResponse) Implements SVCSearch.IService1.SetSessionVariableAsync
            Return MyBase.Channel.SetSessionVariableAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_GetSessionVariable(ByVal request As SVCSearch.GetSessionVariableRequest) As SVCSearch.GetSessionVariableResponse Implements SVCSearch.IService1.GetSessionVariable
            Return MyBase.Channel.GetSessionVariable(request)
        End Function
        
        Public Function GetSessionVariable(ByRef SecureID As Integer, ByVal key As String) As Object
            Dim inValue As SVCSearch.GetSessionVariableRequest = New SVCSearch.GetSessionVariableRequest()
            inValue.SecureID = SecureID
            inValue.key = key
            Dim retVal As SVCSearch.GetSessionVariableResponse = CType(Me,SVCSearch.IService1).GetSessionVariable(inValue)
            SecureID = retVal.SecureID
            Return retVal.GetSessionVariableResult
        End Function
        
        Public Function GetSessionVariableAsync(ByVal request As SVCSearch.GetSessionVariableRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetSessionVariableResponse) Implements SVCSearch.IService1.GetSessionVariableAsync
            Return MyBase.Channel.GetSessionVariableAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_UpdateSourceImageCompressed(ByVal request As SVCSearch.UpdateSourceImageCompressedRequest) As SVCSearch.UpdateSourceImageCompressedResponse Implements SVCSearch.IService1.UpdateSourceImageCompressed
            Return MyBase.Channel.UpdateSourceImageCompressed(request)
        End Function
        
        Public Function UpdateSourceImageCompressed(ByRef SecureID As Integer, ByVal UploadFQN As String, ByVal SourceGuid As String, ByVal LastAccessDate As String, ByVal CreateDate As String, ByVal LastWriteTime As String, ByVal VersionNbr As Integer, ByVal CompressedDataBuffer() As Byte) As Boolean
            Dim inValue As SVCSearch.UpdateSourceImageCompressedRequest = New SVCSearch.UpdateSourceImageCompressedRequest()
            inValue.SecureID = SecureID
            inValue.UploadFQN = UploadFQN
            inValue.SourceGuid = SourceGuid
            inValue.LastAccessDate = LastAccessDate
            inValue.CreateDate = CreateDate
            inValue.LastWriteTime = LastWriteTime
            inValue.VersionNbr = VersionNbr
            inValue.CompressedDataBuffer = CompressedDataBuffer
            Dim retVal As SVCSearch.UpdateSourceImageCompressedResponse = CType(Me,SVCSearch.IService1).UpdateSourceImageCompressed(inValue)
            SecureID = retVal.SecureID
            Return retVal.UpdateSourceImageCompressedResult
        End Function
        
        Public Function UpdateSourceImageCompressedAsync(ByVal request As SVCSearch.UpdateSourceImageCompressedRequest) As System.Threading.Tasks.Task(Of SVCSearch.UpdateSourceImageCompressedResponse) Implements SVCSearch.IService1.UpdateSourceImageCompressedAsync
            Return MyBase.Channel.UpdateSourceImageCompressedAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_writeEmailFromDbToFile(ByVal request As SVCSearch.writeEmailFromDbToFileRequest) As SVCSearch.writeEmailFromDbToFileResponse Implements SVCSearch.IService1.writeEmailFromDbToFile
            Return MyBase.Channel.writeEmailFromDbToFile(request)
        End Function
        
        Public Sub writeEmailFromDbToFile(ByRef SecureID As Integer, ByVal EmailGuid As String, ByRef SourceTypeCode As String, ByRef CompressedDataBuffer() As Byte, ByRef OriginalSize As Integer, ByRef CompressedSize As Integer, ByRef RC As Boolean)
            Dim inValue As SVCSearch.writeEmailFromDbToFileRequest = New SVCSearch.writeEmailFromDbToFileRequest()
            inValue.SecureID = SecureID
            inValue.EmailGuid = EmailGuid
            inValue.SourceTypeCode = SourceTypeCode
            inValue.CompressedDataBuffer = CompressedDataBuffer
            inValue.OriginalSize = OriginalSize
            inValue.CompressedSize = CompressedSize
            inValue.RC = RC
            Dim retVal As SVCSearch.writeEmailFromDbToFileResponse = CType(Me,SVCSearch.IService1).writeEmailFromDbToFile(inValue)
            SecureID = retVal.SecureID
            SourceTypeCode = retVal.SourceTypeCode
            CompressedDataBuffer = retVal.CompressedDataBuffer
            OriginalSize = retVal.OriginalSize
            CompressedSize = retVal.CompressedSize
            RC = retVal.RC
        End Sub
        
        Public Function writeEmailFromDbToFileAsync(ByVal request As SVCSearch.writeEmailFromDbToFileRequest) As System.Threading.Tasks.Task(Of SVCSearch.writeEmailFromDbToFileResponse) Implements SVCSearch.IService1.writeEmailFromDbToFileAsync
            Return MyBase.Channel.writeEmailFromDbToFileAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_writeAttachmentFromDbWriteToFile(ByVal request As SVCSearch.writeAttachmentFromDbWriteToFileRequest) As SVCSearch.writeAttachmentFromDbWriteToFileResponse Implements SVCSearch.IService1.writeAttachmentFromDbWriteToFile
            Return MyBase.Channel.writeAttachmentFromDbWriteToFile(request)
        End Function
        
        Public Sub writeAttachmentFromDbWriteToFile(ByRef SecureID As Integer, ByVal RowID As String, ByRef FQN As String, ByRef CompressedDataBuffer() As Byte, ByRef OriginalSize As Integer, ByRef CompressedSize As Integer, ByRef RC As Boolean)
            Dim inValue As SVCSearch.writeAttachmentFromDbWriteToFileRequest = New SVCSearch.writeAttachmentFromDbWriteToFileRequest()
            inValue.SecureID = SecureID
            inValue.RowID = RowID
            inValue.FQN = FQN
            inValue.CompressedDataBuffer = CompressedDataBuffer
            inValue.OriginalSize = OriginalSize
            inValue.CompressedSize = CompressedSize
            inValue.RC = RC
            Dim retVal As SVCSearch.writeAttachmentFromDbWriteToFileResponse = CType(Me,SVCSearch.IService1).writeAttachmentFromDbWriteToFile(inValue)
            SecureID = retVal.SecureID
            FQN = retVal.FQN
            CompressedDataBuffer = retVal.CompressedDataBuffer
            OriginalSize = retVal.OriginalSize
            CompressedSize = retVal.CompressedSize
            RC = retVal.RC
        End Sub
        
        Public Function writeAttachmentFromDbWriteToFileAsync(ByVal request As SVCSearch.writeAttachmentFromDbWriteToFileRequest) As System.Threading.Tasks.Task(Of SVCSearch.writeAttachmentFromDbWriteToFileResponse) Implements SVCSearch.IService1.writeAttachmentFromDbWriteToFileAsync
            Return MyBase.Channel.writeAttachmentFromDbWriteToFileAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_writeImageSourceDataFromDbWriteToFile(ByVal request As SVCSearch.writeImageSourceDataFromDbWriteToFileRequest) As SVCSearch.writeImageSourceDataFromDbWriteToFileResponse Implements SVCSearch.IService1.writeImageSourceDataFromDbWriteToFile
            Return MyBase.Channel.writeImageSourceDataFromDbWriteToFile(request)
        End Function
        
        Public Sub writeImageSourceDataFromDbWriteToFile(ByRef SecureID As Integer, ByVal SourceGuid As String, ByRef FQN As String, ByRef CompressedDataBuffer() As Byte, ByRef OriginalSize As Integer, ByRef CompressedSize As Integer, ByRef RC As Boolean)
            Dim inValue As SVCSearch.writeImageSourceDataFromDbWriteToFileRequest = New SVCSearch.writeImageSourceDataFromDbWriteToFileRequest()
            inValue.SecureID = SecureID
            inValue.SourceGuid = SourceGuid
            inValue.FQN = FQN
            inValue.CompressedDataBuffer = CompressedDataBuffer
            inValue.OriginalSize = OriginalSize
            inValue.CompressedSize = CompressedSize
            inValue.RC = RC
            Dim retVal As SVCSearch.writeImageSourceDataFromDbWriteToFileResponse = CType(Me,SVCSearch.IService1).writeImageSourceDataFromDbWriteToFile(inValue)
            SecureID = retVal.SecureID
            FQN = retVal.FQN
            CompressedDataBuffer = retVal.CompressedDataBuffer
            OriginalSize = retVal.OriginalSize
            CompressedSize = retVal.CompressedSize
            RC = retVal.RC
        End Sub
        
        Public Function writeImageSourceDataFromDbWriteToFileAsync(ByVal request As SVCSearch.writeImageSourceDataFromDbWriteToFileRequest) As System.Threading.Tasks.Task(Of SVCSearch.writeImageSourceDataFromDbWriteToFileResponse) Implements SVCSearch.IService1.writeImageSourceDataFromDbWriteToFileAsync
            Return MyBase.Channel.writeImageSourceDataFromDbWriteToFileAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_AddLibraryItems(ByVal request As SVCSearch.AddLibraryItemsRequest) As SVCSearch.AddLibraryItemsResponse Implements SVCSearch.IService1.AddLibraryItems
            Return MyBase.Channel.AddLibraryItems(request)
        End Function
        
        Public Sub AddLibraryItems(ByRef SecureID As Integer, ByVal SourceGuid As String, ByVal ItemTitle As String, ByVal ItemType As String, ByVal LibraryItemGuid As String, ByVal DataSourceOwnerUserID As String, ByVal LibraryOwnerUserID As String, ByVal LibraryName As String, ByVal AddedByUserGuidId As String, ByRef RC As Boolean, ByRef rMsg As String)
            Dim inValue As SVCSearch.AddLibraryItemsRequest = New SVCSearch.AddLibraryItemsRequest()
            inValue.SecureID = SecureID
            inValue.SourceGuid = SourceGuid
            inValue.ItemTitle = ItemTitle
            inValue.ItemType = ItemType
            inValue.LibraryItemGuid = LibraryItemGuid
            inValue.DataSourceOwnerUserID = DataSourceOwnerUserID
            inValue.LibraryOwnerUserID = LibraryOwnerUserID
            inValue.LibraryName = LibraryName
            inValue.AddedByUserGuidId = AddedByUserGuidId
            inValue.RC = RC
            inValue.rMsg = rMsg
            Dim retVal As SVCSearch.AddLibraryItemsResponse = CType(Me,SVCSearch.IService1).AddLibraryItems(inValue)
            SecureID = retVal.SecureID
            RC = retVal.RC
            rMsg = retVal.rMsg
        End Sub
        
        Public Function AddLibraryItemsAsync(ByVal request As SVCSearch.AddLibraryItemsRequest) As System.Threading.Tasks.Task(Of SVCSearch.AddLibraryItemsResponse) Implements SVCSearch.IService1.AddLibraryItemsAsync
            Return MyBase.Channel.AddLibraryItemsAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_PopulateGroupUserLibCombo(ByVal request As SVCSearch.PopulateGroupUserLibComboRequest) As SVCSearch.PopulateGroupUserLibComboResponse Implements SVCSearch.IService1.PopulateGroupUserLibCombo
            Return MyBase.Channel.PopulateGroupUserLibCombo(request)
        End Function
        
        Public Sub PopulateGroupUserLibCombo(ByRef SecureID As Integer, ByVal UID As String, ByRef cb As String)
            Dim inValue As SVCSearch.PopulateGroupUserLibComboRequest = New SVCSearch.PopulateGroupUserLibComboRequest()
            inValue.SecureID = SecureID
            inValue.UID = UID
            inValue.cb = cb
            Dim retVal As SVCSearch.PopulateGroupUserLibComboResponse = CType(Me,SVCSearch.IService1).PopulateGroupUserLibCombo(inValue)
            SecureID = retVal.SecureID
            cb = retVal.cb
        End Sub
        
        Public Function PopulateGroupUserLibComboAsync(ByVal request As SVCSearch.PopulateGroupUserLibComboRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateGroupUserLibComboResponse) Implements SVCSearch.IService1.PopulateGroupUserLibComboAsync
            Return MyBase.Channel.PopulateGroupUserLibComboAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_GetLibOwnerByName(ByVal request As SVCSearch.GetLibOwnerByNameRequest) As SVCSearch.GetLibOwnerByNameResponse Implements SVCSearch.IService1.GetLibOwnerByName
            Return MyBase.Channel.GetLibOwnerByName(request)
        End Function
        
        Public Function GetLibOwnerByName(ByRef SecureID As Integer, ByVal LibraryName As String) As String
            Dim inValue As SVCSearch.GetLibOwnerByNameRequest = New SVCSearch.GetLibOwnerByNameRequest()
            inValue.SecureID = SecureID
            inValue.LibraryName = LibraryName
            Dim retVal As SVCSearch.GetLibOwnerByNameResponse = CType(Me,SVCSearch.IService1).GetLibOwnerByName(inValue)
            SecureID = retVal.SecureID
            Return retVal.GetLibOwnerByNameResult
        End Function
        
        Public Function GetLibOwnerByNameAsync(ByVal request As SVCSearch.GetLibOwnerByNameRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetLibOwnerByNameResponse) Implements SVCSearch.IService1.GetLibOwnerByNameAsync
            Return MyBase.Channel.GetLibOwnerByNameAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_GenerateSQL(ByVal request As SVCSearch.GenerateSQLRequest) As SVCSearch.GenerateSQLResponse Implements SVCSearch.IService1.GenerateSQL
            Return MyBase.Channel.GenerateSQL(request)
        End Function
        
        Public Function GenerateSQL(ByVal SearchParmList As System.Collections.Generic.Dictionary(Of String, String), ByRef SecureID As Integer, ByVal TypeSQL As String) As String
            Dim inValue As SVCSearch.GenerateSQLRequest = New SVCSearch.GenerateSQLRequest()
            inValue.SearchParmList = SearchParmList
            inValue.SecureID = SecureID
            inValue.TypeSQL = TypeSQL
            Dim retVal As SVCSearch.GenerateSQLResponse = CType(Me,SVCSearch.IService1).GenerateSQL(inValue)
            SecureID = retVal.SecureID
            Return retVal.GenerateSQLResult
        End Function
        
        Public Function GenerateSQLAsync(ByVal request As SVCSearch.GenerateSQLRequest) As System.Threading.Tasks.Task(Of SVCSearch.GenerateSQLResponse) Implements SVCSearch.IService1.GenerateSQLAsync
            Return MyBase.Channel.GenerateSQLAsync(request)
        End Function
        
        Public Function getJsonData(ByVal I As String) As String Implements SVCSearch.IService1.getJsonData
            Return MyBase.Channel.getJsonData(I)
        End Function
        
        Public Function getJsonDataAsync(ByVal I As String) As System.Threading.Tasks.Task(Of String) Implements SVCSearch.IService1.getJsonDataAsync
            Return MyBase.Channel.getJsonDataAsync(I)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_ExecuteSearchEmail(ByVal request As SVCSearch.ExecuteSearchEmailRequest) As SVCSearch.ExecuteSearchEmailResponse Implements SVCSearch.IService1.ExecuteSearchEmail
            Return MyBase.Channel.ExecuteSearchEmail(request)
        End Function
        
        Public Function ExecuteSearchEmail(ByRef SecureID As Integer, ByRef currSearchCnt As Integer, ByVal bGenSql As Boolean, ByVal SearchParmsJson As String, ByRef bFirstEmailSearchSubmit As Boolean, ByRef EmailRowCnt As Integer) As String
            Dim inValue As SVCSearch.ExecuteSearchEmailRequest = New SVCSearch.ExecuteSearchEmailRequest()
            inValue.SecureID = SecureID
            inValue.currSearchCnt = currSearchCnt
            inValue.bGenSql = bGenSql
            inValue.SearchParmsJson = SearchParmsJson
            inValue.bFirstEmailSearchSubmit = bFirstEmailSearchSubmit
            inValue.EmailRowCnt = EmailRowCnt
            Dim retVal As SVCSearch.ExecuteSearchEmailResponse = CType(Me,SVCSearch.IService1).ExecuteSearchEmail(inValue)
            SecureID = retVal.SecureID
            currSearchCnt = retVal.currSearchCnt
            bFirstEmailSearchSubmit = retVal.bFirstEmailSearchSubmit
            EmailRowCnt = retVal.EmailRowCnt
            Return retVal.ExecuteSearchEmailResult
        End Function
        
        Public Function ExecuteSearchEmailAsync(ByVal request As SVCSearch.ExecuteSearchEmailRequest) As System.Threading.Tasks.Task(Of SVCSearch.ExecuteSearchEmailResponse) Implements SVCSearch.IService1.ExecuteSearchEmailAsync
            Return MyBase.Channel.ExecuteSearchEmailAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_ExecuteSearchContent(ByVal request As SVCSearch.ExecuteSearchContentRequest) As SVCSearch.ExecuteSearchContentResponse Implements SVCSearch.IService1.ExecuteSearchContent
            Return MyBase.Channel.ExecuteSearchContent(request)
        End Function
        
        Public Function ExecuteSearchContent(ByRef SecureID As Integer, ByRef currSearchCnt As Integer, ByVal bGenSql As Boolean, ByVal SearchParmsJson As String, ByRef bFirstContentSearchSubmit As Boolean, ByRef ContentRowCnt As Integer) As String
            Dim inValue As SVCSearch.ExecuteSearchContentRequest = New SVCSearch.ExecuteSearchContentRequest()
            inValue.SecureID = SecureID
            inValue.currSearchCnt = currSearchCnt
            inValue.bGenSql = bGenSql
            inValue.SearchParmsJson = SearchParmsJson
            inValue.bFirstContentSearchSubmit = bFirstContentSearchSubmit
            inValue.ContentRowCnt = ContentRowCnt
            Dim retVal As SVCSearch.ExecuteSearchContentResponse = CType(Me,SVCSearch.IService1).ExecuteSearchContent(inValue)
            SecureID = retVal.SecureID
            currSearchCnt = retVal.currSearchCnt
            bFirstContentSearchSubmit = retVal.bFirstContentSearchSubmit
            ContentRowCnt = retVal.ContentRowCnt
            Return retVal.ExecuteSearchContentResult
        End Function
        
        Public Function ExecuteSearchContentAsync(ByVal request As SVCSearch.ExecuteSearchContentRequest) As System.Threading.Tasks.Task(Of SVCSearch.ExecuteSearchContentResponse) Implements SVCSearch.IService1.ExecuteSearchContentAsync
            Return MyBase.Channel.ExecuteSearchContentAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getSearchState(ByVal request As SVCSearch.getSearchStateRequest) As SVCSearch.getSearchStateResponse Implements SVCSearch.IService1.getSearchState
            Return MyBase.Channel.getSearchState(request)
        End Function
        
        Public Function getSearchState(ByRef SecureID As Integer, ByVal SearchID As Integer, ByVal UID As String, ByVal ScreenName As String, ByRef DICT As System.Collections.Generic.Dictionary(Of String, String), ByRef rMsg As String, ByRef RC As Boolean, ByVal HiveConnectionName As String, ByVal HiveActive As Boolean, ByVal RepoSvrName As String) As SVCSearch.DS_USERSEARCHSTATE()
            Dim inValue As SVCSearch.getSearchStateRequest = New SVCSearch.getSearchStateRequest()
            inValue.SecureID = SecureID
            inValue.SearchID = SearchID
            inValue.UID = UID
            inValue.ScreenName = ScreenName
            inValue.DICT = DICT
            inValue.rMsg = rMsg
            inValue.RC = RC
            inValue.HiveConnectionName = HiveConnectionName
            inValue.HiveActive = HiveActive
            inValue.RepoSvrName = RepoSvrName
            Dim retVal As SVCSearch.getSearchStateResponse = CType(Me,SVCSearch.IService1).getSearchState(inValue)
            SecureID = retVal.SecureID
            DICT = retVal.DICT
            rMsg = retVal.rMsg
            RC = retVal.RC
            Return retVal.getSearchStateResult
        End Function
        
        Public Function getSearchStateAsync(ByVal request As SVCSearch.getSearchStateRequest) As System.Threading.Tasks.Task(Of SVCSearch.getSearchStateResponse) Implements SVCSearch.IService1.getSearchStateAsync
            Return MyBase.Channel.getSearchStateAsync(request)
        End Function
        
        Public Function getSourceLength(ByVal SourceGuid As String, ByVal SourceType As String) As Long Implements SVCSearch.IService1.getSourceLength
            Return MyBase.Channel.getSourceLength(SourceGuid, SourceType)
        End Function
        
        Public Function getSourceLengthAsync(ByVal SourceGuid As String, ByVal SourceType As String) As System.Threading.Tasks.Task(Of Long) Implements SVCSearch.IService1.getSourceLengthAsync
            Return MyBase.Channel.getSourceLengthAsync(SourceGuid, SourceType)
        End Function
        
        Public Function getSourceName(ByVal SourceGuid As String, ByVal SourceType As String) As String Implements SVCSearch.IService1.getSourceName
            Return MyBase.Channel.getSourceName(SourceGuid, SourceType)
        End Function
        
        Public Function getSourceNameAsync(ByVal SourceGuid As String, ByVal SourceType As String) As System.Threading.Tasks.Task(Of String) Implements SVCSearch.IService1.getSourceNameAsync
            Return MyBase.Channel.getSourceNameAsync(SourceGuid, SourceType)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_DownLoadDocument(ByVal request As SVCSearch.DownLoadDocumentRequest) As SVCSearch.DownLoadDocumentResponse Implements SVCSearch.IService1.DownLoadDocument
            Return MyBase.Channel.DownLoadDocument(request)
        End Function
        
        Public Function DownLoadDocument(ByRef TypeImage As String, ByVal SourceGuid As String) As Byte()
            Dim inValue As SVCSearch.DownLoadDocumentRequest = New SVCSearch.DownLoadDocumentRequest()
            inValue.TypeImage = TypeImage
            inValue.SourceGuid = SourceGuid
            Dim retVal As SVCSearch.DownLoadDocumentResponse = CType(Me,SVCSearch.IService1).DownLoadDocument(inValue)
            TypeImage = retVal.TypeImage
            Return retVal.DownLoadDocumentResult
        End Function
        
        Public Function DownLoadDocumentAsync(ByVal request As SVCSearch.DownLoadDocumentRequest) As System.Threading.Tasks.Task(Of SVCSearch.DownLoadDocumentResponse) Implements SVCSearch.IService1.DownLoadDocumentAsync
            Return MyBase.Channel.DownLoadDocumentAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_GetAttachmentFromDB(ByVal request As SVCSearch.GetAttachmentFromDBRequest) As SVCSearch.GetAttachmentFromDBResponse Implements SVCSearch.IService1.GetAttachmentFromDB
            Return MyBase.Channel.GetAttachmentFromDB(request)
        End Function
        
        Public Function GetAttachmentFromDB(ByRef SecureID As Integer, ByVal EmailGuid As String) As Byte()
            Dim inValue As SVCSearch.GetAttachmentFromDBRequest = New SVCSearch.GetAttachmentFromDBRequest()
            inValue.SecureID = SecureID
            inValue.EmailGuid = EmailGuid
            Dim retVal As SVCSearch.GetAttachmentFromDBResponse = CType(Me,SVCSearch.IService1).GetAttachmentFromDB(inValue)
            SecureID = retVal.SecureID
            Return retVal.GetAttachmentFromDBResult
        End Function
        
        Public Function GetAttachmentFromDBAsync(ByVal request As SVCSearch.GetAttachmentFromDBRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetAttachmentFromDBResponse) Implements SVCSearch.IService1.GetAttachmentFromDBAsync
            Return MyBase.Channel.GetAttachmentFromDBAsync(request)
        End Function
        
        Public Function getContentDT(ByVal sourceguid As String) As System.Data.DataTable Implements SVCSearch.IService1.getContentDT
            Return MyBase.Channel.getContentDT(sourceguid)
        End Function
        
        Public Function getContentDTAsync(ByVal sourceguid As String) As System.Threading.Tasks.Task(Of System.Data.DataTable) Implements SVCSearch.IService1.getContentDTAsync
            Return MyBase.Channel.getContentDTAsync(sourceguid)
        End Function
        
        Public Function TestIISConnection() As String Implements SVCSearch.IService1.TestIISConnection
            Return MyBase.Channel.TestIISConnection
        End Function
        
        Public Function TestIISConnectionAsync() As System.Threading.Tasks.Task(Of String) Implements SVCSearch.IService1.TestIISConnectionAsync
            Return MyBase.Channel.TestIISConnectionAsync
        End Function
        
        Public Function TestConnection() As String Implements SVCSearch.IService1.TestConnection
            Return MyBase.Channel.TestConnection
        End Function
        
        Public Function TestConnectionAsync() As System.Threading.Tasks.Task(Of String) Implements SVCSearch.IService1.TestConnectionAsync
            Return MyBase.Channel.TestConnectionAsync
        End Function
        
        Public Function getWordInflections(ByVal QRY As String, ByVal CS As String) As String Implements SVCSearch.IService1.getWordInflections
            Return MyBase.Channel.getWordInflections(QRY, CS)
        End Function
        
        Public Function getWordInflectionsAsync(ByVal QRY As String, ByVal CS As String) As System.Threading.Tasks.Task(Of String) Implements SVCSearch.IService1.getWordInflectionsAsync
            Return MyBase.Channel.getWordInflectionsAsync(QRY, CS)
        End Function
        
        Public Function removeExpiredAlerts() As Boolean Implements SVCSearch.IService1.removeExpiredAlerts
            Return MyBase.Channel.removeExpiredAlerts
        End Function
        
        Public Function removeExpiredAlertsAsync() As System.Threading.Tasks.Task(Of Boolean) Implements SVCSearch.IService1.removeExpiredAlertsAsync
            Return MyBase.Channel.removeExpiredAlertsAsync
        End Function
        
        Public Function ChangeUserPasswordAdmin(ByVal AdminUserID As String, ByVal UserLogin As String, ByVal NewPw1 As String, ByVal NewPw2 As String) As Boolean Implements SVCSearch.IService1.ChangeUserPasswordAdmin
            Return MyBase.Channel.ChangeUserPasswordAdmin(AdminUserID, UserLogin, NewPw1, NewPw2)
        End Function
        
        Public Function ChangeUserPasswordAdminAsync(ByVal AdminUserID As String, ByVal UserLogin As String, ByVal NewPw1 As String, ByVal NewPw2 As String) As System.Threading.Tasks.Task(Of Boolean) Implements SVCSearch.IService1.ChangeUserPasswordAdminAsync
            Return MyBase.Channel.ChangeUserPasswordAdminAsync(AdminUserID, UserLogin, NewPw1, NewPw2)
        End Function
        
        Public Function AddUserGroup(ByVal GroupName As String, ByVal GroupOwnerUserID As String) As Boolean Implements SVCSearch.IService1.AddUserGroup
            Return MyBase.Channel.AddUserGroup(GroupName, GroupOwnerUserID)
        End Function
        
        Public Function AddUserGroupAsync(ByVal GroupName As String, ByVal GroupOwnerUserID As String) As System.Threading.Tasks.Task(Of Boolean) Implements SVCSearch.IService1.AddUserGroupAsync
            Return MyBase.Channel.AddUserGroupAsync(GroupName, GroupOwnerUserID)
        End Function
        
        Public Function getErrorLogs(ByVal MaxNbr As String) As String Implements SVCSearch.IService1.getErrorLogs
            Return MyBase.Channel.getErrorLogs(MaxNbr)
        End Function
        
        Public Function getErrorLogsAsync(ByVal MaxNbr As String) As System.Threading.Tasks.Task(Of String) Implements SVCSearch.IService1.getErrorLogsAsync
            Return MyBase.Channel.getErrorLogsAsync(MaxNbr)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_SetEmailPublicFlag(ByVal request As SVCSearch.SetEmailPublicFlagRequest) As SVCSearch.SetEmailPublicFlagResponse Implements SVCSearch.IService1.SetEmailPublicFlag
            Return MyBase.Channel.SetEmailPublicFlag(request)
        End Function
        
        Public Sub SetEmailPublicFlag(ByRef SecureID As Integer, ByVal EmailGuid As String, ByVal isPublic As Boolean)
            Dim inValue As SVCSearch.SetEmailPublicFlagRequest = New SVCSearch.SetEmailPublicFlagRequest()
            inValue.SecureID = SecureID
            inValue.EmailGuid = EmailGuid
            inValue.isPublic = isPublic
            Dim retVal As SVCSearch.SetEmailPublicFlagResponse = CType(Me,SVCSearch.IService1).SetEmailPublicFlag(inValue)
            SecureID = retVal.SecureID
        End Sub
        
        Public Function SetEmailPublicFlagAsync(ByVal request As SVCSearch.SetEmailPublicFlagRequest) As System.Threading.Tasks.Task(Of SVCSearch.SetEmailPublicFlagResponse) Implements SVCSearch.IService1.SetEmailPublicFlagAsync
            Return MyBase.Channel.SetEmailPublicFlagAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_SetDocumentToMaster(ByVal request As SVCSearch.SetDocumentToMasterRequest) As SVCSearch.SetDocumentToMasterResponse Implements SVCSearch.IService1.SetDocumentToMaster
            Return MyBase.Channel.SetDocumentToMaster(request)
        End Function
        
        Public Sub SetDocumentToMaster(ByRef SecureID As Integer, ByVal SourceGuid As String, ByVal MasterFlag As Boolean)
            Dim inValue As SVCSearch.SetDocumentToMasterRequest = New SVCSearch.SetDocumentToMasterRequest()
            inValue.SecureID = SecureID
            inValue.SourceGuid = SourceGuid
            inValue.MasterFlag = MasterFlag
            Dim retVal As SVCSearch.SetDocumentToMasterResponse = CType(Me,SVCSearch.IService1).SetDocumentToMaster(inValue)
            SecureID = retVal.SecureID
        End Sub
        
        Public Function SetDocumentToMasterAsync(ByVal request As SVCSearch.SetDocumentToMasterRequest) As System.Threading.Tasks.Task(Of SVCSearch.SetDocumentToMasterResponse) Implements SVCSearch.IService1.SetDocumentToMasterAsync
            Return MyBase.Channel.SetDocumentToMasterAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_SetDocumentPublicFlag(ByVal request As SVCSearch.SetDocumentPublicFlagRequest) As SVCSearch.SetDocumentPublicFlagResponse Implements SVCSearch.IService1.SetDocumentPublicFlag
            Return MyBase.Channel.SetDocumentPublicFlag(request)
        End Function
        
        Public Sub SetDocumentPublicFlag(ByRef SecureID As Integer, ByVal SourceGuid As String, ByVal isPublic As Boolean)
            Dim inValue As SVCSearch.SetDocumentPublicFlagRequest = New SVCSearch.SetDocumentPublicFlagRequest()
            inValue.SecureID = SecureID
            inValue.SourceGuid = SourceGuid
            inValue.isPublic = isPublic
            Dim retVal As SVCSearch.SetDocumentPublicFlagResponse = CType(Me,SVCSearch.IService1).SetDocumentPublicFlag(inValue)
            SecureID = retVal.SecureID
        End Sub
        
        Public Function SetDocumentPublicFlagAsync(ByVal request As SVCSearch.SetDocumentPublicFlagRequest) As System.Threading.Tasks.Task(Of SVCSearch.SetDocumentPublicFlagResponse) Implements SVCSearch.IService1.SetDocumentPublicFlagAsync
            Return MyBase.Channel.SetDocumentPublicFlagAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_ExecuteSearchJson(ByVal request As SVCSearch.ExecuteSearchJsonRequest) As SVCSearch.ExecuteSearchJsonResponse Implements SVCSearch.IService1.ExecuteSearchJson
            Return MyBase.Channel.ExecuteSearchJson(request)
        End Function
        
        Public Function ExecuteSearchJson(ByVal TypeSearch As String, ByVal JsonSearchParms As String, ByRef RetMsg As String) As String
            Dim inValue As SVCSearch.ExecuteSearchJsonRequest = New SVCSearch.ExecuteSearchJsonRequest()
            inValue.TypeSearch = TypeSearch
            inValue.JsonSearchParms = JsonSearchParms
            inValue.RetMsg = RetMsg
            Dim retVal As SVCSearch.ExecuteSearchJsonResponse = CType(Me,SVCSearch.IService1).ExecuteSearchJson(inValue)
            RetMsg = retVal.RetMsg
            Return retVal.ExecuteSearchJsonResult
        End Function
        
        Public Function ExecuteSearchJsonAsync(ByVal request As SVCSearch.ExecuteSearchJsonRequest) As System.Threading.Tasks.Task(Of SVCSearch.ExecuteSearchJsonResponse) Implements SVCSearch.IService1.ExecuteSearchJsonAsync
            Return MyBase.Channel.ExecuteSearchJsonAsync(request)
        End Function
        
        Public Function testServiceAvail() As String Implements SVCSearch.IService1.testServiceAvail
            Return MyBase.Channel.testServiceAvail
        End Function
        
        Public Function testServiceAvailAsync() As System.Threading.Tasks.Task(Of String) Implements SVCSearch.IService1.testServiceAvailAsync
            Return MyBase.Channel.testServiceAvailAsync
        End Function
        
        Public Function GenerateSearchSQL(ByVal TypeSearch As String, ByVal SearchParmList As System.Collections.Generic.Dictionary(Of String, String)) As String Implements SVCSearch.IService1.GenerateSearchSQL
            Return MyBase.Channel.GenerateSearchSQL(TypeSearch, SearchParmList)
        End Function
        
        Public Function GenerateSearchSQLAsync(ByVal TypeSearch As String, ByVal SearchParmList As System.Collections.Generic.Dictionary(Of String, String)) As System.Threading.Tasks.Task(Of String) Implements SVCSearch.IService1.GenerateSearchSQLAsync
            Return MyBase.Channel.GenerateSearchSQLAsync(TypeSearch, SearchParmList)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_ExecuteSearchDT(ByVal request As SVCSearch.ExecuteSearchDTRequest) As SVCSearch.ExecuteSearchDTResponse Implements SVCSearch.IService1.ExecuteSearchDT
            Return MyBase.Channel.ExecuteSearchDT(request)
        End Function
        
        Public Function ExecuteSearchDT(ByVal SearchType As String, ByRef currSearchCnt As Integer, ByVal bGenSql As Boolean, ByRef EmailGenSql As String, ByVal SearchParmsJson As String, ByRef ContentGenSql As String, ByRef strListOEmailRows As String, ByRef strListOfContentRows As String, ByRef bFirstEmailSearchSubmit As Boolean, ByRef bFirstContentSearchSubmit As Boolean, ByRef EmailRowCnt As Integer, ByRef ContentRowCnt As Integer) As System.Data.DataSet
            Dim inValue As SVCSearch.ExecuteSearchDTRequest = New SVCSearch.ExecuteSearchDTRequest()
            inValue.SearchType = SearchType
            inValue.currSearchCnt = currSearchCnt
            inValue.bGenSql = bGenSql
            inValue.EmailGenSql = EmailGenSql
            inValue.SearchParmsJson = SearchParmsJson
            inValue.ContentGenSql = ContentGenSql
            inValue.strListOEmailRows = strListOEmailRows
            inValue.strListOfContentRows = strListOfContentRows
            inValue.bFirstEmailSearchSubmit = bFirstEmailSearchSubmit
            inValue.bFirstContentSearchSubmit = bFirstContentSearchSubmit
            inValue.EmailRowCnt = EmailRowCnt
            inValue.ContentRowCnt = ContentRowCnt
            Dim retVal As SVCSearch.ExecuteSearchDTResponse = CType(Me,SVCSearch.IService1).ExecuteSearchDT(inValue)
            currSearchCnt = retVal.currSearchCnt
            EmailGenSql = retVal.EmailGenSql
            ContentGenSql = retVal.ContentGenSql
            strListOEmailRows = retVal.strListOEmailRows
            strListOfContentRows = retVal.strListOfContentRows
            bFirstEmailSearchSubmit = retVal.bFirstEmailSearchSubmit
            bFirstContentSearchSubmit = retVal.bFirstContentSearchSubmit
            EmailRowCnt = retVal.EmailRowCnt
            ContentRowCnt = retVal.ContentRowCnt
            Return retVal.ExecuteSearchDTResult
        End Function
        
        Public Function ExecuteSearchDTAsync(ByVal request As SVCSearch.ExecuteSearchDTRequest) As System.Threading.Tasks.Task(Of SVCSearch.ExecuteSearchDTResponse) Implements SVCSearch.IService1.ExecuteSearchDTAsync
            Return MyBase.Channel.ExecuteSearchDTAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_GetFilesInZipDetail(ByVal request As SVCSearch.GetFilesInZipDetailRequest) As SVCSearch.GetFilesInZipDetailResponse Implements SVCSearch.IService1.GetFilesInZipDetail
            Return MyBase.Channel.GetFilesInZipDetail(request)
        End Function
        
        Public Function GetFilesInZipDetail(ByRef SecureID As Integer, ByVal ParentGuid As String, ByRef RC As Boolean) As String
            Dim inValue As SVCSearch.GetFilesInZipDetailRequest = New SVCSearch.GetFilesInZipDetailRequest()
            inValue.SecureID = SecureID
            inValue.ParentGuid = ParentGuid
            inValue.RC = RC
            Dim retVal As SVCSearch.GetFilesInZipDetailResponse = CType(Me,SVCSearch.IService1).GetFilesInZipDetail(inValue)
            SecureID = retVal.SecureID
            RC = retVal.RC
            Return retVal.GetFilesInZipDetailResult
        End Function
        
        Public Function GetFilesInZipDetailAsync(ByVal request As SVCSearch.GetFilesInZipDetailRequest) As System.Threading.Tasks.Task(Of SVCSearch.GetFilesInZipDetailResponse) Implements SVCSearch.IService1.GetFilesInZipDetailAsync
            Return MyBase.Channel.GetFilesInZipDetailAsync(request)
        End Function
        
        Public Function xGetXrtID(ByVal CustomerID As String, ByVal ServerName As String, ByVal DBName As String, ByVal InstanceName As String) As Integer Implements SVCSearch.IService1.xGetXrtID
            Return MyBase.Channel.xGetXrtID(CustomerID, ServerName, DBName, InstanceName)
        End Function
        
        Public Function xGetXrtIDAsync(ByVal CustomerID As String, ByVal ServerName As String, ByVal DBName As String, ByVal InstanceName As String) As System.Threading.Tasks.Task(Of Integer) Implements SVCSearch.IService1.xGetXrtIDAsync
            Return MyBase.Channel.xGetXrtIDAsync(CustomerID, ServerName, DBName, InstanceName)
        End Function
        
        Public Function getSecEndPoint() As String Implements SVCSearch.IService1.getSecEndPoint
            Return MyBase.Channel.getSecEndPoint
        End Function
        
        Public Function getSecEndPointAsync() As System.Threading.Tasks.Task(Of String) Implements SVCSearch.IService1.getSecEndPointAsync
            Return MyBase.Channel.getSecEndPointAsync
        End Function
        
        Public Function getContractID(ByVal SecureID As Integer, ByVal UserID As String) As String Implements SVCSearch.IService1.getContractID
            Return MyBase.Channel.getContractID(SecureID, UserID)
        End Function
        
        Public Function getContractIDAsync(ByVal SecureID As Integer, ByVal UserID As String) As System.Threading.Tasks.Task(Of String) Implements SVCSearch.IService1.getContractIDAsync
            Return MyBase.Channel.getContractIDAsync(SecureID, UserID)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_AddGroupLibraryAccess(ByVal request As SVCSearch.AddGroupLibraryAccessRequest) As SVCSearch.AddGroupLibraryAccessResponse Implements SVCSearch.IService1.AddGroupLibraryAccess
            Return MyBase.Channel.AddGroupLibraryAccess(request)
        End Function
        
        Public Sub AddGroupLibraryAccess(ByVal SecureID As Integer, ByVal UserID As String, ByVal LibraryName As String, ByVal GroupName As String, ByVal GroupOwnerUserID As String, ByRef RC As Boolean, ByVal CurrUserID As String, ByVal SessionID As String, ByVal ControlSection As String)
            Dim inValue As SVCSearch.AddGroupLibraryAccessRequest = New SVCSearch.AddGroupLibraryAccessRequest()
            inValue.SecureID = SecureID
            inValue.UserID = UserID
            inValue.LibraryName = LibraryName
            inValue.GroupName = GroupName
            inValue.GroupOwnerUserID = GroupOwnerUserID
            inValue.RC = RC
            inValue.CurrUserID = CurrUserID
            inValue.SessionID = SessionID
            inValue.ControlSection = ControlSection
            Dim retVal As SVCSearch.AddGroupLibraryAccessResponse = CType(Me,SVCSearch.IService1).AddGroupLibraryAccess(inValue)
            RC = retVal.RC
        End Sub
        
        Public Function AddGroupLibraryAccessAsync(ByVal request As SVCSearch.AddGroupLibraryAccessRequest) As System.Threading.Tasks.Task(Of SVCSearch.AddGroupLibraryAccessResponse) Implements SVCSearch.IService1.AddGroupLibraryAccessAsync
            Return MyBase.Channel.AddGroupLibraryAccessAsync(request)
        End Function
        
        Public Function AddGroupUser(ByVal SecureID As Integer, ByVal SessionID As String, ByVal CurrUserID As String, ByVal UserID As String, ByVal FullAccess As String, ByVal ReadOnlyAccess As String, ByVal DeleteAccess As String, ByVal Searchable As String, ByVal GroupOwnerUserID As String, ByVal GroupName As String, ByVal ControlSection As String) As Boolean Implements SVCSearch.IService1.AddGroupUser
            Return MyBase.Channel.AddGroupUser(SecureID, SessionID, CurrUserID, UserID, FullAccess, ReadOnlyAccess, DeleteAccess, Searchable, GroupOwnerUserID, GroupName, ControlSection)
        End Function
        
        Public Function AddGroupUserAsync(ByVal SecureID As Integer, ByVal SessionID As String, ByVal CurrUserID As String, ByVal UserID As String, ByVal FullAccess As String, ByVal ReadOnlyAccess As String, ByVal DeleteAccess As String, ByVal Searchable As String, ByVal GroupOwnerUserID As String, ByVal GroupName As String, ByVal ControlSection As String) As System.Threading.Tasks.Task(Of Boolean) Implements SVCSearch.IService1.AddGroupUserAsync
            Return MyBase.Channel.AddGroupUserAsync(SecureID, SessionID, CurrUserID, UserID, FullAccess, ReadOnlyAccess, DeleteAccess, Searchable, GroupOwnerUserID, GroupName, ControlSection)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_DBExecuteEncryptedSql(ByVal request As SVCSearch.DBExecuteEncryptedSqlRequest) As SVCSearch.DBExecuteEncryptedSqlResponse Implements SVCSearch.IService1.DBExecuteEncryptedSql
            Return MyBase.Channel.DBExecuteEncryptedSql(request)
        End Function
        
        Public Function DBExecuteEncryptedSql(ByRef SecureID As Integer, ByRef MySql As String, ByVal EKEY As String) As Boolean
            Dim inValue As SVCSearch.DBExecuteEncryptedSqlRequest = New SVCSearch.DBExecuteEncryptedSqlRequest()
            inValue.SecureID = SecureID
            inValue.MySql = MySql
            inValue.EKEY = EKEY
            Dim retVal As SVCSearch.DBExecuteEncryptedSqlResponse = CType(Me,SVCSearch.IService1).DBExecuteEncryptedSql(inValue)
            SecureID = retVal.SecureID
            MySql = retVal.MySql
            Return retVal.DBExecuteEncryptedSqlResult
        End Function
        
        Public Function DBExecuteEncryptedSqlAsync(ByVal request As SVCSearch.DBExecuteEncryptedSqlRequest) As System.Threading.Tasks.Task(Of SVCSearch.DBExecuteEncryptedSqlResponse) Implements SVCSearch.IService1.DBExecuteEncryptedSqlAsync
            Return MyBase.Channel.DBExecuteEncryptedSqlAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_validateAttachSecureLogin(ByVal request As SVCSearch.validateAttachSecureLoginRequest) As SVCSearch.validateAttachSecureLoginResponse Implements SVCSearch.IService1.validateAttachSecureLogin
            Return MyBase.Channel.validateAttachSecureLogin(request)
        End Function
        
        Public Function validateAttachSecureLogin(ByRef SecureID As Integer, ByVal CompanyID As String, ByVal RepoID As String, ByVal UserLogin As String, ByVal PW As String, ByRef RC As Boolean, ByRef RetMsg As String, ByRef GateWayEndPoint As String, ByRef DownloadEndpoint As String, ByRef ENCCS As String) As Boolean
            Dim inValue As SVCSearch.validateAttachSecureLoginRequest = New SVCSearch.validateAttachSecureLoginRequest()
            inValue.SecureID = SecureID
            inValue.CompanyID = CompanyID
            inValue.RepoID = RepoID
            inValue.UserLogin = UserLogin
            inValue.PW = PW
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            inValue.GateWayEndPoint = GateWayEndPoint
            inValue.DownloadEndpoint = DownloadEndpoint
            inValue.ENCCS = ENCCS
            Dim retVal As SVCSearch.validateAttachSecureLoginResponse = CType(Me,SVCSearch.IService1).validateAttachSecureLogin(inValue)
            SecureID = retVal.SecureID
            RC = retVal.RC
            RetMsg = retVal.RetMsg
            GateWayEndPoint = retVal.GateWayEndPoint
            DownloadEndpoint = retVal.DownloadEndpoint
            ENCCS = retVal.ENCCS
            Return retVal.validateAttachSecureLoginResult
        End Function
        
        Public Function validateAttachSecureLoginAsync(ByVal request As SVCSearch.validateAttachSecureLoginRequest) As System.Threading.Tasks.Task(Of SVCSearch.validateAttachSecureLoginResponse) Implements SVCSearch.IService1.validateAttachSecureLoginAsync
            Return MyBase.Channel.validateAttachSecureLoginAsync(request)
        End Function
        
        Public Function GetXrtTest(ByVal dt As Date) As String Implements SVCSearch.IService1.GetXrtTest
            Return MyBase.Channel.GetXrtTest(dt)
        End Function
        
        Public Function GetXrtTestAsync(ByVal dt As Date) As System.Threading.Tasks.Task(Of String) Implements SVCSearch.IService1.GetXrtTestAsync
            Return MyBase.Channel.GetXrtTestAsync(dt)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_ckContentFlags(ByVal request As SVCSearch.ckContentFlagsRequest) As SVCSearch.ckContentFlagsResponse Implements SVCSearch.IService1.ckContentFlags
            Return MyBase.Channel.ckContentFlags(request)
        End Function
        
        Public Sub ckContentFlags(ByVal SecureID As Integer, ByVal SourceGuid As String, ByRef SD As Boolean, ByRef SP As Boolean, ByRef SAP As Boolean, ByRef bMaster As Boolean, ByRef RSS As Boolean, ByRef WEB As Boolean, ByRef bPublic As Boolean)
            Dim inValue As SVCSearch.ckContentFlagsRequest = New SVCSearch.ckContentFlagsRequest()
            inValue.SecureID = SecureID
            inValue.SourceGuid = SourceGuid
            inValue.SD = SD
            inValue.SP = SP
            inValue.SAP = SAP
            inValue.bMaster = bMaster
            inValue.RSS = RSS
            inValue.WEB = WEB
            inValue.bPublic = bPublic
            Dim retVal As SVCSearch.ckContentFlagsResponse = CType(Me,SVCSearch.IService1).ckContentFlags(inValue)
            SD = retVal.SD
            SP = retVal.SP
            SAP = retVal.SAP
            bMaster = retVal.bMaster
            RSS = retVal.RSS
            WEB = retVal.WEB
            bPublic = retVal.bPublic
        End Sub
        
        Public Function ckContentFlagsAsync(ByVal request As SVCSearch.ckContentFlagsRequest) As System.Threading.Tasks.Task(Of SVCSearch.ckContentFlagsResponse) Implements SVCSearch.IService1.ckContentFlagsAsync
            Return MyBase.Channel.ckContentFlagsAsync(request)
        End Function
        
        Public Function getCustomerLogoTitle() As String Implements SVCSearch.IService1.getCustomerLogoTitle
            Return MyBase.Channel.getCustomerLogoTitle
        End Function
        
        Public Function getCustomerLogoTitleAsync() As System.Threading.Tasks.Task(Of String) Implements SVCSearch.IService1.getCustomerLogoTitleAsync
            Return MyBase.Channel.getCustomerLogoTitleAsync
        End Function
        
        Public Function getExplodeEmailZip() As String Implements SVCSearch.IService1.getExplodeEmailZip
            Return MyBase.Channel.getExplodeEmailZip
        End Function
        
        Public Function getExplodeEmailZipAsync() As System.Threading.Tasks.Task(Of String) Implements SVCSearch.IService1.getExplodeEmailZipAsync
            Return MyBase.Channel.getExplodeEmailZipAsync
        End Function
        
        Public Function getFacilityName() As String Implements SVCSearch.IService1.getFacilityName
            Return MyBase.Channel.getFacilityName
        End Function
        
        Public Function getFacilityNameAsync() As System.Threading.Tasks.Task(Of String) Implements SVCSearch.IService1.getFacilityNameAsync
            Return MyBase.Channel.getFacilityNameAsync
        End Function
        
        Public Function getAffinitydelay() As Integer Implements SVCSearch.IService1.getAffinitydelay
            Return MyBase.Channel.getAffinitydelay
        End Function
        
        Public Function getAffinitydelayAsync() As System.Threading.Tasks.Task(Of Integer) Implements SVCSearch.IService1.getAffinitydelayAsync
            Return MyBase.Channel.getAffinitydelayAsync
        End Function
        
        Public Function getClcURL() As String Implements SVCSearch.IService1.getClcURL
            Return MyBase.Channel.getClcURL
        End Function
        
        Public Function getClcURLAsync() As System.Threading.Tasks.Task(Of String) Implements SVCSearch.IService1.getClcURLAsync
            Return MyBase.Channel.getClcURLAsync
        End Function
        
        Public Function getArchiverURL() As String Implements SVCSearch.IService1.getArchiverURL
            Return MyBase.Channel.getArchiverURL
        End Function
        
        Public Function getArchiverURLAsync() As System.Threading.Tasks.Task(Of String) Implements SVCSearch.IService1.getArchiverURLAsync
            Return MyBase.Channel.getArchiverURLAsync
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_ExecuteSqlStack(ByVal request As SVCSearch.ExecuteSqlStackRequest) As SVCSearch.ExecuteSqlStackResponse Implements SVCSearch.IService1.ExecuteSqlStack
            Return MyBase.Channel.ExecuteSqlStack(request)
        End Function
        
        Public Function ExecuteSqlStack(ByRef SecureID As Integer, ByRef SqlStack As System.Collections.Generic.Dictionary(Of Integer, String), ByVal UserID As String, ByVal SessionID As String, ByVal ControlSection As String) As Boolean
            Dim inValue As SVCSearch.ExecuteSqlStackRequest = New SVCSearch.ExecuteSqlStackRequest()
            inValue.SecureID = SecureID
            inValue.SqlStack = SqlStack
            inValue.UserID = UserID
            inValue.SessionID = SessionID
            inValue.ControlSection = ControlSection
            Dim retVal As SVCSearch.ExecuteSqlStackResponse = CType(Me,SVCSearch.IService1).ExecuteSqlStack(inValue)
            SecureID = retVal.SecureID
            SqlStack = retVal.SqlStack
            Return retVal.ExecuteSqlStackResult
        End Function
        
        Public Function ExecuteSqlStackAsync(ByVal request As SVCSearch.ExecuteSqlStackRequest) As System.Threading.Tasks.Task(Of SVCSearch.ExecuteSqlStackResponse) Implements SVCSearch.IService1.ExecuteSqlStackAsync
            Return MyBase.Channel.ExecuteSqlStackAsync(request)
        End Function
        
        Public Function getDefaultScreen(ByVal SecureID As Integer, ByVal UserID As String) As String Implements SVCSearch.IService1.getDefaultScreen
            Return MyBase.Channel.getDefaultScreen(SecureID, UserID)
        End Function
        
        Public Function getDefaultScreenAsync(ByVal SecureID As Integer, ByVal UserID As String) As System.Threading.Tasks.Task(Of String) Implements SVCSearch.IService1.getDefaultScreenAsync
            Return MyBase.Channel.getDefaultScreenAsync(SecureID, UserID)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_RecallUserSearch(ByVal request As SVCSearch.RecallUserSearchRequest) As SVCSearch.RecallUserSearchResponse Implements SVCSearch.IService1.RecallUserSearch
            Return MyBase.Channel.RecallUserSearch(request)
        End Function
        
        Public Function RecallUserSearch(ByVal SecureID As Integer, ByVal SearchName As String, ByVal UID As String, ByRef strSearches As String) As Boolean
            Dim inValue As SVCSearch.RecallUserSearchRequest = New SVCSearch.RecallUserSearchRequest()
            inValue.SecureID = SecureID
            inValue.SearchName = SearchName
            inValue.UID = UID
            inValue.strSearches = strSearches
            Dim retVal As SVCSearch.RecallUserSearchResponse = CType(Me,SVCSearch.IService1).RecallUserSearch(inValue)
            strSearches = retVal.strSearches
            Return retVal.RecallUserSearchResult
        End Function
        
        Public Function RecallUserSearchAsync(ByVal request As SVCSearch.RecallUserSearchRequest) As System.Threading.Tasks.Task(Of SVCSearch.RecallUserSearchResponse) Implements SVCSearch.IService1.RecallUserSearchAsync
            Return MyBase.Channel.RecallUserSearchAsync(request)
        End Function
        
        Public Function SaveUserSearch(ByVal SecureID As Integer, ByVal SearchName As String, ByVal UID As String, ByVal strSearches As String) As Boolean Implements SVCSearch.IService1.SaveUserSearch
            Return MyBase.Channel.SaveUserSearch(SecureID, SearchName, UID, strSearches)
        End Function
        
        Public Function SaveUserSearchAsync(ByVal SecureID As Integer, ByVal SearchName As String, ByVal UID As String, ByVal strSearches As String) As System.Threading.Tasks.Task(Of Boolean) Implements SVCSearch.IService1.SaveUserSearchAsync
            Return MyBase.Channel.SaveUserSearchAsync(SecureID, SearchName, UID, strSearches)
        End Function
        
        Public Function scheduleFileDownLoad(ByVal SecureID As Integer, ByVal ContentGuid As String, ByVal UserID As String, ByVal ContentType As String, ByVal Preview As Integer, ByVal Restore As Integer) As Boolean Implements SVCSearch.IService1.scheduleFileDownLoad
            Return MyBase.Channel.scheduleFileDownLoad(SecureID, ContentGuid, UserID, ContentType, Preview, Restore)
        End Function
        
        Public Function scheduleFileDownLoadAsync(ByVal SecureID As Integer, ByVal ContentGuid As String, ByVal UserID As String, ByVal ContentType As String, ByVal Preview As Integer, ByVal Restore As Integer) As System.Threading.Tasks.Task(Of Boolean) Implements SVCSearch.IService1.scheduleFileDownLoadAsync
            Return MyBase.Channel.scheduleFileDownLoadAsync(SecureID, ContentGuid, UserID, ContentType, Preview, Restore)
        End Function
        
        Public Function GetContentMetaData(ByVal SecureID As Integer, ByVal SourceGuid As String) As String Implements SVCSearch.IService1.GetContentMetaData
            Return MyBase.Channel.GetContentMetaData(SecureID, SourceGuid)
        End Function
        
        Public Function GetContentMetaDataAsync(ByVal SecureID As Integer, ByVal SourceGuid As String) As System.Threading.Tasks.Task(Of String) Implements SVCSearch.IService1.GetContentMetaDataAsync
            Return MyBase.Channel.GetContentMetaDataAsync(SecureID, SourceGuid)
        End Function
        
        Public Function removeRestoreFileByGuid(ByVal SecureID As Integer, ByVal RowGuid As String) As Boolean Implements SVCSearch.IService1.removeRestoreFileByGuid
            Return MyBase.Channel.removeRestoreFileByGuid(SecureID, RowGuid)
        End Function
        
        Public Function removeRestoreFileByGuidAsync(ByVal SecureID As Integer, ByVal RowGuid As String) As System.Threading.Tasks.Task(Of Boolean) Implements SVCSearch.IService1.removeRestoreFileByGuidAsync
            Return MyBase.Channel.removeRestoreFileByGuidAsync(SecureID, RowGuid)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_removeRestoreFiles(ByVal request As SVCSearch.removeRestoreFilesRequest) As SVCSearch.removeRestoreFilesResponse Implements SVCSearch.IService1.removeRestoreFiles
            Return MyBase.Channel.removeRestoreFiles(request)
        End Function
        
        Public Function removeRestoreFiles(ByVal SecureID As Integer, ByRef UserID As String, ByRef MachineID As String) As Boolean
            Dim inValue As SVCSearch.removeRestoreFilesRequest = New SVCSearch.removeRestoreFilesRequest()
            inValue.SecureID = SecureID
            inValue.UserID = UserID
            inValue.MachineID = MachineID
            Dim retVal As SVCSearch.removeRestoreFilesResponse = CType(Me,SVCSearch.IService1).removeRestoreFiles(inValue)
            UserID = retVal.UserID
            MachineID = retVal.MachineID
            Return retVal.removeRestoreFilesResult
        End Function
        
        Public Function removeRestoreFilesAsync(ByVal request As SVCSearch.removeRestoreFilesRequest) As System.Threading.Tasks.Task(Of SVCSearch.removeRestoreFilesResponse) Implements SVCSearch.IService1.removeRestoreFilesAsync
            Return MyBase.Channel.removeRestoreFilesAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getRestoreFileCount(ByVal request As SVCSearch.getRestoreFileCountRequest) As SVCSearch.getRestoreFileCountResponse Implements SVCSearch.IService1.getRestoreFileCount
            Return MyBase.Channel.getRestoreFileCount(request)
        End Function
        
        Public Function getRestoreFileCount(ByVal SecureID As Integer, ByRef UserID As String, ByRef MachineID As String, ByRef Preview As Boolean) As Integer
            Dim inValue As SVCSearch.getRestoreFileCountRequest = New SVCSearch.getRestoreFileCountRequest()
            inValue.SecureID = SecureID
            inValue.UserID = UserID
            inValue.MachineID = MachineID
            inValue.Preview = Preview
            Dim retVal As SVCSearch.getRestoreFileCountResponse = CType(Me,SVCSearch.IService1).getRestoreFileCount(inValue)
            UserID = retVal.UserID
            MachineID = retVal.MachineID
            Preview = retVal.Preview
            Return retVal.getRestoreFileCountResult
        End Function
        
        Public Function getRestoreFileCountAsync(ByVal request As SVCSearch.getRestoreFileCountRequest) As System.Threading.Tasks.Task(Of SVCSearch.getRestoreFileCountResponse) Implements SVCSearch.IService1.getRestoreFileCountAsync
            Return MyBase.Channel.getRestoreFileCountAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_saveRestoreFile(ByVal request As SVCSearch.saveRestoreFileRequest) As SVCSearch.saveRestoreFileResponse Implements SVCSearch.IService1.saveRestoreFile
            Return MyBase.Channel.saveRestoreFile(request)
        End Function
        
        Public Function saveRestoreFile(ByVal SecureID As Integer, ByVal tgtTable As String, ByRef ContentGuid As String, ByVal Preview As Boolean, ByVal Restore As Boolean, ByRef UserID As String, ByRef MachineID As String, ByRef RC As Boolean, ByVal RetMsg As String) As Boolean
            Dim inValue As SVCSearch.saveRestoreFileRequest = New SVCSearch.saveRestoreFileRequest()
            inValue.SecureID = SecureID
            inValue.tgtTable = tgtTable
            inValue.ContentGuid = ContentGuid
            inValue.Preview = Preview
            inValue.Restore = Restore
            inValue.UserID = UserID
            inValue.MachineID = MachineID
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            Dim retVal As SVCSearch.saveRestoreFileResponse = CType(Me,SVCSearch.IService1).saveRestoreFile(inValue)
            ContentGuid = retVal.ContentGuid
            UserID = retVal.UserID
            MachineID = retVal.MachineID
            RC = retVal.RC
            Return retVal.saveRestoreFileResult
        End Function
        
        Public Function saveRestoreFileAsync(ByVal request As SVCSearch.saveRestoreFileRequest) As System.Threading.Tasks.Task(Of SVCSearch.saveRestoreFileResponse) Implements SVCSearch.IService1.saveRestoreFileAsync
            Return MyBase.Channel.saveRestoreFileAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_GenEmailAttachmentsSQL(ByVal request As SVCSearch.GenEmailAttachmentsSQLRequest) As SVCSearch.GenEmailAttachmentsSQLResponse Implements SVCSearch.IService1.GenEmailAttachmentsSQL
            Return MyBase.Channel.GenEmailAttachmentsSQL(request)
        End Function
        
        Public Function GenEmailAttachmentsSQL(ByVal UserID As String, ByVal SearchParms() As SVCSearch.DS_SearchTerms, ByRef SecureID As Integer, ByVal InputSearchString As String, ByVal useFreetext As Boolean, ByVal ckWeighted As Boolean, ByVal isEmail As Boolean, ByVal LimitToCurrRecs As Boolean, ByVal ThesaurusList() As Object, ByVal txtThesaurus As String, ByVal cbThesaurusText As String, ByVal calledBy As String) As String
            Dim inValue As SVCSearch.GenEmailAttachmentsSQLRequest = New SVCSearch.GenEmailAttachmentsSQLRequest()
            inValue.UserID = UserID
            inValue.SearchParms = SearchParms
            inValue.SecureID = SecureID
            inValue.InputSearchString = InputSearchString
            inValue.useFreetext = useFreetext
            inValue.ckWeighted = ckWeighted
            inValue.isEmail = isEmail
            inValue.LimitToCurrRecs = LimitToCurrRecs
            inValue.ThesaurusList = ThesaurusList
            inValue.txtThesaurus = txtThesaurus
            inValue.cbThesaurusText = cbThesaurusText
            inValue.calledBy = calledBy
            Dim retVal As SVCSearch.GenEmailAttachmentsSQLResponse = CType(Me,SVCSearch.IService1).GenEmailAttachmentsSQL(inValue)
            SecureID = retVal.SecureID
            Return retVal.GenEmailAttachmentsSQLResult
        End Function
        
        Public Function GenEmailAttachmentsSQLAsync(ByVal request As SVCSearch.GenEmailAttachmentsSQLRequest) As System.Threading.Tasks.Task(Of SVCSearch.GenEmailAttachmentsSQLResponse) Implements SVCSearch.IService1.GenEmailAttachmentsSQLAsync
            Return MyBase.Channel.GenEmailAttachmentsSQLAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_GenEmailGeneratedSQL(ByVal request As SVCSearch.GenEmailGeneratedSQLRequest) As SVCSearch.GenEmailGeneratedSQLResponse Implements SVCSearch.IService1.GenEmailGeneratedSQL
            Return MyBase.Channel.GenEmailGeneratedSQL(request)
        End Function
        
        Public Function GenEmailGeneratedSQL(ByVal UserID As String, ByVal SearchParms() As SVCSearch.DS_SearchTerms, ByRef SecureID As Integer) As String
            Dim inValue As SVCSearch.GenEmailGeneratedSQLRequest = New SVCSearch.GenEmailGeneratedSQLRequest()
            inValue.UserID = UserID
            inValue.SearchParms = SearchParms
            inValue.SecureID = SecureID
            Dim retVal As SVCSearch.GenEmailGeneratedSQLResponse = CType(Me,SVCSearch.IService1).GenEmailGeneratedSQL(inValue)
            SecureID = retVal.SecureID
            Return retVal.GenEmailGeneratedSQLResult
        End Function
        
        Public Function GenEmailGeneratedSQLAsync(ByVal request As SVCSearch.GenEmailGeneratedSQLRequest) As System.Threading.Tasks.Task(Of SVCSearch.GenEmailGeneratedSQLResponse) Implements SVCSearch.IService1.GenEmailGeneratedSQLAsync
            Return MyBase.Channel.GenEmailGeneratedSQLAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_GenContentSearchSQL(ByVal request As SVCSearch.GenContentSearchSQLRequest) As SVCSearch.GenContentSearchSQLResponse Implements SVCSearch.IService1.GenContentSearchSQL
            Return MyBase.Channel.GenContentSearchSQL(request)
        End Function
        
        Public Function GenContentSearchSQL(ByVal UserID As String, ByVal SearchParms() As SVCSearch.DS_SearchTerms, ByRef SecureID As Integer, ByVal UID As String, ByVal SearchString As String, ByVal ckLimitToExisting As Boolean, ByVal txtThesaurus As String, ByVal cbThesaurusText As String, ByVal ckLimitToLib As Boolean, ByVal LibraryName As String, ByVal ckWeighted As Boolean) As String
            Dim inValue As SVCSearch.GenContentSearchSQLRequest = New SVCSearch.GenContentSearchSQLRequest()
            inValue.UserID = UserID
            inValue.SearchParms = SearchParms
            inValue.SecureID = SecureID
            inValue.UID = UID
            inValue.SearchString = SearchString
            inValue.ckLimitToExisting = ckLimitToExisting
            inValue.txtThesaurus = txtThesaurus
            inValue.cbThesaurusText = cbThesaurusText
            inValue.ckLimitToLib = ckLimitToLib
            inValue.LibraryName = LibraryName
            inValue.ckWeighted = ckWeighted
            Dim retVal As SVCSearch.GenContentSearchSQLResponse = CType(Me,SVCSearch.IService1).GenContentSearchSQL(inValue)
            SecureID = retVal.SecureID
            Return retVal.GenContentSearchSQLResult
        End Function
        
        Public Function GenContentSearchSQLAsync(ByVal request As SVCSearch.GenContentSearchSQLRequest) As System.Threading.Tasks.Task(Of SVCSearch.GenContentSearchSQLResponse) Implements SVCSearch.IService1.GenContentSearchSQLAsync
            Return MyBase.Channel.GenContentSearchSQLAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_ChangeUserContentPublic(ByVal request As SVCSearch.ChangeUserContentPublicRequest) As SVCSearch.ChangeUserContentPublicResponse Implements SVCSearch.IService1.ChangeUserContentPublic
            Return MyBase.Channel.ChangeUserContentPublic(request)
        End Function
        
        Public Sub ChangeUserContentPublic(ByVal ServiceID As Integer, ByVal CurrSelectedUserGuid As String, ByVal isPublic As String, ByRef RC As Boolean, ByRef RetMsg As String)
            Dim inValue As SVCSearch.ChangeUserContentPublicRequest = New SVCSearch.ChangeUserContentPublicRequest()
            inValue.ServiceID = ServiceID
            inValue.CurrSelectedUserGuid = CurrSelectedUserGuid
            inValue.isPublic = isPublic
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            Dim retVal As SVCSearch.ChangeUserContentPublicResponse = CType(Me,SVCSearch.IService1).ChangeUserContentPublic(inValue)
            RC = retVal.RC
            RetMsg = retVal.RetMsg
        End Sub
        
        Public Function ChangeUserContentPublicAsync(ByVal request As SVCSearch.ChangeUserContentPublicRequest) As System.Threading.Tasks.Task(Of SVCSearch.ChangeUserContentPublicResponse) Implements SVCSearch.IService1.ChangeUserContentPublicAsync
            Return MyBase.Channel.ChangeUserContentPublicAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_Refactor(ByVal request As SVCSearch.RefactorRequest) As SVCSearch.RefactorResponse Implements SVCSearch.IService1.Refactor
            Return MyBase.Channel.Refactor(request)
        End Function
        
        Public Sub Refactor(ByVal SecureID As Integer, ByVal NewOwnerID As String, ByVal OldOwnerID As String, ByRef RC As Boolean, ByRef RetMsg As String)
            Dim inValue As SVCSearch.RefactorRequest = New SVCSearch.RefactorRequest()
            inValue.SecureID = SecureID
            inValue.NewOwnerID = NewOwnerID
            inValue.OldOwnerID = OldOwnerID
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            Dim retVal As SVCSearch.RefactorResponse = CType(Me,SVCSearch.IService1).Refactor(inValue)
            RC = retVal.RC
            RetMsg = retVal.RetMsg
        End Sub
        
        Public Function RefactorAsync(ByVal request As SVCSearch.RefactorRequest) As System.Threading.Tasks.Task(Of SVCSearch.RefactorResponse) Implements SVCSearch.IService1.RefactorAsync
            Return MyBase.Channel.RefactorAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getSAASState(ByVal request As SVCSearch.getSAASStateRequest) As SVCSearch.getSAASStateResponse Implements SVCSearch.IService1.getSAASState
            Return MyBase.Channel.getSAASState(request)
        End Function
        
        Public Function getSAASState(ByVal SecureID As Integer, ByVal UserID As String, ByVal DirName As String, ByVal FullPath As String, ByRef RetMsg As String, ByRef RC As Boolean) As String
            Dim inValue As SVCSearch.getSAASStateRequest = New SVCSearch.getSAASStateRequest()
            inValue.SecureID = SecureID
            inValue.UserID = UserID
            inValue.DirName = DirName
            inValue.FullPath = FullPath
            inValue.RetMsg = RetMsg
            inValue.RC = RC
            Dim retVal As SVCSearch.getSAASStateResponse = CType(Me,SVCSearch.IService1).getSAASState(inValue)
            RetMsg = retVal.RetMsg
            RC = retVal.RC
            Return retVal.getSAASStateResult
        End Function
        
        Public Function getSAASStateAsync(ByVal request As SVCSearch.getSAASStateRequest) As System.Threading.Tasks.Task(Of SVCSearch.getSAASStateResponse) Implements SVCSearch.IService1.getSAASStateAsync
            Return MyBase.Channel.getSAASStateAsync(request)
        End Function
        
        Public Function SetSAASState(ByVal SecureID As Integer, ByVal UserID As String, ByVal DirName As String, ByVal FullPath As String) As Boolean Implements SVCSearch.IService1.SetSAASState
            Return MyBase.Channel.SetSAASState(SecureID, UserID, DirName, FullPath)
        End Function
        
        Public Function SetSAASStateAsync(ByVal SecureID As Integer, ByVal UserID As String, ByVal DirName As String, ByVal FullPath As String) As System.Threading.Tasks.Task(Of Boolean) Implements SVCSearch.IService1.SetSAASStateAsync
            Return MyBase.Channel.SetSAASStateAsync(SecureID, UserID, DirName, FullPath)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getListOfStrings01(ByVal request As SVCSearch.getListOfStrings01Request) As SVCSearch.getListOfStrings01Response Implements SVCSearch.IService1.getListOfStrings01
            Return MyBase.Channel.getListOfStrings01(request)
        End Function
        
        Public Function getListOfStrings01(ByRef SecureID As Integer, ByVal MySql As String, ByRef RC As Boolean, ByRef RetMsg As String, ByVal UserId As String, ByVal SessionID As String) As String
            Dim inValue As SVCSearch.getListOfStrings01Request = New SVCSearch.getListOfStrings01Request()
            inValue.SecureID = SecureID
            inValue.MySql = MySql
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            inValue.UserId = UserId
            inValue.SessionID = SessionID
            Dim retVal As SVCSearch.getListOfStrings01Response = CType(Me,SVCSearch.IService1).getListOfStrings01(inValue)
            SecureID = retVal.SecureID
            RC = retVal.RC
            RetMsg = retVal.RetMsg
            Return retVal.getListOfStrings01Result
        End Function
        
        Public Function getListOfStrings01Async(ByVal request As SVCSearch.getListOfStrings01Request) As System.Threading.Tasks.Task(Of SVCSearch.getListOfStrings01Response) Implements SVCSearch.IService1.getListOfStrings01Async
            Return MyBase.Channel.getListOfStrings01Async(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getListOfStrings02(ByVal request As SVCSearch.getListOfStrings02Request) As SVCSearch.getListOfStrings02Response Implements SVCSearch.IService1.getListOfStrings02
            Return MyBase.Channel.getListOfStrings02(request)
        End Function
        
        Public Function getListOfStrings02(ByRef SecureID As Integer, ByVal MySql As String, ByRef RC As Boolean, ByRef RetMsg As String, ByVal UserId As String, ByVal SessionID As String) As SVCSearch.DS_ListOfStrings02()
            Dim inValue As SVCSearch.getListOfStrings02Request = New SVCSearch.getListOfStrings02Request()
            inValue.SecureID = SecureID
            inValue.MySql = MySql
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            inValue.UserId = UserId
            inValue.SessionID = SessionID
            Dim retVal As SVCSearch.getListOfStrings02Response = CType(Me,SVCSearch.IService1).getListOfStrings02(inValue)
            SecureID = retVal.SecureID
            RC = retVal.RC
            RetMsg = retVal.RetMsg
            Return retVal.getListOfStrings02Result
        End Function
        
        Public Function getListOfStrings02Async(ByVal request As SVCSearch.getListOfStrings02Request) As System.Threading.Tasks.Task(Of SVCSearch.getListOfStrings02Response) Implements SVCSearch.IService1.getListOfStrings02Async
            Return MyBase.Channel.getListOfStrings02Async(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getListOfStrings03(ByVal request As SVCSearch.getListOfStrings03Request) As SVCSearch.getListOfStrings03Response Implements SVCSearch.IService1.getListOfStrings03
            Return MyBase.Channel.getListOfStrings03(request)
        End Function
        
        Public Function getListOfStrings03(ByRef SecureID As Integer, ByVal MySql As String, ByRef RC As Boolean, ByRef RetMsg As String, ByVal UserId As String, ByVal SessionID As String) As SVCSearch.DS_ListOfStrings03()
            Dim inValue As SVCSearch.getListOfStrings03Request = New SVCSearch.getListOfStrings03Request()
            inValue.SecureID = SecureID
            inValue.MySql = MySql
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            inValue.UserId = UserId
            inValue.SessionID = SessionID
            Dim retVal As SVCSearch.getListOfStrings03Response = CType(Me,SVCSearch.IService1).getListOfStrings03(inValue)
            SecureID = retVal.SecureID
            RC = retVal.RC
            RetMsg = retVal.RetMsg
            Return retVal.getListOfStrings03Result
        End Function
        
        Public Function getListOfStrings03Async(ByVal request As SVCSearch.getListOfStrings03Request) As System.Threading.Tasks.Task(Of SVCSearch.getListOfStrings03Response) Implements SVCSearch.IService1.getListOfStrings03Async
            Return MyBase.Channel.getListOfStrings03Async(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getListOfStrings04(ByVal request As SVCSearch.getListOfStrings04Request) As SVCSearch.getListOfStrings04Response Implements SVCSearch.IService1.getListOfStrings04
            Return MyBase.Channel.getListOfStrings04(request)
        End Function
        
        Public Function getListOfStrings04(ByRef SecureID As Integer, ByVal MySql As String, ByRef RC As Boolean, ByRef RetMsg As String, ByVal UserId As String, ByVal SessionID As String) As SVCSearch.DS_ListOfStrings04()
            Dim inValue As SVCSearch.getListOfStrings04Request = New SVCSearch.getListOfStrings04Request()
            inValue.SecureID = SecureID
            inValue.MySql = MySql
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            inValue.UserId = UserId
            inValue.SessionID = SessionID
            Dim retVal As SVCSearch.getListOfStrings04Response = CType(Me,SVCSearch.IService1).getListOfStrings04(inValue)
            SecureID = retVal.SecureID
            RC = retVal.RC
            RetMsg = retVal.RetMsg
            Return retVal.getListOfStrings04Result
        End Function
        
        Public Function getListOfStrings04Async(ByVal request As SVCSearch.getListOfStrings04Request) As System.Threading.Tasks.Task(Of SVCSearch.getListOfStrings04Response) Implements SVCSearch.IService1.getListOfStrings04Async
            Return MyBase.Channel.getListOfStrings04Async(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_PopulateLibraryUsersGrid(ByVal request As SVCSearch.PopulateLibraryUsersGridRequest) As SVCSearch.PopulateLibraryUsersGridResponse Implements SVCSearch.IService1.PopulateLibraryUsersGrid
            Return MyBase.Channel.PopulateLibraryUsersGrid(request)
        End Function
        
        Public Function PopulateLibraryUsersGrid(ByRef SecureID As Integer, ByVal LibraryName As String, ByVal ckLibUsersOnly As Boolean) As String
            Dim inValue As SVCSearch.PopulateLibraryUsersGridRequest = New SVCSearch.PopulateLibraryUsersGridRequest()
            inValue.SecureID = SecureID
            inValue.LibraryName = LibraryName
            inValue.ckLibUsersOnly = ckLibUsersOnly
            Dim retVal As SVCSearch.PopulateLibraryUsersGridResponse = CType(Me,SVCSearch.IService1).PopulateLibraryUsersGrid(inValue)
            SecureID = retVal.SecureID
            Return retVal.PopulateLibraryUsersGridResult
        End Function
        
        Public Function PopulateLibraryUsersGridAsync(ByVal request As SVCSearch.PopulateLibraryUsersGridRequest) As System.Threading.Tasks.Task(Of SVCSearch.PopulateLibraryUsersGridResponse) Implements SVCSearch.IService1.PopulateLibraryUsersGridAsync
            Return MyBase.Channel.PopulateLibraryUsersGridAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getUserAuth(ByVal request As SVCSearch.getUserAuthRequest) As SVCSearch.getUserAuthResponse Implements SVCSearch.IService1.getUserAuth
            Return MyBase.Channel.getUserAuth(request)
        End Function
        
        Public Function getUserAuth(ByRef SecureID As Integer, ByVal Userid As String) As String
            Dim inValue As SVCSearch.getUserAuthRequest = New SVCSearch.getUserAuthRequest()
            inValue.SecureID = SecureID
            inValue.Userid = Userid
            Dim retVal As SVCSearch.getUserAuthResponse = CType(Me,SVCSearch.IService1).getUserAuth(inValue)
            SecureID = retVal.SecureID
            Return retVal.getUserAuthResult
        End Function
        
        Public Function getUserAuthAsync(ByVal request As SVCSearch.getUserAuthRequest) As System.Threading.Tasks.Task(Of SVCSearch.getUserAuthResponse) Implements SVCSearch.IService1.getUserAuthAsync
            Return MyBase.Channel.getUserAuthAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_DeleteUser(ByVal request As SVCSearch.DeleteUserRequest) As SVCSearch.DeleteUserResponse Implements SVCSearch.IService1.DeleteUser
            Return MyBase.Channel.DeleteUser(request)
        End Function
        
        Public Function DeleteUser(ByRef SecureID As Integer, ByVal SelectedUserGuid As String, ByRef RetMsg As String) As Boolean
            Dim inValue As SVCSearch.DeleteUserRequest = New SVCSearch.DeleteUserRequest()
            inValue.SecureID = SecureID
            inValue.SelectedUserGuid = SelectedUserGuid
            inValue.RetMsg = RetMsg
            Dim retVal As SVCSearch.DeleteUserResponse = CType(Me,SVCSearch.IService1).DeleteUser(inValue)
            SecureID = retVal.SecureID
            RetMsg = retVal.RetMsg
            Return retVal.DeleteUserResult
        End Function
        
        Public Function DeleteUserAsync(ByVal request As SVCSearch.DeleteUserRequest) As System.Threading.Tasks.Task(Of SVCSearch.DeleteUserResponse) Implements SVCSearch.IService1.DeleteUserAsync
            Return MyBase.Channel.DeleteUserAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_SaveUSer(ByVal request As SVCSearch.SaveUSerRequest) As SVCSearch.SaveUSerResponse Implements SVCSearch.IService1.SaveUSer
            Return MyBase.Channel.SaveUSer(request)
        End Function
        
        Public Function SaveUSer( _
                    ByVal SecureID As Integer,  _
                    ByRef UserID As String,  _
                    ByRef UserName As String,  _
                    ByRef EmailAddress As String,  _
                    ByRef UserPassword As String,  _
                    ByRef Admin As String,  _
                    ByRef isActive As String,  _
                    ByRef UserLoginID As String,  _
                    ByRef ClientOnly As Boolean,  _
                    ByRef HiveConnectionName As String,  _
                    ByRef HiveActive As Boolean,  _
                    ByRef RepoSvrName As String,  _
                    ByRef RowCreationDate As Date,  _
                    ByRef RowLastModDate As Date,  _
                    ByRef ActiveGuid As String,  _
                    ByRef RepoName As String,  _
                    ByRef RC As Boolean,  _
                    ByRef RetMsg As String) As Boolean
            Dim inValue As SVCSearch.SaveUSerRequest = New SVCSearch.SaveUSerRequest()
            inValue.SecureID = SecureID
            inValue.UserID = UserID
            inValue.UserName = UserName
            inValue.EmailAddress = EmailAddress
            inValue.UserPassword = UserPassword
            inValue.Admin = Admin
            inValue.isActive = isActive
            inValue.UserLoginID = UserLoginID
            inValue.ClientOnly = ClientOnly
            inValue.HiveConnectionName = HiveConnectionName
            inValue.HiveActive = HiveActive
            inValue.RepoSvrName = RepoSvrName
            inValue.RowCreationDate = RowCreationDate
            inValue.RowLastModDate = RowLastModDate
            inValue.ActiveGuid = ActiveGuid
            inValue.RepoName = RepoName
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            Dim retVal As SVCSearch.SaveUSerResponse = CType(Me,SVCSearch.IService1).SaveUSer(inValue)
            UserID = retVal.UserID
            UserName = retVal.UserName
            EmailAddress = retVal.EmailAddress
            UserPassword = retVal.UserPassword
            Admin = retVal.Admin
            isActive = retVal.isActive
            UserLoginID = retVal.UserLoginID
            ClientOnly = retVal.ClientOnly
            HiveConnectionName = retVal.HiveConnectionName
            HiveActive = retVal.HiveActive
            RepoSvrName = retVal.RepoSvrName
            RowCreationDate = retVal.RowCreationDate
            RowLastModDate = retVal.RowLastModDate
            ActiveGuid = retVal.ActiveGuid
            RepoName = retVal.RepoName
            RC = retVal.RC
            RetMsg = retVal.RetMsg
            Return retVal.SaveUSerResult
        End Function
        
        Public Function SaveUSerAsync(ByVal request As SVCSearch.SaveUSerRequest) As System.Threading.Tasks.Task(Of SVCSearch.SaveUSerResponse) Implements SVCSearch.IService1.SaveUSerAsync
            Return MyBase.Channel.SaveUSerAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_saveSearchSchedule(ByVal request As SVCSearch.saveSearchScheduleRequest) As SVCSearch.saveSearchScheduleResponse Implements SVCSearch.IService1.saveSearchSchedule
            Return MyBase.Channel.saveSearchSchedule(request)
        End Function
        
        Public Function saveSearchSchedule( _
                    ByVal SecureID As Integer,  _
                    ByRef SearchName As String,  _
                    ByRef NotificationSMS As String,  _
                    ByRef SearchDesc As String,  _
                    ByRef OwnerID As String,  _
                    ByRef SearchQuery As String,  _
                    ByRef SendToEmail As String,  _
                    ByRef ScheduleUnit As String,  _
                    ByRef ScheduleHour As String,  _
                    ByRef ScheduleDaysOfWeek As String,  _
                    ByRef ScheduleDaysOfMonth As String,  _
                    ByRef ScheduleMonthOfQtr As String,  _
                    ByRef StartToRunDate As Date,  _
                    ByRef EndRunDate As Date,  _
                    ByRef SearchParameters As String,  _
                    ByRef LastRunDate As Date,  _
                    ByRef NumberOfExecutions As Integer,  _
                    ByRef CreateDate As Date,  _
                    ByRef LastModDate As Date,  _
                    ByRef ScheduleHourInterval As Integer,  _
                    ByRef RepoName As String,  _
                    ByRef RC As Boolean,  _
                    ByRef RetMsg As String) As Boolean
            Dim inValue As SVCSearch.saveSearchScheduleRequest = New SVCSearch.saveSearchScheduleRequest()
            inValue.SecureID = SecureID
            inValue.SearchName = SearchName
            inValue.NotificationSMS = NotificationSMS
            inValue.SearchDesc = SearchDesc
            inValue.OwnerID = OwnerID
            inValue.SearchQuery = SearchQuery
            inValue.SendToEmail = SendToEmail
            inValue.ScheduleUnit = ScheduleUnit
            inValue.ScheduleHour = ScheduleHour
            inValue.ScheduleDaysOfWeek = ScheduleDaysOfWeek
            inValue.ScheduleDaysOfMonth = ScheduleDaysOfMonth
            inValue.ScheduleMonthOfQtr = ScheduleMonthOfQtr
            inValue.StartToRunDate = StartToRunDate
            inValue.EndRunDate = EndRunDate
            inValue.SearchParameters = SearchParameters
            inValue.LastRunDate = LastRunDate
            inValue.NumberOfExecutions = NumberOfExecutions
            inValue.CreateDate = CreateDate
            inValue.LastModDate = LastModDate
            inValue.ScheduleHourInterval = ScheduleHourInterval
            inValue.RepoName = RepoName
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            Dim retVal As SVCSearch.saveSearchScheduleResponse = CType(Me,SVCSearch.IService1).saveSearchSchedule(inValue)
            SearchName = retVal.SearchName
            NotificationSMS = retVal.NotificationSMS
            SearchDesc = retVal.SearchDesc
            OwnerID = retVal.OwnerID
            SearchQuery = retVal.SearchQuery
            SendToEmail = retVal.SendToEmail
            ScheduleUnit = retVal.ScheduleUnit
            ScheduleHour = retVal.ScheduleHour
            ScheduleDaysOfWeek = retVal.ScheduleDaysOfWeek
            ScheduleDaysOfMonth = retVal.ScheduleDaysOfMonth
            ScheduleMonthOfQtr = retVal.ScheduleMonthOfQtr
            StartToRunDate = retVal.StartToRunDate
            EndRunDate = retVal.EndRunDate
            SearchParameters = retVal.SearchParameters
            LastRunDate = retVal.LastRunDate
            NumberOfExecutions = retVal.NumberOfExecutions
            CreateDate = retVal.CreateDate
            LastModDate = retVal.LastModDate
            ScheduleHourInterval = retVal.ScheduleHourInterval
            RepoName = retVal.RepoName
            RC = retVal.RC
            RetMsg = retVal.RetMsg
            Return retVal.saveSearchScheduleResult
        End Function
        
        Public Function saveSearchScheduleAsync(ByVal request As SVCSearch.saveSearchScheduleRequest) As System.Threading.Tasks.Task(Of SVCSearch.saveSearchScheduleResponse) Implements SVCSearch.IService1.saveSearchScheduleAsync
            Return MyBase.Channel.saveSearchScheduleAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function SVCSearch_IService1_getSearchSchedule(ByVal request As SVCSearch.getSearchScheduleRequest) As SVCSearch.getSearchScheduleResponse Implements SVCSearch.IService1.getSearchSchedule
            Return MyBase.Channel.getSearchSchedule(request)
        End Function
        
        Public Function getSearchSchedule( _
                    ByVal SecureID As Integer,  _
                    ByRef SearchName As String,  _
                    ByRef NotificationSMS As String,  _
                    ByRef SearchDesc As String,  _
                    ByRef OwnerID As String,  _
                    ByRef SearchQuery As String,  _
                    ByRef SendToEmail As String,  _
                    ByRef ScheduleUnit As String,  _
                    ByRef ScheduleHour As String,  _
                    ByRef ScheduleDaysOfWeek As String,  _
                    ByRef ScheduleDaysOfMonth As String,  _
                    ByRef ScheduleMonthOfQtr As String,  _
                    ByRef StartToRunDate As Date,  _
                    ByRef EndRunDate As Date,  _
                    ByRef SearchParameters As String,  _
                    ByRef LastRunDate As Date,  _
                    ByRef NumberOfExecutions As Integer,  _
                    ByRef CreateDate As Date,  _
                    ByRef LastModDate As Date,  _
                    ByRef ScheduleHourInterval As Integer,  _
                    ByRef RepoName As String,  _
                    ByRef RC As Boolean,  _
                    ByRef RetMsg As String) As Boolean
            Dim inValue As SVCSearch.getSearchScheduleRequest = New SVCSearch.getSearchScheduleRequest()
            inValue.SecureID = SecureID
            inValue.SearchName = SearchName
            inValue.NotificationSMS = NotificationSMS
            inValue.SearchDesc = SearchDesc
            inValue.OwnerID = OwnerID
            inValue.SearchQuery = SearchQuery
            inValue.SendToEmail = SendToEmail
            inValue.ScheduleUnit = ScheduleUnit
            inValue.ScheduleHour = ScheduleHour
            inValue.ScheduleDaysOfWeek = ScheduleDaysOfWeek
            inValue.ScheduleDaysOfMonth = ScheduleDaysOfMonth
            inValue.ScheduleMonthOfQtr = ScheduleMonthOfQtr
            inValue.StartToRunDate = StartToRunDate
            inValue.EndRunDate = EndRunDate
            inValue.SearchParameters = SearchParameters
            inValue.LastRunDate = LastRunDate
            inValue.NumberOfExecutions = NumberOfExecutions
            inValue.CreateDate = CreateDate
            inValue.LastModDate = LastModDate
            inValue.ScheduleHourInterval = ScheduleHourInterval
            inValue.RepoName = RepoName
            inValue.RC = RC
            inValue.RetMsg = RetMsg
            Dim retVal As SVCSearch.getSearchScheduleResponse = CType(Me,SVCSearch.IService1).getSearchSchedule(inValue)
            SearchName = retVal.SearchName
            NotificationSMS = retVal.NotificationSMS
            SearchDesc = retVal.SearchDesc
            OwnerID = retVal.OwnerID
            SearchQuery = retVal.SearchQuery
            SendToEmail = retVal.SendToEmail
            ScheduleUnit = retVal.ScheduleUnit
            ScheduleHour = retVal.ScheduleHour
            ScheduleDaysOfWeek = retVal.ScheduleDaysOfWeek
            ScheduleDaysOfMonth = retVal.ScheduleDaysOfMonth
            ScheduleMonthOfQtr = retVal.ScheduleMonthOfQtr
            StartToRunDate = retVal.StartToRunDate
            EndRunDate = retVal.EndRunDate
            SearchParameters = retVal.SearchParameters
            LastRunDate = retVal.LastRunDate
            NumberOfExecutions = retVal.NumberOfExecutions
            CreateDate = retVal.CreateDate
            LastModDate = retVal.LastModDate
            ScheduleHourInterval = retVal.ScheduleHourInterval
            RepoName = retVal.RepoName
            RC = retVal.RC
            RetMsg = retVal.RetMsg
            Return retVal.getSearchScheduleResult
        End Function
        
        Public Function getSearchScheduleAsync(ByVal request As SVCSearch.getSearchScheduleRequest) As System.Threading.Tasks.Task(Of SVCSearch.getSearchScheduleResponse) Implements SVCSearch.IService1.getSearchScheduleAsync
            Return MyBase.Channel.getSearchScheduleAsync(request)
        End Function
        
        Public Function InsertCoOwner(ByVal SecureID As Integer, ByVal CurrentOwner As String, ByVal CoOwner As String) As Boolean Implements SVCSearch.IService1.InsertCoOwner
            Return MyBase.Channel.InsertCoOwner(SecureID, CurrentOwner, CoOwner)
        End Function
        
        Public Function InsertCoOwnerAsync(ByVal SecureID As Integer, ByVal CurrentOwner As String, ByVal CoOwner As String) As System.Threading.Tasks.Task(Of Boolean) Implements SVCSearch.IService1.InsertCoOwnerAsync
            Return MyBase.Channel.InsertCoOwnerAsync(SecureID, CurrentOwner, CoOwner)
        End Function
        
        Public Function PopulateCoOwnerGrid(ByVal SecureID As Integer, ByVal UID As String) As String Implements SVCSearch.IService1.PopulateCoOwnerGrid
            Return MyBase.Channel.PopulateCoOwnerGrid(SecureID, UID)
        End Function
        
        Public Function PopulateCoOwnerGridAsync(ByVal SecureID As Integer, ByVal UID As String) As System.Threading.Tasks.Task(Of String) Implements SVCSearch.IService1.PopulateCoOwnerGridAsync
            Return MyBase.Channel.PopulateCoOwnerGridAsync(SecureID, UID)
        End Function
    End Class
End Namespace
